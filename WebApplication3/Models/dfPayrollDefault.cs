//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication3.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class dfPayrollDefault
    {
        public decimal CompanyCode { get; set; }
        public short ValidYear { get; set; }
        public byte ValidMonth { get; set; }
        public short SGKMonthlyDayCount { get; set; }
        public float ShiftHour { get; set; }
        public byte MaxLeaveHourPerMonth { get; set; }
        public float StampDutyRate { get; set; }
        public decimal SeverancePayCeiling { get; set; }
        public int RoundingDigit { get; set; }
        public bool CalculateMissingHoursAsDeduction { get; set; }
        public string MissingHoursDeductionCode { get; set; }
        public bool CloseAccrualMonthWithJobDepartmentDetail { get; set; }
        public float OvertimeRate1 { get; set; }
        public float OvertimeRate2 { get; set; }
        public float OvertimeRate3 { get; set; }
        public float MaxOvertimeHour { get; set; }
        public string MaxOvertimeEarningCode { get; set; }
        public decimal SGKDailyBaseMin { get; set; }
        public decimal SGKDailyBaseMax { get; set; }
        public decimal SGKDailyBaseMinSmallThan16 { get; set; }
        public decimal SGKDailyBaseMaxSmallThan16 { get; set; }
        public bool CalcBeforeTaxForSGKBaseTransferred { get; set; }
        public decimal MinimumWageMin { get; set; }
        public decimal MinimumWageMinSmallThan16 { get; set; }
        public decimal AGIBase { get; set; }
        public decimal AGIBaseSmallThan16 { get; set; }
        public float AGIEmployeeRate { get; set; }
        public float AGISpouseRate { get; set; }
        public float AGIFirstChildRate { get; set; }
        public float AGISecondChildRate { get; set; }
        public float AGIThirdChildRate { get; set; }
        public float AGIUpwardsThreeChildRate { get; set; }
        public decimal IncomeTaxBracket1MaxAmount { get; set; }
        public float IncomeTaxBracket1Rate { get; set; }
        public decimal IncomeTaxBracket2MaxAmount { get; set; }
        public float IncomeTaxBracket2Rate { get; set; }
        public decimal IncomeTaxBracket3MaxAmount { get; set; }
        public float IncomeTaxBracket3Rate { get; set; }
        public decimal IncomeTaxBracket4MaxAmount { get; set; }
        public float IncomeTaxBracket4Rate { get; set; }
        public decimal IncomeTaxBracket5MaxAmount { get; set; }
        public float IncomeTaxBracket5Rate { get; set; }
        public bool UseCompulsoryPensionInsuranceDeduction { get; set; }
        public string CPIDeductionCode { get; set; }
        public float CPIDeductionRate { get; set; }
        public decimal MaxCPIDeductionAmount { get; set; }
        public bool CPINotSubjectToPrivateInsuranceRelief { get; set; }
        public bool IncludePrivateInsuranceBasePaidByEmployer { get; set; }
        public bool GarnishmentAmountCalculateByTotalGarnishmentEarnings { get; set; }
        public string CreatedUserName { get; set; }
        public System.DateTime CreatedDate { get; set; }
        public string LastUpdatedUserName { get; set; }
        public System.DateTime LastUpdatedDate { get; set; }
        public System.Guid RowGuid { get; set; }
        public decimal MinimumWageNetAmount { get; set; }
        public decimal MinimumWageNetAmountWithAGI { get; set; }
        public bool SeveranceBaseCanExceedLegalBase { get; set; }
        public bool AllowedToUseTotalSeverancePayForGarnishment { get; set; }
        public bool AllowedToUseTotalTerminationPayForGarnishment { get; set; }
        public byte MissingWorkSGKBaseTurnoverPolicy { get; set; }
    
        public virtual cdCompany cdCompany { get; set; }
        public virtual cdDeduction cdDeduction { get; set; }
    }
}
