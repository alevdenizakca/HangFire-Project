//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication3.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class V3 : DbContext
    {
        public V3()
            : base("name=V3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<auAirConnTransactionInfo> auAirConnTransactionInfo { get; set; }
        public virtual DbSet<auAirConnZInfo> auAirConnZInfo { get; set; }
        public virtual DbSet<auAllocationTrace> auAllocationTrace { get; set; }
        public virtual DbSet<auAngolaSVCIntegrationInfo> auAngolaSVCIntegrationInfo { get; set; }
        public virtual DbSet<auBankPermit> auBankPermit { get; set; }
        public virtual DbSet<auBasefyServiceLog> auBasefyServiceLog { get; set; }
        public virtual DbSet<auBasePricePermit> auBasePricePermit { get; set; }
        public virtual DbSet<auCancelRetailTransactions> auCancelRetailTransactions { get; set; }
        public virtual DbSet<auCardColumnPermit> auCardColumnPermit { get; set; }
        public virtual DbSet<auCardElementPermit> auCardElementPermit { get; set; }
        public virtual DbSet<auCardPermit> auCardPermit { get; set; }
        public virtual DbSet<auCashPermit> auCashPermit { get; set; }
        public virtual DbSet<auChequeDeny> auChequeDeny { get; set; }
        public virtual DbSet<auChequeDenyTrace> auChequeDenyTrace { get; set; }
        public virtual DbSet<auChequePermit> auChequePermit { get; set; }
        public virtual DbSet<auCreditCardPaymentPermit> auCreditCardPaymentPermit { get; set; }
        public virtual DbSet<auCurrAccBadDebtStatusTrace> auCurrAccBadDebtStatusTrace { get; set; }
        public virtual DbSet<auCustomerCompanyBrandAttributeTrace> auCustomerCompanyBrandAttributeTrace { get; set; }
        public virtual DbSet<auCustomQ3XFFPTransactionInfo> auCustomQ3XFFPTransactionInfo { get; set; }
        public virtual DbSet<auCustomsServiceLog> auCustomsServiceLog { get; set; }
        public virtual DbSet<auCustomTablePermit> auCustomTablePermit { get; set; }
        public virtual DbSet<auDataTransferLog> auDataTransferLog { get; set; }
        public virtual DbSet<auDataTransferMissingRecordsTrace> auDataTransferMissingRecordsTrace { get; set; }
        public virtual DbSet<auDataTransferTrace> auDataTransferTrace { get; set; }
        public virtual DbSet<auDebitPermit> auDebitPermit { get; set; }
        public virtual DbSet<auDunadPFRTransactionInfo> auDunadPFRTransactionInfo { get; set; }
        public virtual DbSet<auETTNGuuduuTransactionInfo> auETTNGuuduuTransactionInfo { get; set; }
        public virtual DbSet<auEuromsgSentAccountTrace> auEuromsgSentAccountTrace { get; set; }
        public virtual DbSet<auExpenseSlipPermit> auExpenseSlipPermit { get; set; }
        public virtual DbSet<auFastPayServiceLog> auFastPayServiceLog { get; set; }
        public virtual DbSet<auFiscalPrinterFaultTrace> auFiscalPrinterFaultTrace { get; set; }
        public virtual DbSet<auFiscalPrinterPaymentInfo> auFiscalPrinterPaymentInfo { get; set; }
        public virtual DbSet<auFixEInvoiceStatusCodes> auFixEInvoiceStatusCodes { get; set; }
        public virtual DbSet<auFixPaymentTrace> auFixPaymentTrace { get; set; }
        public virtual DbSet<auGettingDataTransferTraceHeader> auGettingDataTransferTraceHeader { get; set; }
        public virtual DbSet<auGettingDataTransferTraceLine> auGettingDataTransferTraceLine { get; set; }
        public virtual DbSet<auGlobalDefaultTrace> auGlobalDefaultTrace { get; set; }
        public virtual DbSet<auInnerProcessPermit> auInnerProcessPermit { get; set; }
        public virtual DbSet<auInnerTrace> auInnerTrace { get; set; }
        public virtual DbSet<auInteractiveSMSTrace> auInteractiveSMSTrace { get; set; }
        public virtual DbSet<auInvoiceDufrySendStatus> auInvoiceDufrySendStatus { get; set; }
        public virtual DbSet<auInvoiceReprintTrace> auInvoiceReprintTrace { get; set; }
        public virtual DbSet<auInvoiceTrace> auInvoiceTrace { get; set; }
        public virtual DbSet<auInvoiceTsmTransactionInfo> auInvoiceTsmTransactionInfo { get; set; }
        public virtual DbSet<auInvoiceUnifreeSendStatus> auInvoiceUnifreeSendStatus { get; set; }
        public virtual DbSet<auItemCopyTrace> auItemCopyTrace { get; set; }
        public virtual DbSet<auItemTest> auItemTest { get; set; }
        public virtual DbSet<auIyzicoServiceLog> auIyzicoServiceLog { get; set; }
        public virtual DbSet<auJournalPermit> auJournalPermit { get; set; }
        public virtual DbSet<auMarketPlaceServiceTrace> auMarketPlaceServiceTrace { get; set; }
        public virtual DbSet<auMergeRetailCustomerTrace> auMergeRetailCustomerTrace { get; set; }
        public virtual DbSet<auMernisQueryTrace> auMernisQueryTrace { get; set; }
        public virtual DbSet<auMobilDevServiceLog> auMobilDevServiceLog { get; set; }
        public virtual DbSet<auMobileStorePermit> auMobileStorePermit { get; set; }
        public virtual DbSet<auMobilRevenueReportPermit> auMobilRevenueReportPermit { get; set; }
        public virtual DbSet<auN2AnimaServiceLog> auN2AnimaServiceLog { get; set; }
        public virtual DbSet<auOpenDrawerWithNoSaleTrace> auOpenDrawerWithNoSaleTrace { get; set; }
        public virtual DbSet<auOptInOptOutTrace> auOptInOptOutTrace { get; set; }
        public virtual DbSet<auPaymentPermit> auPaymentPermit { get; set; }
        public virtual DbSet<auPaymentReprintTrace> auPaymentReprintTrace { get; set; }
        public virtual DbSet<auPaynetServiceLog> auPaynetServiceLog { get; set; }
        public virtual DbSet<auPlanetPaymentServiceLog> auPlanetPaymentServiceLog { get; set; }
        public virtual DbSet<auPosTerminalLoginTrace> auPosTerminalLoginTrace { get; set; }
        public virtual DbSet<auPriceListPermit> auPriceListPermit { get; set; }
        public virtual DbSet<auProcessFlowDeny> auProcessFlowDeny { get; set; }
        public virtual DbSet<auProcessFlowDenyTrace> auProcessFlowDenyTrace { get; set; }
        public virtual DbSet<auProcessPermit> auProcessPermit { get; set; }
        public virtual DbSet<auProformaProcessPermit> auProformaProcessPermit { get; set; }
        public virtual DbSet<auProgramPermit> auProgramPermit { get; set; }
        public virtual DbSet<auProgramUseTrace> auProgramUseTrace { get; set; }
        public virtual DbSet<auProposalLineRevisionTrace> auProposalLineRevisionTrace { get; set; }
        public virtual DbSet<auPurchaseRequisitionLineRevisionTrace> auPurchaseRequisitionLineRevisionTrace { get; set; }
        public virtual DbSet<auPurchaseRequisitionPermit> auPurchaseRequisitionPermit { get; set; }
        public virtual DbSet<auPurchaseRequisitionProposalPermit> auPurchaseRequisitionProposalPermit { get; set; }
        public virtual DbSet<auPurchaseRequisitionProposalRevisionTrace> auPurchaseRequisitionProposalRevisionTrace { get; set; }
        public virtual DbSet<auReconciliationReportNotificationTrace> auReconciliationReportNotificationTrace { get; set; }
        public virtual DbSet<auReportFilterMinMaxDateValue> auReportFilterMinMaxDateValue { get; set; }
        public virtual DbSet<auReportQueryPermit> auReportQueryPermit { get; set; }
        public virtual DbSet<auRetailCustomerIdentitySharingSystemTrace> auRetailCustomerIdentitySharingSystemTrace { get; set; }
        public virtual DbSet<auRetailInvoiceLineChangeTrace> auRetailInvoiceLineChangeTrace { get; set; }
        public virtual DbSet<auSendingDataTransferTrace> auSendingDataTransferTrace { get; set; }
        public virtual DbSet<auShipmentReprintTrace> auShipmentReprintTrace { get; set; }
        public virtual DbSet<auShipmentTrace> auShipmentTrace { get; set; }
        public virtual DbSet<auSoftekESIRLinkTransactionInfo> auSoftekESIRLinkTransactionInfo { get; set; }
        public virtual DbSet<auSupportRequest> auSupportRequest { get; set; }
        public virtual DbSet<auSurveyPermit> auSurveyPermit { get; set; }
        public virtual DbSet<auSurveySectionPermit> auSurveySectionPermit { get; set; }
        public virtual DbSet<auTransactionCheckInOutTrace> auTransactionCheckInOutTrace { get; set; }
        public virtual DbSet<auTransferPlanTrace> auTransferPlanTrace { get; set; }
        public virtual DbSet<auTRAVFDTransactionInfo> auTRAVFDTransactionInfo { get; set; }
        public virtual DbSet<auTRINGT202TransactionInfo> auTRINGT202TransactionInfo { get; set; }
        public virtual DbSet<auTsmIntegratorPaymentInfo> auTsmIntegratorPaymentInfo { get; set; }
        public virtual DbSet<auTsmPosPaymentInfo> auTsmPosPaymentInfo { get; set; }
        public virtual DbSet<auTsmTransactionInfo> auTsmTransactionInfo { get; set; }
        public virtual DbSet<auTuratelServiceLog> auTuratelServiceLog { get; set; }
        public virtual DbSet<auUmicoServiceLog> auUmicoServiceLog { get; set; }
        public virtual DbSet<auUnifreeServiceLog> auUnifreeServiceLog { get; set; }
        public virtual DbSet<auUpdateItemCodeTrace> auUpdateItemCodeTrace { get; set; }
        public virtual DbSet<auVehicleLoadingPermit> auVehicleLoadingPermit { get; set; }
        public virtual DbSet<auVehicleUnLoadingPermit> auVehicleUnLoadingPermit { get; set; }
        public virtual DbSet<auVerifoneProcessTrace> auVerifoneProcessTrace { get; set; }
        public virtual DbSet<auWebTelZATCATransactionInfo> auWebTelZATCATransactionInfo { get; set; }
        public virtual DbSet<bsAccountDetail> bsAccountDetail { get; set; }
        public virtual DbSet<bsAccountDetailDesc> bsAccountDetailDesc { get; set; }
        public virtual DbSet<bsAdjustCostMethod> bsAdjustCostMethod { get; set; }
        public virtual DbSet<bsAdjustCostMethodDesc> bsAdjustCostMethodDesc { get; set; }
        public virtual DbSet<bsAirportIATA> bsAirportIATA { get; set; }
        public virtual DbSet<bsAirportIATADesc> bsAirportIATADesc { get; set; }
        public virtual DbSet<bsAllocationRule> bsAllocationRule { get; set; }
        public virtual DbSet<bsAllocationRuleDesc> bsAllocationRuleDesc { get; set; }
        public virtual DbSet<bsAllocationSourceType> bsAllocationSourceType { get; set; }
        public virtual DbSet<bsAllocationSourceTypeDesc> bsAllocationSourceTypeDesc { get; set; }
        public virtual DbSet<bsApplication> bsApplication { get; set; }
        public virtual DbSet<bsApplicationDesc> bsApplicationDesc { get; set; }
        public virtual DbSet<bsBadDebtResult> bsBadDebtResult { get; set; }
        public virtual DbSet<bsBadDebtResultDesc> bsBadDebtResultDesc { get; set; }
        public virtual DbSet<bsBadDebtTransType> bsBadDebtTransType { get; set; }
        public virtual DbSet<bsBadDebtTransTypeDesc> bsBadDebtTransTypeDesc { get; set; }
        public virtual DbSet<bsBankAdditionalChargeType> bsBankAdditionalChargeType { get; set; }
        public virtual DbSet<bsBankAdditionalChargeTypeDesc> bsBankAdditionalChargeTypeDesc { get; set; }
        public virtual DbSet<bsBankCardType> bsBankCardType { get; set; }
        public virtual DbSet<bsBankCardTypeDesc> bsBankCardTypeDesc { get; set; }
        public virtual DbSet<bsBankCreditGuaranteeType> bsBankCreditGuaranteeType { get; set; }
        public virtual DbSet<bsBankCreditGuaranteeTypeDesc> bsBankCreditGuaranteeTypeDesc { get; set; }
        public virtual DbSet<bsBankPOSImportType> bsBankPOSImportType { get; set; }
        public virtual DbSet<bsBankPOSImportTypeDesc> bsBankPOSImportTypeDesc { get; set; }
        public virtual DbSet<bsBankPOSProvider> bsBankPOSProvider { get; set; }
        public virtual DbSet<bsBankTransType> bsBankTransType { get; set; }
        public virtual DbSet<bsBankTransTypeDesc> bsBankTransTypeDesc { get; set; }
        public virtual DbSet<bsBasePrice> bsBasePrice { get; set; }
        public virtual DbSet<bsBasePriceDesc> bsBasePriceDesc { get; set; }
        public virtual DbSet<bsBOMEntityLevel> bsBOMEntityLevel { get; set; }
        public virtual DbSet<bsBOMEntityLevelDesc> bsBOMEntityLevelDesc { get; set; }
        public virtual DbSet<bsBrowseMethodType> bsBrowseMethodType { get; set; }
        public virtual DbSet<bsBrowseMethodTypeDesc> bsBrowseMethodTypeDesc { get; set; }
        public virtual DbSet<bsBudgetDetail> bsBudgetDetail { get; set; }
        public virtual DbSet<bsBudgetDetailDesc> bsBudgetDetailDesc { get; set; }
        public virtual DbSet<bsBulkMailServiceProvider> bsBulkMailServiceProvider { get; set; }
        public virtual DbSet<bsBulkMailServiceProviderDesc> bsBulkMailServiceProviderDesc { get; set; }
        public virtual DbSet<bsCashTransType> bsCashTransType { get; set; }
        public virtual DbSet<bsCashTransTypeDesc> bsCashTransTypeDesc { get; set; }
        public virtual DbSet<bsChannelType> bsChannelType { get; set; }
        public virtual DbSet<bsChannelTypeDesc> bsChannelTypeDesc { get; set; }
        public virtual DbSet<bsChequeTransType> bsChequeTransType { get; set; }
        public virtual DbSet<bsChequeTransTypeDesc> bsChequeTransTypeDesc { get; set; }
        public virtual DbSet<bsChequeType> bsChequeType { get; set; }
        public virtual DbSet<bsChequeTypeDesc> bsChequeTypeDesc { get; set; }
        public virtual DbSet<bsCommunicationKind> bsCommunicationKind { get; set; }
        public virtual DbSet<bsCommunicationKindDesc> bsCommunicationKindDesc { get; set; }
        public virtual DbSet<bsConfirmationRuleType> bsConfirmationRuleType { get; set; }
        public virtual DbSet<bsConfirmationRuleTypeDesc> bsConfirmationRuleTypeDesc { get; set; }
        public virtual DbSet<bsConfirmationStatus> bsConfirmationStatus { get; set; }
        public virtual DbSet<bsConfirmationStatusDesc> bsConfirmationStatusDesc { get; set; }
        public virtual DbSet<bsConfirmationType> bsConfirmationType { get; set; }
        public virtual DbSet<bsConfirmationTypeDesc> bsConfirmationTypeDesc { get; set; }
        public virtual DbSet<bsConsentSource> bsConsentSource { get; set; }
        public virtual DbSet<bsContractType> bsContractType { get; set; }
        public virtual DbSet<bsContractTypeDesc> bsContractTypeDesc { get; set; }
        public virtual DbSet<bsCostingLevel> bsCostingLevel { get; set; }
        public virtual DbSet<bsCostingLevelDesc> bsCostingLevelDesc { get; set; }
        public virtual DbSet<bsCostingMethod> bsCostingMethod { get; set; }
        public virtual DbSet<bsCostingMethodDesc> bsCostingMethodDesc { get; set; }
        public virtual DbSet<bsCostingVariantLevel> bsCostingVariantLevel { get; set; }
        public virtual DbSet<bsCostingVariantLevelDesc> bsCostingVariantLevelDesc { get; set; }
        public virtual DbSet<bsCountryISO> bsCountryISO { get; set; }
        public virtual DbSet<bsCreditCardPaymentType> bsCreditCardPaymentType { get; set; }
        public virtual DbSet<bsCreditCardPaymentTypeDesc> bsCreditCardPaymentTypeDesc { get; set; }
        public virtual DbSet<bsCreditType> bsCreditType { get; set; }
        public virtual DbSet<bsCreditTypeDesc> bsCreditTypeDesc { get; set; }
        public virtual DbSet<bsCurrAccType> bsCurrAccType { get; set; }
        public virtual DbSet<bsCurrAccTypeDesc> bsCurrAccTypeDesc { get; set; }
        public virtual DbSet<bsCustomerType> bsCustomerType { get; set; }
        public virtual DbSet<bsCustomerTypeDesc> bsCustomerTypeDesc { get; set; }
        public virtual DbSet<bsCustomizedQuery> bsCustomizedQuery { get; set; }
        public virtual DbSet<bsCustomizedSQLObject> bsCustomizedSQLObject { get; set; }
        public virtual DbSet<bsCustomsProductGroup> bsCustomsProductGroup { get; set; }
        public virtual DbSet<bsCustomsProductGroupDesc> bsCustomsProductGroupDesc { get; set; }
        public virtual DbSet<bsDataTransferConvertType> bsDataTransferConvertType { get; set; }
        public virtual DbSet<bsDataTransferTableList> bsDataTransferTableList { get; set; }
        public virtual DbSet<bsDataTransferValidateColumnList> bsDataTransferValidateColumnList { get; set; }
        public virtual DbSet<bsDay> bsDay { get; set; }
        public virtual DbSet<bsDayDesc> bsDayDesc { get; set; }
        public virtual DbSet<bsDebitType> bsDebitType { get; set; }
        public virtual DbSet<bsDebitTypeDesc> bsDebitTypeDesc { get; set; }
        public virtual DbSet<bsDebtStatusType> bsDebtStatusType { get; set; }
        public virtual DbSet<bsDebtStatusTypeDesc> bsDebtStatusTypeDesc { get; set; }
        public virtual DbSet<bsDeclarationCapacity> bsDeclarationCapacity { get; set; }
        public virtual DbSet<bsDeclarationCapacityDesc> bsDeclarationCapacityDesc { get; set; }
        public virtual DbSet<bsDeclarationPostType> bsDeclarationPostType { get; set; }
        public virtual DbSet<bsDeclarationType> bsDeclarationType { get; set; }
        public virtual DbSet<bsDeclarationTypeDesc> bsDeclarationTypeDesc { get; set; }
        public virtual DbSet<bsDepreciationMethod> bsDepreciationMethod { get; set; }
        public virtual DbSet<bsDepreciationMethodDesc> bsDepreciationMethodDesc { get; set; }
        public virtual DbSet<bsDevice> bsDevice { get; set; }
        public virtual DbSet<bsDeviceDesc> bsDeviceDesc { get; set; }
        public virtual DbSet<bsDeviceType> bsDeviceType { get; set; }
        public virtual DbSet<bsDeviceTypeDesc> bsDeviceTypeDesc { get; set; }
        public virtual DbSet<bsDiscountLevelOfUse> bsDiscountLevelOfUse { get; set; }
        public virtual DbSet<bsDiscountLevelOfUseDesc> bsDiscountLevelOfUseDesc { get; set; }
        public virtual DbSet<bsDiscountOfferApply> bsDiscountOfferApply { get; set; }
        public virtual DbSet<bsDiscountOfferApplyDesc> bsDiscountOfferApplyDesc { get; set; }
        public virtual DbSet<bsDiscountOfferMethod> bsDiscountOfferMethod { get; set; }
        public virtual DbSet<bsDiscountOfferMethodDesc> bsDiscountOfferMethodDesc { get; set; }
        public virtual DbSet<bsDiscountOfferStage> bsDiscountOfferStage { get; set; }
        public virtual DbSet<bsDiscountOfferStageDesc> bsDiscountOfferStageDesc { get; set; }
        public virtual DbSet<bsDiscountOfferType> bsDiscountOfferType { get; set; }
        public virtual DbSet<bsDiscountOfferTypeDesc> bsDiscountOfferTypeDesc { get; set; }
        public virtual DbSet<bsDiscountVoucherBase> bsDiscountVoucherBase { get; set; }
        public virtual DbSet<bsDiscountVoucherBaseDesc> bsDiscountVoucherBaseDesc { get; set; }
        public virtual DbSet<bsDispOrderType> bsDispOrderType { get; set; }
        public virtual DbSet<bsDispOrderTypeDesc> bsDispOrderTypeDesc { get; set; }
        public virtual DbSet<bsDocumentType> bsDocumentType { get; set; }
        public virtual DbSet<bsDocumentTypeDesc> bsDocumentTypeDesc { get; set; }
        public virtual DbSet<bsEasyStartupSteps> bsEasyStartupSteps { get; set; }
        public virtual DbSet<bsEasyStartupStepsDesc> bsEasyStartupStepsDesc { get; set; }
        public virtual DbSet<bsEditMask> bsEditMask { get; set; }
        public virtual DbSet<bsEditMaskDesc> bsEditMaskDesc { get; set; }
        public virtual DbSet<bsEInvoiceStatus> bsEInvoiceStatus { get; set; }
        public virtual DbSet<bsEInvoiceStatusDesc> bsEInvoiceStatusDesc { get; set; }
        public virtual DbSet<bsEmailType> bsEmailType { get; set; }
        public virtual DbSet<bsEmailTypeDesc> bsEmailTypeDesc { get; set; }
        public virtual DbSet<bsEmployeePayType> bsEmployeePayType { get; set; }
        public virtual DbSet<bsEmployeePayTypeDesc> bsEmployeePayTypeDesc { get; set; }
        public virtual DbSet<bsEmployeeSpecialType> bsEmployeeSpecialType { get; set; }
        public virtual DbSet<bsEmployeeSpecialTypeDesc> bsEmployeeSpecialTypeDesc { get; set; }
        public virtual DbSet<bsEShipmentStatus> bsEShipmentStatus { get; set; }
        public virtual DbSet<bsEShipmentStatusDesc> bsEShipmentStatusDesc { get; set; }
        public virtual DbSet<bsExpenseSlipType> bsExpenseSlipType { get; set; }
        public virtual DbSet<bsExpenseSlipTypeDesc> bsExpenseSlipTypeDesc { get; set; }
        public virtual DbSet<bsEyeGlassSutType> bsEyeGlassSutType { get; set; }
        public virtual DbSet<bsEyeGlassSutTypeDesc> bsEyeGlassSutTypeDesc { get; set; }
        public virtual DbSet<bsFastDeliveryCompany> bsFastDeliveryCompany { get; set; }
        public virtual DbSet<bsFastDeliveryCompanyDesc> bsFastDeliveryCompanyDesc { get; set; }
        public virtual DbSet<bsFileFormatType> bsFileFormatType { get; set; }
        public virtual DbSet<bsFileFormatTypeDesc> bsFileFormatTypeDesc { get; set; }
        public virtual DbSet<bsFolder> bsFolder { get; set; }
        public virtual DbSet<bsFolderDesc> bsFolderDesc { get; set; }
        public virtual DbSet<bsFormatType> bsFormatType { get; set; }
        public virtual DbSet<bsFormatTypeDesc> bsFormatTypeDesc { get; set; }
        public virtual DbSet<bsGatewayServiceProvider> bsGatewayServiceProvider { get; set; }
        public virtual DbSet<bsGender> bsGender { get; set; }
        public virtual DbSet<bsGenderDesc> bsGenderDesc { get; set; }
        public virtual DbSet<bsGettingData> bsGettingData { get; set; }
        public virtual DbSet<bsGiftCardPaymentType> bsGiftCardPaymentType { get; set; }
        public virtual DbSet<bsGiftCardPaymentTypeDesc> bsGiftCardPaymentTypeDesc { get; set; }
        public virtual DbSet<bsGlassIndex> bsGlassIndex { get; set; }
        public virtual DbSet<bsIncompleteDownPaymentDistributionType> bsIncompleteDownPaymentDistributionType { get; set; }
        public virtual DbSet<bsIncompleteDownPaymentDistributionTypeDesc> bsIncompleteDownPaymentDistributionTypeDesc { get; set; }
        public virtual DbSet<bsIncoterm> bsIncoterm { get; set; }
        public virtual DbSet<bsIncotermDesc> bsIncotermDesc { get; set; }
        public virtual DbSet<bsInnerOrderType> bsInnerOrderType { get; set; }
        public virtual DbSet<bsInnerOrderTypeDesc> bsInnerOrderTypeDesc { get; set; }
        public virtual DbSet<bsInnerProcess> bsInnerProcess { get; set; }
        public virtual DbSet<bsInnerProcessDesc> bsInnerProcessDesc { get; set; }
        public virtual DbSet<bsInternetPaymentType> bsInternetPaymentType { get; set; }
        public virtual DbSet<bsInvoiceReturnType> bsInvoiceReturnType { get; set; }
        public virtual DbSet<bsInvoiceReturnTypeDesc> bsInvoiceReturnTypeDesc { get; set; }
        public virtual DbSet<bsInvoiceType> bsInvoiceType { get; set; }
        public virtual DbSet<bsInvoiceTypeDesc> bsInvoiceTypeDesc { get; set; }
        public virtual DbSet<bsItemDimType> bsItemDimType { get; set; }
        public virtual DbSet<bsItemDimTypeDesc> bsItemDimTypeDesc { get; set; }
        public virtual DbSet<bsItemProcessPermitType> bsItemProcessPermitType { get; set; }
        public virtual DbSet<bsItemProcessPermitTypeDesc> bsItemProcessPermitTypeDesc { get; set; }
        public virtual DbSet<bsItemType> bsItemType { get; set; }
        public virtual DbSet<bsItemTypeDesc> bsItemTypeDesc { get; set; }
        public virtual DbSet<bsJournalType> bsJournalType { get; set; }
        public virtual DbSet<bsJournalTypeDesc> bsJournalTypeDesc { get; set; }
        public virtual DbSet<bsLensType> bsLensType { get; set; }
        public virtual DbSet<bsLensTypeDesc> bsLensTypeDesc { get; set; }
        public virtual DbSet<bsLetterOfGuaranteeType> bsLetterOfGuaranteeType { get; set; }
        public virtual DbSet<bsLetterOfGuaranteeTypeDesc> bsLetterOfGuaranteeTypeDesc { get; set; }
        public virtual DbSet<bsLinkedProductType> bsLinkedProductType { get; set; }
        public virtual DbSet<bsLinkedProductTypeDesc> bsLinkedProductTypeDesc { get; set; }
        public virtual DbSet<bsMarketPlace> bsMarketPlace { get; set; }
        public virtual DbSet<bsMessageImportance> bsMessageImportance { get; set; }
        public virtual DbSet<bsMessageImportanceDesc> bsMessageImportanceDesc { get; set; }
        public virtual DbSet<bsMMSBusinessPartner> bsMMSBusinessPartner { get; set; }
        public virtual DbSet<bsMT940Process> bsMT940Process { get; set; }
        public virtual DbSet<bsNebimV3HotfixVersion> bsNebimV3HotfixVersion { get; set; }
        public virtual DbSet<bsNebimV3Services> bsNebimV3Services { get; set; }
        public virtual DbSet<bsNebimV3ServicesDesc> bsNebimV3ServicesDesc { get; set; }
        public virtual DbSet<bsNebimV3Version> bsNebimV3Version { get; set; }
        public virtual DbSet<bsOfficialTaxType> bsOfficialTaxType { get; set; }
        public virtual DbSet<bsOrderDeliveryRecordType> bsOrderDeliveryRecordType { get; set; }
        public virtual DbSet<bsOrderDeliveryRecordTypeDesc> bsOrderDeliveryRecordTypeDesc { get; set; }
        public virtual DbSet<bsOrderType> bsOrderType { get; set; }
        public virtual DbSet<bsOrderTypeDesc> bsOrderTypeDesc { get; set; }
        public virtual DbSet<bsOtherPaymentType> bsOtherPaymentType { get; set; }
        public virtual DbSet<bsOtherPaymentTypeDesc> bsOtherPaymentTypeDesc { get; set; }
        public virtual DbSet<bsPackagingType> bsPackagingType { get; set; }
        public virtual DbSet<bsPackagingTypeDesc> bsPackagingTypeDesc { get; set; }
        public virtual DbSet<bsPaymentMeans> bsPaymentMeans { get; set; }
        public virtual DbSet<bsPaymentMeansDesc> bsPaymentMeansDesc { get; set; }
        public virtual DbSet<bsPaymentType> bsPaymentType { get; set; }
        public virtual DbSet<bsPaymentTypeDesc> bsPaymentTypeDesc { get; set; }
        public virtual DbSet<bsPayType> bsPayType { get; set; }
        public virtual DbSet<bsPayTypeDesc> bsPayTypeDesc { get; set; }
        public virtual DbSet<bsPDCQueryList> bsPDCQueryList { get; set; }
        public virtual DbSet<bsPickingType> bsPickingType { get; set; }
        public virtual DbSet<bsPickingTypeDesc> bsPickingTypeDesc { get; set; }
        public virtual DbSet<bsPointBase> bsPointBase { get; set; }
        public virtual DbSet<bsPointBaseDesc> bsPointBaseDesc { get; set; }
        public virtual DbSet<bsPointRecordType> bsPointRecordType { get; set; }
        public virtual DbSet<bsPointRecordTypeDesc> bsPointRecordTypeDesc { get; set; }
        public virtual DbSet<bsPolicyCustomerEdit> bsPolicyCustomerEdit { get; set; }
        public virtual DbSet<bsPolicyCustomerEditDesc> bsPolicyCustomerEditDesc { get; set; }
        public virtual DbSet<bsPolicyCustomerPayment> bsPolicyCustomerPayment { get; set; }
        public virtual DbSet<bsPolicyCustomerPaymentDesc> bsPolicyCustomerPaymentDesc { get; set; }
        public virtual DbSet<bsPolicyCustomerSharing> bsPolicyCustomerSharing { get; set; }
        public virtual DbSet<bsPolicyCustomerSharingDesc> bsPolicyCustomerSharingDesc { get; set; }
        public virtual DbSet<bsPolicyVendorSharing> bsPolicyVendorSharing { get; set; }
        public virtual DbSet<bsPolicyVendorSharingDesc> bsPolicyVendorSharingDesc { get; set; }
        public virtual DbSet<bsPOSMode> bsPOSMode { get; set; }
        public virtual DbSet<bsPOSModeDesc> bsPOSModeDesc { get; set; }
        public virtual DbSet<bsPostAccType> bsPostAccType { get; set; }
        public virtual DbSet<bsPostAccTypeDesc> bsPostAccTypeDesc { get; set; }
        public virtual DbSet<bsPresentCardActivationProcess> bsPresentCardActivationProcess { get; set; }
        public virtual DbSet<bsPresentCardActivationProcessDesc> bsPresentCardActivationProcessDesc { get; set; }
        public virtual DbSet<bsPresentCardActivationStatus> bsPresentCardActivationStatus { get; set; }
        public virtual DbSet<bsPresentCardActivationStatusDesc> bsPresentCardActivationStatusDesc { get; set; }
        public virtual DbSet<bsPresentCardActivationType> bsPresentCardActivationType { get; set; }
        public virtual DbSet<bsPresentCardActivationTypeDesc> bsPresentCardActivationTypeDesc { get; set; }
        public virtual DbSet<bsProcess> bsProcess { get; set; }
        public virtual DbSet<bsProcessDesc> bsProcessDesc { get; set; }
        public virtual DbSet<bsProcessFlow> bsProcessFlow { get; set; }
        public virtual DbSet<bsProcessFlowDesc> bsProcessFlowDesc { get; set; }
        public virtual DbSet<bsProductType> bsProductType { get; set; }
        public virtual DbSet<bsProductTypeDesc> bsProductTypeDesc { get; set; }
        public virtual DbSet<bsQuery> bsQuery { get; set; }
        public virtual DbSet<bsQueryCustom> bsQueryCustom { get; set; }
        public virtual DbSet<bsQuestionInputType> bsQuestionInputType { get; set; }
        public virtual DbSet<bsQuestionInputTypeDesc> bsQuestionInputTypeDesc { get; set; }
        public virtual DbSet<bsReconciliationType> bsReconciliationType { get; set; }
        public virtual DbSet<bsReconciliationTypeDesc> bsReconciliationTypeDesc { get; set; }
        public virtual DbSet<bsReserveType> bsReserveType { get; set; }
        public virtual DbSet<bsReserveTypeDesc> bsReserveTypeDesc { get; set; }
        public virtual DbSet<bsRetailCustomerConditionalRequiredFields> bsRetailCustomerConditionalRequiredFields { get; set; }
        public virtual DbSet<bsSendingData> bsSendingData { get; set; }
        public virtual DbSet<bsSGKInsuaranceType> bsSGKInsuaranceType { get; set; }
        public virtual DbSet<bsSGKInsuaranceTypeDesc> bsSGKInsuaranceTypeDesc { get; set; }
        public virtual DbSet<bsSGKMission> bsSGKMission { get; set; }
        public virtual DbSet<bsSGKMissionDesc> bsSGKMissionDesc { get; set; }
        public virtual DbSet<bsSGKWorkPlaceSector> bsSGKWorkPlaceSector { get; set; }
        public virtual DbSet<bsSGKWorkPlaceSectorDesc> bsSGKWorkPlaceSectorDesc { get; set; }
        public virtual DbSet<bsShipmentType> bsShipmentType { get; set; }
        public virtual DbSet<bsShipmentTypeDesc> bsShipmentTypeDesc { get; set; }
        public virtual DbSet<bsSMSGatewayServiceCompany> bsSMSGatewayServiceCompany { get; set; }
        public virtual DbSet<bsSMSStatus> bsSMSStatus { get; set; }
        public virtual DbSet<bsSMSStatusDesc> bsSMSStatusDesc { get; set; }
        public virtual DbSet<bsStandardBarcodeType> bsStandardBarcodeType { get; set; }
        public virtual DbSet<bsStandardBarcodeTypeDesc> bsStandardBarcodeTypeDesc { get; set; }
        public virtual DbSet<bsSupportType> bsSupportType { get; set; }
        public virtual DbSet<bsSupportTypeDesc> bsSupportTypeDesc { get; set; }
        public virtual DbSet<bsTaxExemption> bsTaxExemption { get; set; }
        public virtual DbSet<bsTaxExemptionDesc> bsTaxExemptionDesc { get; set; }
        public virtual DbSet<bsTaxFreeRefundCompany> bsTaxFreeRefundCompany { get; set; }
        public virtual DbSet<bsTaxPaymentAccType> bsTaxPaymentAccType { get; set; }
        public virtual DbSet<bsTaxPaymentAccTypeDesc> bsTaxPaymentAccTypeDesc { get; set; }
        public virtual DbSet<bsTaxPaymentType> bsTaxPaymentType { get; set; }
        public virtual DbSet<bsTaxPaymentTypeDesc> bsTaxPaymentTypeDesc { get; set; }
        public virtual DbSet<bsTaxType> bsTaxType { get; set; }
        public virtual DbSet<bsTaxTypeDesc> bsTaxTypeDesc { get; set; }
        public virtual DbSet<bsTextileCareSymbolGr> bsTextileCareSymbolGr { get; set; }
        public virtual DbSet<bsTextileCareSymbolGrDesc> bsTextileCareSymbolGrDesc { get; set; }
        public virtual DbSet<bsTransferPlanRule> bsTransferPlanRule { get; set; }
        public virtual DbSet<bsTransferPlanRuleDesc> bsTransferPlanRuleDesc { get; set; }
        public virtual DbSet<bsTransportMode> bsTransportMode { get; set; }
        public virtual DbSet<bsTransportModeDesc> bsTransportModeDesc { get; set; }
        public virtual DbSet<bsTransType> bsTransType { get; set; }
        public virtual DbSet<bsTransTypeDesc> bsTransTypeDesc { get; set; }
        public virtual DbSet<bsUBLExtensions> bsUBLExtensions { get; set; }
        public virtual DbSet<bsUTSDeclarationField> bsUTSDeclarationField { get; set; }
        public virtual DbSet<bsVendorType> bsVendorType { get; set; }
        public virtual DbSet<bsVendorTypeDesc> bsVendorTypeDesc { get; set; }
        public virtual DbSet<bsWarehouseOwner> bsWarehouseOwner { get; set; }
        public virtual DbSet<bsWarehouseOwnerDesc> bsWarehouseOwnerDesc { get; set; }
        public virtual DbSet<bsWithHoldingTaxType> bsWithHoldingTaxType { get; set; }
        public virtual DbSet<bsWorkDangerLevel> bsWorkDangerLevel { get; set; }
        public virtual DbSet<bsWorkDangerLevelDesc> bsWorkDangerLevelDesc { get; set; }
        public virtual DbSet<bsWorkplaceKind> bsWorkplaceKind { get; set; }
        public virtual DbSet<bsWorkplaceKindDesc> bsWorkplaceKindDesc { get; set; }
        public virtual DbSet<bsWorkplacePropertyStatus> bsWorkplacePropertyStatus { get; set; }
        public virtual DbSet<bsWorkplacePropertyStatusDesc> bsWorkplacePropertyStatusDesc { get; set; }
        public virtual DbSet<cdAccountant> cdAccountant { get; set; }
        public virtual DbSet<cdAccountantDesc> cdAccountantDesc { get; set; }
        public virtual DbSet<cdAddressShareCompanyWebService> cdAddressShareCompanyWebService { get; set; }
        public virtual DbSet<cdAddressShareCompanyWebServiceDesc> cdAddressShareCompanyWebServiceDesc { get; set; }
        public virtual DbSet<cdAddressType> cdAddressType { get; set; }
        public virtual DbSet<cdAddressTypeDesc> cdAddressTypeDesc { get; set; }
        public virtual DbSet<cdAllocationTemplate> cdAllocationTemplate { get; set; }
        public virtual DbSet<cdAllocationTemplateDesc> cdAllocationTemplateDesc { get; set; }
        public virtual DbSet<cdAmountRule> cdAmountRule { get; set; }
        public virtual DbSet<cdAmountRuleDesc> cdAmountRuleDesc { get; set; }
        public virtual DbSet<cdATAttribute> cdATAttribute { get; set; }
        public virtual DbSet<cdATAttributeDesc> cdATAttributeDesc { get; set; }
        public virtual DbSet<cdATAttributeType> cdATAttributeType { get; set; }
        public virtual DbSet<cdATAttributeTypeDesc> cdATAttributeTypeDesc { get; set; }
        public virtual DbSet<cdBadDebtLetterType> cdBadDebtLetterType { get; set; }
        public virtual DbSet<cdBadDebtLetterTypeDesc> cdBadDebtLetterTypeDesc { get; set; }
        public virtual DbSet<cdBadDebtReason> cdBadDebtReason { get; set; }
        public virtual DbSet<cdBadDebtReasonDesc> cdBadDebtReasonDesc { get; set; }
        public virtual DbSet<cdBank> cdBank { get; set; }
        public virtual DbSet<cdBankAccType> cdBankAccType { get; set; }
        public virtual DbSet<cdBankAccTypeDesc> cdBankAccTypeDesc { get; set; }
        public virtual DbSet<cdBankCreditType> cdBankCreditType { get; set; }
        public virtual DbSet<cdBankCreditTypeDesc> cdBankCreditTypeDesc { get; set; }
        public virtual DbSet<cdBankDesc> cdBankDesc { get; set; }
        public virtual DbSet<cdBankOpType> cdBankOpType { get; set; }
        public virtual DbSet<cdBankOpTypeDesc> cdBankOpTypeDesc { get; set; }
        public virtual DbSet<cdBarcodeCompany> cdBarcodeCompany { get; set; }
        public virtual DbSet<cdBarcodeType> cdBarcodeType { get; set; }
        public virtual DbSet<cdBarcodeTypeDesc> cdBarcodeTypeDesc { get; set; }
        public virtual DbSet<cdBaseMaterial> cdBaseMaterial { get; set; }
        public virtual DbSet<cdBaseMaterialDesc> cdBaseMaterialDesc { get; set; }
        public virtual DbSet<cdBatch> cdBatch { get; set; }
        public virtual DbSet<cdBatchDesc> cdBatchDesc { get; set; }
        public virtual DbSet<cdBatchGroup> cdBatchGroup { get; set; }
        public virtual DbSet<cdBatchGroupDesc> cdBatchGroupDesc { get; set; }
        public virtual DbSet<cdBloodType> cdBloodType { get; set; }
        public virtual DbSet<cdBloodTypeDesc> cdBloodTypeDesc { get; set; }
        public virtual DbSet<cdBOM> cdBOM { get; set; }
        public virtual DbSet<cdBOMDesc> cdBOMDesc { get; set; }
        public virtual DbSet<cdBOMEntity> cdBOMEntity { get; set; }
        public virtual DbSet<cdBOMEntityDesc> cdBOMEntityDesc { get; set; }
        public virtual DbSet<cdBOMTemplate> cdBOMTemplate { get; set; }
        public virtual DbSet<cdBOMTemplateAttribute> cdBOMTemplateAttribute { get; set; }
        public virtual DbSet<cdBOMTemplateAttributeDesc> cdBOMTemplateAttributeDesc { get; set; }
        public virtual DbSet<cdBOMTemplateAttributeType> cdBOMTemplateAttributeType { get; set; }
        public virtual DbSet<cdBOMTemplateAttributeTypeDesc> cdBOMTemplateAttributeTypeDesc { get; set; }
        public virtual DbSet<cdBOMTemplateDesc> cdBOMTemplateDesc { get; set; }
        public virtual DbSet<cdBrand> cdBrand { get; set; }
        public virtual DbSet<cdBrandDesc> cdBrandDesc { get; set; }
        public virtual DbSet<cdBudgetType> cdBudgetType { get; set; }
        public virtual DbSet<cdBudgetTypeDesc> cdBudgetTypeDesc { get; set; }
        public virtual DbSet<cdBusinessGroup> cdBusinessGroup { get; set; }
        public virtual DbSet<cdBusinessGroupDesc> cdBusinessGroupDesc { get; set; }
        public virtual DbSet<cdCareWarning> cdCareWarning { get; set; }
        public virtual DbSet<cdCareWarningDesc> cdCareWarningDesc { get; set; }
        public virtual DbSet<cdCareWarningTemplate> cdCareWarningTemplate { get; set; }
        public virtual DbSet<cdCareWarningTemplateDesc> cdCareWarningTemplateDesc { get; set; }
        public virtual DbSet<cdChannelTemplate> cdChannelTemplate { get; set; }
        public virtual DbSet<cdChannelTemplateDesc> cdChannelTemplateDesc { get; set; }
        public virtual DbSet<cdCheckOutReason> cdCheckOutReason { get; set; }
        public virtual DbSet<cdCheckOutReasonDesc> cdCheckOutReasonDesc { get; set; }
        public virtual DbSet<cdCheque> cdCheque { get; set; }
        public virtual DbSet<cdChequeAttribute> cdChequeAttribute { get; set; }
        public virtual DbSet<cdChequeAttributeDesc> cdChequeAttributeDesc { get; set; }
        public virtual DbSet<cdChequeAttributeType> cdChequeAttributeType { get; set; }
        public virtual DbSet<cdChequeAttributeTypeDesc> cdChequeAttributeTypeDesc { get; set; }
        public virtual DbSet<cdChequeDenyReason> cdChequeDenyReason { get; set; }
        public virtual DbSet<cdChequeDenyReasonDesc> cdChequeDenyReasonDesc { get; set; }
        public virtual DbSet<cdChequeDesc> cdChequeDesc { get; set; }
        public virtual DbSet<cdCity> cdCity { get; set; }
        public virtual DbSet<cdCityDesc> cdCityDesc { get; set; }
        public virtual DbSet<cdCoatingType> cdCoatingType { get; set; }
        public virtual DbSet<cdCoatingTypeDesc> cdCoatingTypeDesc { get; set; }
        public virtual DbSet<cdCollection> cdCollection { get; set; }
        public virtual DbSet<cdCollectionDesc> cdCollectionDesc { get; set; }
        public virtual DbSet<cdColor> cdColor { get; set; }
        public virtual DbSet<cdColorCatalog> cdColorCatalog { get; set; }
        public virtual DbSet<cdColorCatalogDesc> cdColorCatalogDesc { get; set; }
        public virtual DbSet<cdColorDesc> cdColorDesc { get; set; }
        public virtual DbSet<cdColorGroup> cdColorGroup { get; set; }
        public virtual DbSet<cdColorGroupDesc> cdColorGroupDesc { get; set; }
        public virtual DbSet<cdColorTheme> cdColorTheme { get; set; }
        public virtual DbSet<cdColorThemeAttribute> cdColorThemeAttribute { get; set; }
        public virtual DbSet<cdColorThemeAttributeDesc> cdColorThemeAttributeDesc { get; set; }
        public virtual DbSet<cdColorThemeAttributeType> cdColorThemeAttributeType { get; set; }
        public virtual DbSet<cdColorThemeAttributeTypeDesc> cdColorThemeAttributeTypeDesc { get; set; }
        public virtual DbSet<cdColorThemeDesc> cdColorThemeDesc { get; set; }
        public virtual DbSet<cdColorType> cdColorType { get; set; }
        public virtual DbSet<cdColorTypeDesc> cdColorTypeDesc { get; set; }
        public virtual DbSet<cdCommercialRole> cdCommercialRole { get; set; }
        public virtual DbSet<cdCommercialRoleDesc> cdCommercialRoleDesc { get; set; }
        public virtual DbSet<cdCommunicationType> cdCommunicationType { get; set; }
        public virtual DbSet<cdCommunicationTypeDesc> cdCommunicationTypeDesc { get; set; }
        public virtual DbSet<cdCompany> cdCompany { get; set; }
        public virtual DbSet<cdCompanyBrand> cdCompanyBrand { get; set; }
        public virtual DbSet<cdCompanyBrandDesc> cdCompanyBrandDesc { get; set; }
        public virtual DbSet<cdCompanyCreditCard> cdCompanyCreditCard { get; set; }
        public virtual DbSet<cdCompanyCreditCardDesc> cdCompanyCreditCardDesc { get; set; }
        public virtual DbSet<cdConditionType> cdConditionType { get; set; }
        public virtual DbSet<cdConditionTypeDesc> cdConditionTypeDesc { get; set; }
        public virtual DbSet<cdConfirmationFormStatus> cdConfirmationFormStatus { get; set; }
        public virtual DbSet<cdConfirmationFormStatusDesc> cdConfirmationFormStatusDesc { get; set; }
        public virtual DbSet<cdConfirmationFormType> cdConfirmationFormType { get; set; }
        public virtual DbSet<cdConfirmationFormTypeDesc> cdConfirmationFormTypeDesc { get; set; }
        public virtual DbSet<cdConfirmationReason> cdConfirmationReason { get; set; }
        public virtual DbSet<cdConfirmationReasonDesc> cdConfirmationReasonDesc { get; set; }
        public virtual DbSet<cdConfirmationRule> cdConfirmationRule { get; set; }
        public virtual DbSet<cdContactType> cdContactType { get; set; }
        public virtual DbSet<cdContactTypeDesc> cdContactTypeDesc { get; set; }
        public virtual DbSet<cdContainerType> cdContainerType { get; set; }
        public virtual DbSet<cdContainerTypeDesc> cdContainerTypeDesc { get; set; }
        public virtual DbSet<cdContractContent> cdContractContent { get; set; }
        public virtual DbSet<cdContractContentDesc> cdContractContentDesc { get; set; }
        public virtual DbSet<cdContractStatus> cdContractStatus { get; set; }
        public virtual DbSet<cdContractStatusDesc> cdContractStatusDesc { get; set; }
        public virtual DbSet<cdCostCenter> cdCostCenter { get; set; }
        public virtual DbSet<cdCostCenterAttribute> cdCostCenterAttribute { get; set; }
        public virtual DbSet<cdCostCenterAttributeDesc> cdCostCenterAttributeDesc { get; set; }
        public virtual DbSet<cdCostCenterAttributeType> cdCostCenterAttributeType { get; set; }
        public virtual DbSet<cdCostCenterAttributeTypeDesc> cdCostCenterAttributeTypeDesc { get; set; }
        public virtual DbSet<cdCostCenterDesc> cdCostCenterDesc { get; set; }
        public virtual DbSet<cdCostOfGoodsSoldPeriod> cdCostOfGoodsSoldPeriod { get; set; }
        public virtual DbSet<cdCostOfGoodsSoldPeriodDesc> cdCostOfGoodsSoldPeriodDesc { get; set; }
        public virtual DbSet<cdCountry> cdCountry { get; set; }
        public virtual DbSet<cdCountryDesc> cdCountryDesc { get; set; }
        public virtual DbSet<cdCreditCardType> cdCreditCardType { get; set; }
        public virtual DbSet<cdCreditCardTypeDesc> cdCreditCardTypeDesc { get; set; }
        public virtual DbSet<cdCreditSurveyor> cdCreditSurveyor { get; set; }
        public virtual DbSet<cdCurrAcc> cdCurrAcc { get; set; }
        public virtual DbSet<cdCurrAccAttribute> cdCurrAccAttribute { get; set; }
        public virtual DbSet<cdCurrAccAttributeDesc> cdCurrAccAttributeDesc { get; set; }
        public virtual DbSet<cdCurrAccAttributeType> cdCurrAccAttributeType { get; set; }
        public virtual DbSet<cdCurrAccAttributeTypeDesc> cdCurrAccAttributeTypeDesc { get; set; }
        public virtual DbSet<cdCurrAccDesc> cdCurrAccDesc { get; set; }
        public virtual DbSet<cdCurrAccList> cdCurrAccList { get; set; }
        public virtual DbSet<cdCurrAccListDesc> cdCurrAccListDesc { get; set; }
        public virtual DbSet<cdCurrAccLotGr> cdCurrAccLotGr { get; set; }
        public virtual DbSet<cdCurrAccLotGrDesc> cdCurrAccLotGrDesc { get; set; }
        public virtual DbSet<cdCurrency> cdCurrency { get; set; }
        public virtual DbSet<cdCurrencyDesc> cdCurrencyDesc { get; set; }
        public virtual DbSet<cdCustomerAlertColor> cdCustomerAlertColor { get; set; }
        public virtual DbSet<cdCustomerAlertColorDesc> cdCustomerAlertColorDesc { get; set; }
        public virtual DbSet<cdCustomerCompanyBrandAttribute> cdCustomerCompanyBrandAttribute { get; set; }
        public virtual DbSet<cdCustomerCompanyBrandAttributeDesc> cdCustomerCompanyBrandAttributeDesc { get; set; }
        public virtual DbSet<cdCustomerCompanyBrandAttributeType> cdCustomerCompanyBrandAttributeType { get; set; }
        public virtual DbSet<cdCustomerCompanyBrandAttributeTypeDesc> cdCustomerCompanyBrandAttributeTypeDesc { get; set; }
        public virtual DbSet<cdCustomerConversationResult> cdCustomerConversationResult { get; set; }
        public virtual DbSet<cdCustomerConversationResultDesc> cdCustomerConversationResultDesc { get; set; }
        public virtual DbSet<cdCustomerConversationSubject> cdCustomerConversationSubject { get; set; }
        public virtual DbSet<cdCustomerConversationSubjectDesc> cdCustomerConversationSubjectDesc { get; set; }
        public virtual DbSet<cdCustomerConversationSubjectDetail> cdCustomerConversationSubjectDetail { get; set; }
        public virtual DbSet<cdCustomerConversationSubjectDetailDesc> cdCustomerConversationSubjectDetailDesc { get; set; }
        public virtual DbSet<cdCustomerConversationSubtitle> cdCustomerConversationSubtitle { get; set; }
        public virtual DbSet<cdCustomerConversationSubtitleDesc> cdCustomerConversationSubtitleDesc { get; set; }
        public virtual DbSet<cdCustomerCRMGroup> cdCustomerCRMGroup { get; set; }
        public virtual DbSet<cdCustomerCRMGroupDesc> cdCustomerCRMGroupDesc { get; set; }
        public virtual DbSet<cdCustomerDiscountGr> cdCustomerDiscountGr { get; set; }
        public virtual DbSet<cdCustomerDiscountGrDesc> cdCustomerDiscountGrDesc { get; set; }
        public virtual DbSet<cdCustomerMarkupGr> cdCustomerMarkupGr { get; set; }
        public virtual DbSet<cdCustomerMarkupGrDesc> cdCustomerMarkupGrDesc { get; set; }
        public virtual DbSet<cdCustomerPaymentPlanGr> cdCustomerPaymentPlanGr { get; set; }
        public virtual DbSet<cdCustomerPaymentPlanGrDesc> cdCustomerPaymentPlanGrDesc { get; set; }
        public virtual DbSet<cdCustomerShoppingHabit> cdCustomerShoppingHabit { get; set; }
        public virtual DbSet<cdCustomerShoppingHabitDesc> cdCustomerShoppingHabitDesc { get; set; }
        public virtual DbSet<cdCustomerShoppingLevel> cdCustomerShoppingLevel { get; set; }
        public virtual DbSet<cdCustomerShoppingLevelDesc> cdCustomerShoppingLevelDesc { get; set; }
        public virtual DbSet<cdCustomProcessGroup> cdCustomProcessGroup { get; set; }
        public virtual DbSet<cdCustomProcessGroupDesc> cdCustomProcessGroupDesc { get; set; }
        public virtual DbSet<cdCustomsCompany> cdCustomsCompany { get; set; }
        public virtual DbSet<cdCustomsCompanyDesc> cdCustomsCompanyDesc { get; set; }
        public virtual DbSet<cdCustomsOffices> cdCustomsOffices { get; set; }
        public virtual DbSet<cdCustomsOfficesDesc> cdCustomsOfficesDesc { get; set; }
        public virtual DbSet<cdCustomsTariffNumber> cdCustomsTariffNumber { get; set; }
        public virtual DbSet<cdCustomsTariffNumberDesc> cdCustomsTariffNumberDesc { get; set; }
        public virtual DbSet<cdDataLanguage> cdDataLanguage { get; set; }
        public virtual DbSet<cdDataLanguageDesc> cdDataLanguageDesc { get; set; }
        public virtual DbSet<cdDataTransferCompany> cdDataTransferCompany { get; set; }
        public virtual DbSet<cdDataTransferCompanyDesc> cdDataTransferCompanyDesc { get; set; }
        public virtual DbSet<cdDataTransferConvert> cdDataTransferConvert { get; set; }
        public virtual DbSet<cdDataTransferConvertForAttribute> cdDataTransferConvertForAttribute { get; set; }
        public virtual DbSet<cdDataTransferJob> cdDataTransferJob { get; set; }
        public virtual DbSet<cdDataTransferSchedule> cdDataTransferSchedule { get; set; }
        public virtual DbSet<cdDataTransferTemplate> cdDataTransferTemplate { get; set; }
        public virtual DbSet<cdDebitReason> cdDebitReason { get; set; }
        public virtual DbSet<cdDebitReasonDesc> cdDebitReasonDesc { get; set; }
        public virtual DbSet<cdDeclaration> cdDeclaration { get; set; }
        public virtual DbSet<cdDeclarationDesc> cdDeclarationDesc { get; set; }
        public virtual DbSet<cdDeduction> cdDeduction { get; set; }
        public virtual DbSet<cdDeductionDesc> cdDeductionDesc { get; set; }
        public virtual DbSet<cdDeliveryCompany> cdDeliveryCompany { get; set; }
        public virtual DbSet<cdDeliveryCompanyDesc> cdDeliveryCompanyDesc { get; set; }
        public virtual DbSet<cdDiagnostic> cdDiagnostic { get; set; }
        public virtual DbSet<cdDiagnosticDesc> cdDiagnosticDesc { get; set; }
        public virtual DbSet<cdDigitalMarketingService> cdDigitalMarketingService { get; set; }
        public virtual DbSet<cdDigitalMarketingServiceDesc> cdDigitalMarketingServiceDesc { get; set; }
        public virtual DbSet<cdDiscountOffer> cdDiscountOffer { get; set; }
        public virtual DbSet<cdDiscountOfferAttribute> cdDiscountOfferAttribute { get; set; }
        public virtual DbSet<cdDiscountOfferAttributeDesc> cdDiscountOfferAttributeDesc { get; set; }
        public virtual DbSet<cdDiscountOfferAttributeType> cdDiscountOfferAttributeType { get; set; }
        public virtual DbSet<cdDiscountOfferAttributeTypeDesc> cdDiscountOfferAttributeTypeDesc { get; set; }
        public virtual DbSet<cdDiscountOfferDesc> cdDiscountOfferDesc { get; set; }
        public virtual DbSet<cdDiscountPointType> cdDiscountPointType { get; set; }
        public virtual DbSet<cdDiscountPointTypeDesc> cdDiscountPointTypeDesc { get; set; }
        public virtual DbSet<cdDiscountReason> cdDiscountReason { get; set; }
        public virtual DbSet<cdDiscountReasonDesc> cdDiscountReasonDesc { get; set; }
        public virtual DbSet<cdDiscountSubReason> cdDiscountSubReason { get; set; }
        public virtual DbSet<cdDiscountSubReasonDesc> cdDiscountSubReasonDesc { get; set; }
        public virtual DbSet<cdDiscountType> cdDiscountType { get; set; }
        public virtual DbSet<cdDiscountTypeDesc> cdDiscountTypeDesc { get; set; }
        public virtual DbSet<cdDiscountVoucher> cdDiscountVoucher { get; set; }
        public virtual DbSet<cdDiscountVoucherType> cdDiscountVoucherType { get; set; }
        public virtual DbSet<cdDiscountVoucherTypeDesc> cdDiscountVoucherTypeDesc { get; set; }
        public virtual DbSet<cdDistanceMatrixProvider> cdDistanceMatrixProvider { get; set; }
        public virtual DbSet<cdDistrict> cdDistrict { get; set; }
        public virtual DbSet<cdDistrictDesc> cdDistrictDesc { get; set; }
        public virtual DbSet<cdDOV> cdDOV { get; set; }
        public virtual DbSet<cdDOVDesc> cdDOVDesc { get; set; }
        public virtual DbSet<cdDriver> cdDriver { get; set; }
        public virtual DbSet<cdDueDateFormula> cdDueDateFormula { get; set; }
        public virtual DbSet<cdDueDateFormulaDesc> cdDueDateFormulaDesc { get; set; }
        public virtual DbSet<cdEArchiveWebService> cdEArchiveWebService { get; set; }
        public virtual DbSet<cdEArchiveWebServiceDesc> cdEArchiveWebServiceDesc { get; set; }
        public virtual DbSet<cdEarnings> cdEarnings { get; set; }
        public virtual DbSet<cdEarningsDesc> cdEarningsDesc { get; set; }
        public virtual DbSet<cdEducationStatus> cdEducationStatus { get; set; }
        public virtual DbSet<cdEducationStatusDesc> cdEducationStatusDesc { get; set; }
        public virtual DbSet<cdEInvoiceWebService> cdEInvoiceWebService { get; set; }
        public virtual DbSet<cdEInvoiceWebServiceDesc> cdEInvoiceWebServiceDesc { get; set; }
        public virtual DbSet<cdEMailService> cdEMailService { get; set; }
        public virtual DbSet<cdEMailServiceDesc> cdEMailServiceDesc { get; set; }
        public virtual DbSet<cdEmployeeDocumentType> cdEmployeeDocumentType { get; set; }
        public virtual DbSet<cdEmployeeDocumentTypeDesc> cdEmployeeDocumentTypeDesc { get; set; }
        public virtual DbSet<cdEmployeeRecordType> cdEmployeeRecordType { get; set; }
        public virtual DbSet<cdEmployeeRecordTypeDesc> cdEmployeeRecordTypeDesc { get; set; }
        public virtual DbSet<cdEmployeeSocialInsuranceStatus> cdEmployeeSocialInsuranceStatus { get; set; }
        public virtual DbSet<cdEmployeeSocialInsuranceStatusDesc> cdEmployeeSocialInsuranceStatusDesc { get; set; }
        public virtual DbSet<cdEmployeeTaxStatus> cdEmployeeTaxStatus { get; set; }
        public virtual DbSet<cdEmployeeTaxStatusDesc> cdEmployeeTaxStatusDesc { get; set; }
        public virtual DbSet<cdEmploymentLaw> cdEmploymentLaw { get; set; }
        public virtual DbSet<cdEmploymentLawDesc> cdEmploymentLawDesc { get; set; }
        public virtual DbSet<cdEShipmentWebService> cdEShipmentWebService { get; set; }
        public virtual DbSet<cdEShipmentWebServiceDesc> cdEShipmentWebServiceDesc { get; set; }
        public virtual DbSet<cdExchangeType> cdExchangeType { get; set; }
        public virtual DbSet<cdExchangeTypeDesc> cdExchangeTypeDesc { get; set; }
        public virtual DbSet<cdExecutionOffice> cdExecutionOffice { get; set; }
        public virtual DbSet<cdExecutionOfficeDesc> cdExecutionOfficeDesc { get; set; }
        public virtual DbSet<cdExpensePeriod> cdExpensePeriod { get; set; }
        public virtual DbSet<cdExpensePeriodDesc> cdExpensePeriodDesc { get; set; }
        public virtual DbSet<cdExpenseType> cdExpenseType { get; set; }
        public virtual DbSet<cdExpenseTypeDesc> cdExpenseTypeDesc { get; set; }
        public virtual DbSet<cdExportFile> cdExportFile { get; set; }
        public virtual DbSet<cdExportFileAttribute> cdExportFileAttribute { get; set; }
        public virtual DbSet<cdExportFileAttributeDesc> cdExportFileAttributeDesc { get; set; }
        public virtual DbSet<cdExportFileAttributeType> cdExportFileAttributeType { get; set; }
        public virtual DbSet<cdExportFileAttributeTypeDesc> cdExportFileAttributeTypeDesc { get; set; }
        public virtual DbSet<cdExportFileDesc> cdExportFileDesc { get; set; }
        public virtual DbSet<cdExportType> cdExportType { get; set; }
        public virtual DbSet<cdExportTypeDesc> cdExportTypeDesc { get; set; }
        public virtual DbSet<cdFabric> cdFabric { get; set; }
        public virtual DbSet<cdFabricDesc> cdFabricDesc { get; set; }
        public virtual DbSet<cdFinanceCompanyWebService> cdFinanceCompanyWebService { get; set; }
        public virtual DbSet<cdFinanceCompanyWebServiceDesc> cdFinanceCompanyWebServiceDesc { get; set; }
        public virtual DbSet<cdFiscalPeriod> cdFiscalPeriod { get; set; }
        public virtual DbSet<cdFiscalPeriodDesc> cdFiscalPeriodDesc { get; set; }
        public virtual DbSet<cdFixedAssetStatus> cdFixedAssetStatus { get; set; }
        public virtual DbSet<cdFixedAssetStatusDesc> cdFixedAssetStatusDesc { get; set; }
        public virtual DbSet<cdFixedAssetType> cdFixedAssetType { get; set; }
        public virtual DbSet<cdFixedAssetTypeDesc> cdFixedAssetTypeDesc { get; set; }
        public virtual DbSet<cdFocalType> cdFocalType { get; set; }
        public virtual DbSet<cdFocalTypeDesc> cdFocalTypeDesc { get; set; }
        public virtual DbSet<cdForeignLanguage> cdForeignLanguage { get; set; }
        public virtual DbSet<cdForeignLanguageDesc> cdForeignLanguageDesc { get; set; }
        public virtual DbSet<cdForeignTradeStatus> cdForeignTradeStatus { get; set; }
        public virtual DbSet<cdForeignTradeStatusDesc> cdForeignTradeStatusDesc { get; set; }
        public virtual DbSet<cdFrameShapeType> cdFrameShapeType { get; set; }
        public virtual DbSet<cdFrameShapeTypeDesc> cdFrameShapeTypeDesc { get; set; }
        public virtual DbSet<cdFrameType> cdFrameType { get; set; }
        public virtual DbSet<cdFrameTypeDesc> cdFrameTypeDesc { get; set; }
        public virtual DbSet<cdFTAttribute> cdFTAttribute { get; set; }
        public virtual DbSet<cdFTAttributeDesc> cdFTAttributeDesc { get; set; }
        public virtual DbSet<cdFTAttributeType> cdFTAttributeType { get; set; }
        public virtual DbSet<cdFTAttributeTypeDesc> cdFTAttributeTypeDesc { get; set; }
        public virtual DbSet<cdGiftCard> cdGiftCard { get; set; }
        public virtual DbSet<cdGLAcc> cdGLAcc { get; set; }
        public virtual DbSet<cdGLAccAttribute> cdGLAccAttribute { get; set; }
        public virtual DbSet<cdGLAccAttributeDesc> cdGLAccAttributeDesc { get; set; }
        public virtual DbSet<cdGLAccAttributeType> cdGLAccAttributeType { get; set; }
        public virtual DbSet<cdGLAccAttributeTypeDesc> cdGLAccAttributeTypeDesc { get; set; }
        public virtual DbSet<cdGLAccClass> cdGLAccClass { get; set; }
        public virtual DbSet<cdGLAccClassDesc> cdGLAccClassDesc { get; set; }
        public virtual DbSet<cdGLAccDesc> cdGLAccDesc { get; set; }
        public virtual DbSet<cdGLAccGroup> cdGLAccGroup { get; set; }
        public virtual DbSet<cdGLAccGroupDesc> cdGLAccGroupDesc { get; set; }
        public virtual DbSet<cdGLAccMain> cdGLAccMain { get; set; }
        public virtual DbSet<cdGLAccMainDesc> cdGLAccMainDesc { get; set; }
        public virtual DbSet<cdGLAccSub> cdGLAccSub { get; set; }
        public virtual DbSet<cdGLAccSubDesc> cdGLAccSubDesc { get; set; }
        public virtual DbSet<cdGLReflection> cdGLReflection { get; set; }
        public virtual DbSet<cdGLReflectionDesc> cdGLReflectionDesc { get; set; }
        public virtual DbSet<cdGLType> cdGLType { get; set; }
        public virtual DbSet<cdGLTypeDesc> cdGLTypeDesc { get; set; }
        public virtual DbSet<cdGrandLedger> cdGrandLedger { get; set; }
        public virtual DbSet<cdHandicapType> cdHandicapType { get; set; }
        public virtual DbSet<cdHandicapTypeDesc> cdHandicapTypeDesc { get; set; }
        public virtual DbSet<cdImportFile> cdImportFile { get; set; }
        public virtual DbSet<cdImportFileAttribute> cdImportFileAttribute { get; set; }
        public virtual DbSet<cdImportFileAttributeDesc> cdImportFileAttributeDesc { get; set; }
        public virtual DbSet<cdImportFileAttributeType> cdImportFileAttributeType { get; set; }
        public virtual DbSet<cdImportFileAttributeTypeDesc> cdImportFileAttributeTypeDesc { get; set; }
        public virtual DbSet<cdImportFileDesc> cdImportFileDesc { get; set; }
        public virtual DbSet<cdInactivationReason> cdInactivationReason { get; set; }
        public virtual DbSet<cdInactivationReasonDesc> cdInactivationReasonDesc { get; set; }
        public virtual DbSet<cdIncentiveType> cdIncentiveType { get; set; }
        public virtual DbSet<cdIncentiveTypeDesc> cdIncentiveTypeDesc { get; set; }
        public virtual DbSet<cdIndustry> cdIndustry { get; set; }
        public virtual DbSet<cdIndustryDesc> cdIndustryDesc { get; set; }
        public virtual DbSet<cdInsuranceAgency> cdInsuranceAgency { get; set; }
        public virtual DbSet<cdInsuranceAgencyDesc> cdInsuranceAgencyDesc { get; set; }
        public virtual DbSet<cdInsuranceType> cdInsuranceType { get; set; }
        public virtual DbSet<cdInsuranceTypeDesc> cdInsuranceTypeDesc { get; set; }
        public virtual DbSet<cdInteractiveSmsParameters> cdInteractiveSmsParameters { get; set; }
        public virtual DbSet<cdInternationalUnitOfMeasure> cdInternationalUnitOfMeasure { get; set; }
        public virtual DbSet<cdInternationalUnitOfMeasureDesc> cdInternationalUnitOfMeasureDesc { get; set; }
        public virtual DbSet<cdITAttribute> cdITAttribute { get; set; }
        public virtual DbSet<cdITAttributeDesc> cdITAttributeDesc { get; set; }
        public virtual DbSet<cdITAttributeType> cdITAttributeType { get; set; }
        public virtual DbSet<cdITAttributeTypeDesc> cdITAttributeTypeDesc { get; set; }
        public virtual DbSet<cdItem> cdItem { get; set; }
        public virtual DbSet<cdItemAccountGr> cdItemAccountGr { get; set; }
        public virtual DbSet<cdItemAccountGrDesc> cdItemAccountGrDesc { get; set; }
        public virtual DbSet<cdItemAttribute> cdItemAttribute { get; set; }
        public virtual DbSet<cdItemAttributeDesc> cdItemAttributeDesc { get; set; }
        public virtual DbSet<cdItemAttributeType> cdItemAttributeType { get; set; }
        public virtual DbSet<cdItemAttributeTypeDesc> cdItemAttributeTypeDesc { get; set; }
        public virtual DbSet<cdItemDesc> cdItemDesc { get; set; }
        public virtual DbSet<cdItemDim1> cdItemDim1 { get; set; }
        public virtual DbSet<cdItemDim1Desc> cdItemDim1Desc { get; set; }
        public virtual DbSet<cdItemDim2> cdItemDim2 { get; set; }
        public virtual DbSet<cdItemDim3> cdItemDim3 { get; set; }
        public virtual DbSet<cdItemDiscountGr> cdItemDiscountGr { get; set; }
        public virtual DbSet<cdItemDiscountGrDesc> cdItemDiscountGrDesc { get; set; }
        public virtual DbSet<cdItemLikeType> cdItemLikeType { get; set; }
        public virtual DbSet<cdItemLikeTypeDesc> cdItemLikeTypeDesc { get; set; }
        public virtual DbSet<cdItemList> cdItemList { get; set; }
        public virtual DbSet<cdItemListDesc> cdItemListDesc { get; set; }
        public virtual DbSet<cdItemOTAttribute> cdItemOTAttribute { get; set; }
        public virtual DbSet<cdItemOTAttributeDesc> cdItemOTAttributeDesc { get; set; }
        public virtual DbSet<cdItemOTAttributeType> cdItemOTAttributeType { get; set; }
        public virtual DbSet<cdItemOTAttributeTypeDesc> cdItemOTAttributeTypeDesc { get; set; }
        public virtual DbSet<cdItemPaymentPlanGr> cdItemPaymentPlanGr { get; set; }
        public virtual DbSet<cdItemPaymentPlanGrDesc> cdItemPaymentPlanGrDesc { get; set; }
        public virtual DbSet<cdItemTaxGr> cdItemTaxGr { get; set; }
        public virtual DbSet<cdItemTaxGrDesc> cdItemTaxGrDesc { get; set; }
        public virtual DbSet<cdItemTestType> cdItemTestType { get; set; }
        public virtual DbSet<cdItemTestTypeDesc> cdItemTestTypeDesc { get; set; }
        public virtual DbSet<cdItemTextileCareTemplate> cdItemTextileCareTemplate { get; set; }
        public virtual DbSet<cdItemTextileCareTemplateDesc> cdItemTextileCareTemplateDesc { get; set; }
        public virtual DbSet<cdItemVendorGr> cdItemVendorGr { get; set; }
        public virtual DbSet<cdItemVendorGrDesc> cdItemVendorGrDesc { get; set; }
        public virtual DbSet<cdJobDepartment> cdJobDepartment { get; set; }
        public virtual DbSet<cdJobDepartmentDesc> cdJobDepartmentDesc { get; set; }
        public virtual DbSet<cdJobInterviewResult> cdJobInterviewResult { get; set; }
        public virtual DbSet<cdJobInterviewResultDesc> cdJobInterviewResultDesc { get; set; }
        public virtual DbSet<cdJobPosition> cdJobPosition { get; set; }
        public virtual DbSet<cdJobPositionDesc> cdJobPositionDesc { get; set; }
        public virtual DbSet<cdJobTitle> cdJobTitle { get; set; }
        public virtual DbSet<cdJobTitleDesc> cdJobTitleDesc { get; set; }
        public virtual DbSet<cdJobTitleLevel> cdJobTitleLevel { get; set; }
        public virtual DbSet<cdJobTitleLevelDesc> cdJobTitleLevelDesc { get; set; }
        public virtual DbSet<cdJobTraining> cdJobTraining { get; set; }
        public virtual DbSet<cdJobTrainingAttribute> cdJobTrainingAttribute { get; set; }
        public virtual DbSet<cdJobTrainingAttributeDesc> cdJobTrainingAttributeDesc { get; set; }
        public virtual DbSet<cdJobTrainingAttributeType> cdJobTrainingAttributeType { get; set; }
        public virtual DbSet<cdJobTrainingAttributeTypeDesc> cdJobTrainingAttributeTypeDesc { get; set; }
        public virtual DbSet<cdJobTrainingDesc> cdJobTrainingDesc { get; set; }
        public virtual DbSet<cdJobType> cdJobType { get; set; }
        public virtual DbSet<cdJobTypeDesc> cdJobTypeDesc { get; set; }
        public virtual DbSet<cdJournalLedger> cdJournalLedger { get; set; }
        public virtual DbSet<cdJournalTypeSub> cdJournalTypeSub { get; set; }
        public virtual DbSet<cdJournalTypeSubDesc> cdJournalTypeSubDesc { get; set; }
        public virtual DbSet<cdKnowLevel> cdKnowLevel { get; set; }
        public virtual DbSet<cdKnowLevelDesc> cdKnowLevelDesc { get; set; }
        public virtual DbSet<cdLabelType> cdLabelType { get; set; }
        public virtual DbSet<cdLabelTypeDesc> cdLabelTypeDesc { get; set; }
        public virtual DbSet<cdLawyer> cdLawyer { get; set; }
        public virtual DbSet<cdLeaveType> cdLeaveType { get; set; }
        public virtual DbSet<cdLeaveTypeDesc> cdLeaveTypeDesc { get; set; }
        public virtual DbSet<cdLegalResignation> cdLegalResignation { get; set; }
        public virtual DbSet<cdLegalResignationDesc> cdLegalResignationDesc { get; set; }
        public virtual DbSet<cdLegalResignationLocal> cdLegalResignationLocal { get; set; }
        public virtual DbSet<cdLegalResignationLocalDesc> cdLegalResignationLocalDesc { get; set; }
        public virtual DbSet<cdLetterOfGuarantee> cdLetterOfGuarantee { get; set; }
        public virtual DbSet<cdLetterOfGuaranteeAttribute> cdLetterOfGuaranteeAttribute { get; set; }
        public virtual DbSet<cdLetterOfGuaranteeAttributeDesc> cdLetterOfGuaranteeAttributeDesc { get; set; }
        public virtual DbSet<cdLetterOfGuaranteeAttributeType> cdLetterOfGuaranteeAttributeType { get; set; }
        public virtual DbSet<cdLetterOfGuaranteeAttributeTypeDesc> cdLetterOfGuaranteeAttributeTypeDesc { get; set; }
        public virtual DbSet<cdLetterType> cdLetterType { get; set; }
        public virtual DbSet<cdLetterTypeDesc> cdLetterTypeDesc { get; set; }
        public virtual DbSet<cdLot> cdLot { get; set; }
        public virtual DbSet<cdLotDesc> cdLotDesc { get; set; }
        public virtual DbSet<cdMainJobTitle> cdMainJobTitle { get; set; }
        public virtual DbSet<cdMainJobTitleDesc> cdMainJobTitleDesc { get; set; }
        public virtual DbSet<cdMaladyType> cdMaladyType { get; set; }
        public virtual DbSet<cdMaladyTypeDesc> cdMaladyTypeDesc { get; set; }
        public virtual DbSet<cdManufacturer> cdManufacturer { get; set; }
        public virtual DbSet<cdManufacturerDesc> cdManufacturerDesc { get; set; }
        public virtual DbSet<cdMessageReason> cdMessageReason { get; set; }
        public virtual DbSet<cdMessageReasonDesc> cdMessageReasonDesc { get; set; }
        public virtual DbSet<cdMessageType> cdMessageType { get; set; }
        public virtual DbSet<cdMessageTypeDesc> cdMessageTypeDesc { get; set; }
        public virtual DbSet<cdMilitaryServiceStatus> cdMilitaryServiceStatus { get; set; }
        public virtual DbSet<cdMilitaryServiceStatusDesc> cdMilitaryServiceStatusDesc { get; set; }
        public virtual DbSet<cdMissingWorkReason> cdMissingWorkReason { get; set; }
        public virtual DbSet<cdMissingWorkReasonDesc> cdMissingWorkReasonDesc { get; set; }
        public virtual DbSet<cdMMSBusinessPartnerService> cdMMSBusinessPartnerService { get; set; }
        public virtual DbSet<cdNationality> cdNationality { get; set; }
        public virtual DbSet<cdNationalityDesc> cdNationalityDesc { get; set; }
        public virtual DbSet<cdOffice> cdOffice { get; set; }
        public virtual DbSet<cdOfficeCOGSGr> cdOfficeCOGSGr { get; set; }
        public virtual DbSet<cdOfficeCOGSGrDesc> cdOfficeCOGSGrDesc { get; set; }
        public virtual DbSet<cdOfficeDesc> cdOfficeDesc { get; set; }
        public virtual DbSet<cdOnlineBankWebService> cdOnlineBankWebService { get; set; }
        public virtual DbSet<cdOnlineBankWebServiceDesc> cdOnlineBankWebServiceDesc { get; set; }
        public virtual DbSet<cdOpticalGroupRange> cdOpticalGroupRange { get; set; }
        public virtual DbSet<cdOpticalGroupRangeDesc> cdOpticalGroupRangeDesc { get; set; }
        public virtual DbSet<cdOpticalSut> cdOpticalSut { get; set; }
        public virtual DbSet<cdOpticalSutDesc> cdOpticalSutDesc { get; set; }
        public virtual DbSet<cdOrderCancelReason> cdOrderCancelReason { get; set; }
        public virtual DbSet<cdOrderCancelReasonDesc> cdOrderCancelReasonDesc { get; set; }
        public virtual DbSet<cdOtherDocumentType> cdOtherDocumentType { get; set; }
        public virtual DbSet<cdOtherDocumentTypeDesc> cdOtherDocumentTypeDesc { get; set; }
        public virtual DbSet<cdPackageBrand> cdPackageBrand { get; set; }
        public virtual DbSet<cdPackageBrandDesc> cdPackageBrandDesc { get; set; }
        public virtual DbSet<cdPackageVolume> cdPackageVolume { get; set; }
        public virtual DbSet<cdPackageVolumeDesc> cdPackageVolumeDesc { get; set; }
        public virtual DbSet<cdPantone> cdPantone { get; set; }
        public virtual DbSet<cdPantoneDesc> cdPantoneDesc { get; set; }
        public virtual DbSet<cdPaymentMethod> cdPaymentMethod { get; set; }
        public virtual DbSet<cdPaymentMethodDesc> cdPaymentMethodDesc { get; set; }
        public virtual DbSet<cdPaymentPlan> cdPaymentPlan { get; set; }
        public virtual DbSet<cdPaymentPlanDesc> cdPaymentPlanDesc { get; set; }
        public virtual DbSet<cdPaymentProvider> cdPaymentProvider { get; set; }
        public virtual DbSet<cdPaymentProviderDesc> cdPaymentProviderDesc { get; set; }
        public virtual DbSet<cdPayrollType> cdPayrollType { get; set; }
        public virtual DbSet<cdPayrollTypeDesc> cdPayrollTypeDesc { get; set; }
        public virtual DbSet<cdPCT> cdPCT { get; set; }
        public virtual DbSet<cdPCTDesc> cdPCTDesc { get; set; }
        public virtual DbSet<cdPerceptionOfFashion> cdPerceptionOfFashion { get; set; }
        public virtual DbSet<cdPerceptionOfFashionDesc> cdPerceptionOfFashionDesc { get; set; }
        public virtual DbSet<cdPermissionMarketingService> cdPermissionMarketingService { get; set; }
        public virtual DbSet<cdPlasticBagType> cdPlasticBagType { get; set; }
        public virtual DbSet<cdPlasticBagTypeDesc> cdPlasticBagTypeDesc { get; set; }
        public virtual DbSet<cdPointModifyReason> cdPointModifyReason { get; set; }
        public virtual DbSet<cdPointModifyReasonDesc> cdPointModifyReasonDesc { get; set; }
        public virtual DbSet<cdPort> cdPort { get; set; }
        public virtual DbSet<cdPortDesc> cdPortDesc { get; set; }
        public virtual DbSet<cdPOSTerminal> cdPOSTerminal { get; set; }
        public virtual DbSet<cdPresentCardType> cdPresentCardType { get; set; }
        public virtual DbSet<cdPresentCardTypeDesc> cdPresentCardTypeDesc { get; set; }
        public virtual DbSet<cdPrevJobType> cdPrevJobType { get; set; }
        public virtual DbSet<cdPrevJobTypeDesc> cdPrevJobTypeDesc { get; set; }
        public virtual DbSet<cdPriceGroup> cdPriceGroup { get; set; }
        public virtual DbSet<cdPriceGroupDesc> cdPriceGroupDesc { get; set; }
        public virtual DbSet<cdPriceListType> cdPriceListType { get; set; }
        public virtual DbSet<cdPriceListTypeDesc> cdPriceListTypeDesc { get; set; }
        public virtual DbSet<cdPriority> cdPriority { get; set; }
        public virtual DbSet<cdPriorityDesc> cdPriorityDesc { get; set; }
        public virtual DbSet<cdPrivateInsurance> cdPrivateInsurance { get; set; }
        public virtual DbSet<cdPrivateInsuranceDesc> cdPrivateInsuranceDesc { get; set; }
        public virtual DbSet<cdProcessFlowDenyReason> cdProcessFlowDenyReason { get; set; }
        public virtual DbSet<cdProcessFlowDenyReasonDesc> cdProcessFlowDenyReasonDesc { get; set; }
        public virtual DbSet<cdProductCollectionGr> cdProductCollectionGr { get; set; }
        public virtual DbSet<cdProductColorAttribute> cdProductColorAttribute { get; set; }
        public virtual DbSet<cdProductColorAttributeDesc> cdProductColorAttributeDesc { get; set; }
        public virtual DbSet<cdProductColorAttributeType> cdProductColorAttributeType { get; set; }
        public virtual DbSet<cdProductColorAttributeTypeDesc> cdProductColorAttributeTypeDesc { get; set; }
        public virtual DbSet<cdProductColorSet> cdProductColorSet { get; set; }
        public virtual DbSet<cdProductColorSetDesc> cdProductColorSetDesc { get; set; }
        public virtual DbSet<cdProductDimSet> cdProductDimSet { get; set; }
        public virtual DbSet<cdProductDimSetDesc> cdProductDimSetDesc { get; set; }
        public virtual DbSet<cdProductHierarchyLevel> cdProductHierarchyLevel { get; set; }
        public virtual DbSet<cdProductHierarchyLevelDesc> cdProductHierarchyLevelDesc { get; set; }
        public virtual DbSet<cdProductPart> cdProductPart { get; set; }
        public virtual DbSet<cdProductPartDesc> cdProductPartDesc { get; set; }
        public virtual DbSet<cdProductPointType> cdProductPointType { get; set; }
        public virtual DbSet<cdProductPointTypeDesc> cdProductPointTypeDesc { get; set; }
        public virtual DbSet<cdProductStatus> cdProductStatus { get; set; }
        public virtual DbSet<cdProductStatusDesc> cdProductStatusDesc { get; set; }
        public virtual DbSet<cdPromotionGroup> cdPromotionGroup { get; set; }
        public virtual DbSet<cdPromotionGroupDesc> cdPromotionGroupDesc { get; set; }
        public virtual DbSet<cdProposalConfirmationLimit> cdProposalConfirmationLimit { get; set; }
        public virtual DbSet<cdProposalConfirmationRule> cdProposalConfirmationRule { get; set; }
        public virtual DbSet<cdPurchasePlan> cdPurchasePlan { get; set; }
        public virtual DbSet<cdPurchasePlanDesc> cdPurchasePlanDesc { get; set; }
        public virtual DbSet<cdPurchasingAgent> cdPurchasingAgent { get; set; }
        public virtual DbSet<cdQuarter> cdQuarter { get; set; }
        public virtual DbSet<cdReasonForNotShopping> cdReasonForNotShopping { get; set; }
        public virtual DbSet<cdReasonForNotShoppingDesc> cdReasonForNotShoppingDesc { get; set; }
        public virtual DbSet<cdRecidivistType> cdRecidivistType { get; set; }
        public virtual DbSet<cdRecidivistTypeDesc> cdRecidivistTypeDesc { get; set; }
        public virtual DbSet<cdReconciliation> cdReconciliation { get; set; }
        public virtual DbSet<cdReconciliationDesc> cdReconciliationDesc { get; set; }
        public virtual DbSet<cdRegisteredEMailService> cdRegisteredEMailService { get; set; }
        public virtual DbSet<cdRequisition> cdRequisition { get; set; }
        public virtual DbSet<cdRequisitionAttribute> cdRequisitionAttribute { get; set; }
        public virtual DbSet<cdRequisitionAttributeDesc> cdRequisitionAttributeDesc { get; set; }
        public virtual DbSet<cdRequisitionAttributeType> cdRequisitionAttributeType { get; set; }
        public virtual DbSet<cdRequisitionAttributeTypeDesc> cdRequisitionAttributeTypeDesc { get; set; }
        public virtual DbSet<cdRequisitionConfirmationLimit> cdRequisitionConfirmationLimit { get; set; }
        public virtual DbSet<cdRequisitionConfirmationRule> cdRequisitionConfirmationRule { get; set; }
        public virtual DbSet<cdRequisitionDesc> cdRequisitionDesc { get; set; }
        public virtual DbSet<cdRequisitionType> cdRequisitionType { get; set; }
        public virtual DbSet<cdRequisitionTypeDesc> cdRequisitionTypeDesc { get; set; }
        public virtual DbSet<cdResignation> cdResignation { get; set; }
        public virtual DbSet<cdResignationDesc> cdResignationDesc { get; set; }
        public virtual DbSet<cdResponsibilityArea> cdResponsibilityArea { get; set; }
        public virtual DbSet<cdResponsibilityAreaDesc> cdResponsibilityAreaDesc { get; set; }
        public virtual DbSet<cdReturnReason> cdReturnReason { get; set; }
        public virtual DbSet<cdReturnReasonDesc> cdReturnReasonDesc { get; set; }
        public virtual DbSet<cdRole> cdRole { get; set; }
        public virtual DbSet<cdRoleDesc> cdRoleDesc { get; set; }
        public virtual DbSet<cdRoll> cdRoll { get; set; }
        public virtual DbSet<cdRollNoteType> cdRollNoteType { get; set; }
        public virtual DbSet<cdRollNoteTypeDesc> cdRollNoteTypeDesc { get; set; }
        public virtual DbSet<cdRoundsman> cdRoundsman { get; set; }
        public virtual DbSet<cdSalesChannel> cdSalesChannel { get; set; }
        public virtual DbSet<cdSalesChannelDesc> cdSalesChannelDesc { get; set; }
        public virtual DbSet<cdSalesperson> cdSalesperson { get; set; }
        public virtual DbSet<cdSalespersonTeam> cdSalespersonTeam { get; set; }
        public virtual DbSet<cdSalespersonTeamDesc> cdSalespersonTeamDesc { get; set; }
        public virtual DbSet<cdSalespersonType> cdSalespersonType { get; set; }
        public virtual DbSet<cdSalespersonTypeDesc> cdSalespersonTypeDesc { get; set; }
        public virtual DbSet<cdSalesPlanType> cdSalesPlanType { get; set; }
        public virtual DbSet<cdSalesPlanTypeDesc> cdSalesPlanTypeDesc { get; set; }
        public virtual DbSet<cdScheduleReSendSMSForCustomerRelationship> cdScheduleReSendSMSForCustomerRelationship { get; set; }
        public virtual DbSet<cdScheduleSMSForCustomerRelationship> cdScheduleSMSForCustomerRelationship { get; set; }
        public virtual DbSet<cdScrapReason> cdScrapReason { get; set; }
        public virtual DbSet<cdScrapReasonDesc> cdScrapReasonDesc { get; set; }
        public virtual DbSet<cdSeason> cdSeason { get; set; }
        public virtual DbSet<cdSeasonDesc> cdSeasonDesc { get; set; }
        public virtual DbSet<cdSectionType> cdSectionType { get; set; }
        public virtual DbSet<cdSectionTypeDesc> cdSectionTypeDesc { get; set; }
        public virtual DbSet<cdServiceman> cdServiceman { get; set; }
        public virtual DbSet<cdSGKBorrowingType> cdSGKBorrowingType { get; set; }
        public virtual DbSet<cdSGKBorrowingTypeDesc> cdSGKBorrowingTypeDesc { get; set; }
        public virtual DbSet<cdSGKProfession> cdSGKProfession { get; set; }
        public virtual DbSet<cdSGKProfessionDesc> cdSGKProfessionDesc { get; set; }
        public virtual DbSet<cdShipmentMethod> cdShipmentMethod { get; set; }
        public virtual DbSet<cdShipmentMethodDesc> cdShipmentMethodDesc { get; set; }
        public virtual DbSet<cdSMSGatewayService> cdSMSGatewayService { get; set; }
        public virtual DbSet<cdSMSJobType> cdSMSJobType { get; set; }
        public virtual DbSet<cdSMSJobTypeDesc> cdSMSJobTypeDesc { get; set; }
        public virtual DbSet<cdSoftware> cdSoftware { get; set; }
        public virtual DbSet<cdSoftwareDesc> cdSoftwareDesc { get; set; }
        public virtual DbSet<cdSoftwareType> cdSoftwareType { get; set; }
        public virtual DbSet<cdSoftwareTypeDesc> cdSoftwareTypeDesc { get; set; }
        public virtual DbSet<cdSpecialDayType> cdSpecialDayType { get; set; }
        public virtual DbSet<cdSpecialDayTypeDesc> cdSpecialDayTypeDesc { get; set; }
        public virtual DbSet<cdState> cdState { get; set; }
        public virtual DbSet<cdStateDesc> cdStateDesc { get; set; }
        public virtual DbSet<cdStoreCapacityLevel> cdStoreCapacityLevel { get; set; }
        public virtual DbSet<cdStoreCapacityLevelDesc> cdStoreCapacityLevelDesc { get; set; }
        public virtual DbSet<cdStoreClimateZone> cdStoreClimateZone { get; set; }
        public virtual DbSet<cdStoreClimateZoneDesc> cdStoreClimateZoneDesc { get; set; }
        public virtual DbSet<cdStoreConcept> cdStoreConcept { get; set; }
        public virtual DbSet<cdStoreConceptDesc> cdStoreConceptDesc { get; set; }
        public virtual DbSet<cdStoreCRMGroup> cdStoreCRMGroup { get; set; }
        public virtual DbSet<cdStoreCRMGroupDesc> cdStoreCRMGroupDesc { get; set; }
        public virtual DbSet<cdStoreDistributionGroup> cdStoreDistributionGroup { get; set; }
        public virtual DbSet<cdStoreDistributionGroupDesc> cdStoreDistributionGroupDesc { get; set; }
        public virtual DbSet<cdStoreHierarchyLevel> cdStoreHierarchyLevel { get; set; }
        public virtual DbSet<cdStoreHierarchyLevelDesc> cdStoreHierarchyLevelDesc { get; set; }
        public virtual DbSet<cdStorePriceLevel> cdStorePriceLevel { get; set; }
        public virtual DbSet<cdStorePriceLevelDesc> cdStorePriceLevelDesc { get; set; }
        public virtual DbSet<cdStoryBoard> cdStoryBoard { get; set; }
        public virtual DbSet<cdStoryBoardDesc> cdStoryBoardDesc { get; set; }
        public virtual DbSet<cdStreet> cdStreet { get; set; }
        public virtual DbSet<cdSubCurrAccAttribute> cdSubCurrAccAttribute { get; set; }
        public virtual DbSet<cdSubCurrAccAttributeDesc> cdSubCurrAccAttributeDesc { get; set; }
        public virtual DbSet<cdSubCurrAccAttributeType> cdSubCurrAccAttributeType { get; set; }
        public virtual DbSet<cdSubCurrAccAttributeTypeDesc> cdSubCurrAccAttributeTypeDesc { get; set; }
        public virtual DbSet<cdSubJobDepartment> cdSubJobDepartment { get; set; }
        public virtual DbSet<cdSubJobDepartmentDesc> cdSubJobDepartmentDesc { get; set; }
        public virtual DbSet<cdSubSeason> cdSubSeason { get; set; }
        public virtual DbSet<cdSubSeasonDesc> cdSubSeasonDesc { get; set; }
        public virtual DbSet<cdSupportResolveType> cdSupportResolveType { get; set; }
        public virtual DbSet<cdSupportResolveTypeDesc> cdSupportResolveTypeDesc { get; set; }
        public virtual DbSet<cdSupportStatus> cdSupportStatus { get; set; }
        public virtual DbSet<cdSupportStatusDesc> cdSupportStatusDesc { get; set; }
        public virtual DbSet<cdSurvey> cdSurvey { get; set; }
        public virtual DbSet<cdSurveyDesc> cdSurveyDesc { get; set; }
        public virtual DbSet<cdSurveyQuestion> cdSurveyQuestion { get; set; }
        public virtual DbSet<cdSurveyQuestionDesc> cdSurveyQuestionDesc { get; set; }
        public virtual DbSet<cdSurveyQuestionOption> cdSurveyQuestionOption { get; set; }
        public virtual DbSet<cdSurveyQuestionOptionDesc> cdSurveyQuestionOptionDesc { get; set; }
        public virtual DbSet<cdSurveySection> cdSurveySection { get; set; }
        public virtual DbSet<cdSurveySectionDesc> cdSurveySectionDesc { get; set; }
        public virtual DbSet<cdTaxDistrict> cdTaxDistrict { get; set; }
        public virtual DbSet<cdTaxDistrictDesc> cdTaxDistrictDesc { get; set; }
        public virtual DbSet<cdTaxOffice> cdTaxOffice { get; set; }
        public virtual DbSet<cdTaxOfficeDesc> cdTaxOfficeDesc { get; set; }
        public virtual DbSet<cdTechnicalResponsible> cdTechnicalResponsible { get; set; }
        public virtual DbSet<cdTest> cdTest { get; set; }
        public virtual DbSet<cdTestDesc> cdTestDesc { get; set; }
        public virtual DbSet<cdTestType> cdTestType { get; set; }
        public virtual DbSet<cdTestTypeDesc> cdTestTypeDesc { get; set; }
        public virtual DbSet<cdTextileCareSymbol> cdTextileCareSymbol { get; set; }
        public virtual DbSet<cdTextileCareSymbolDesc> cdTextileCareSymbolDesc { get; set; }
        public virtual DbSet<cdTimePeriod> cdTimePeriod { get; set; }
        public virtual DbSet<cdTimePeriodDesc> cdTimePeriodDesc { get; set; }
        public virtual DbSet<cdTitle> cdTitle { get; set; }
        public virtual DbSet<cdTitleDesc> cdTitleDesc { get; set; }
        public virtual DbSet<cdTradeRegistryOffice> cdTradeRegistryOffice { get; set; }
        public virtual DbSet<cdTransactionCancelReason> cdTransactionCancelReason { get; set; }
        public virtual DbSet<cdTransactionCancelReasonDesc> cdTransactionCancelReasonDesc { get; set; }
        public virtual DbSet<cdTransferPlanTemplate> cdTransferPlanTemplate { get; set; }
        public virtual DbSet<cdTransferPlanTemplateDesc> cdTransferPlanTemplateDesc { get; set; }
        public virtual DbSet<cdTranslationProvider> cdTranslationProvider { get; set; }
        public virtual DbSet<cdTurnoverTargetType> cdTurnoverTargetType { get; set; }
        public virtual DbSet<cdTurnoverTargetTypeDesc> cdTurnoverTargetTypeDesc { get; set; }
        public virtual DbSet<cdUnDeliveryReason> cdUnDeliveryReason { get; set; }
        public virtual DbSet<cdUnDeliveryReasonDesc> cdUnDeliveryReasonDesc { get; set; }
        public virtual DbSet<cdUniFreeTenderType> cdUniFreeTenderType { get; set; }
        public virtual DbSet<cdUnitOfMeasure> cdUnitOfMeasure { get; set; }
        public virtual DbSet<cdUnitOfMeasureDesc> cdUnitOfMeasureDesc { get; set; }
        public virtual DbSet<cdUniversity> cdUniversity { get; set; }
        public virtual DbSet<cdUniversityDesc> cdUniversityDesc { get; set; }
        public virtual DbSet<cdUniversityFaculty> cdUniversityFaculty { get; set; }
        public virtual DbSet<cdUniversityFacultyDep> cdUniversityFacultyDep { get; set; }
        public virtual DbSet<cdUniversityFacultyDepDesc> cdUniversityFacultyDepDesc { get; set; }
        public virtual DbSet<cdUniversityFacultyDesc> cdUniversityFacultyDesc { get; set; }
        public virtual DbSet<cdUniversityLevel> cdUniversityLevel { get; set; }
        public virtual DbSet<cdUniversityLevelDesc> cdUniversityLevelDesc { get; set; }
        public virtual DbSet<cdUniversityType> cdUniversityType { get; set; }
        public virtual DbSet<cdUniversityTypeDesc> cdUniversityTypeDesc { get; set; }
        public virtual DbSet<cdUserWarning> cdUserWarning { get; set; }
        public virtual DbSet<cdUserWarningDesc> cdUserWarningDesc { get; set; }
        public virtual DbSet<cdUTSAttribute> cdUTSAttribute { get; set; }
        public virtual DbSet<cdUTSMRGInfo> cdUTSMRGInfo { get; set; }
        public virtual DbSet<cdVat> cdVat { get; set; }
        public virtual DbSet<cdVatDesc> cdVatDesc { get; set; }
        public virtual DbSet<cdVehicle> cdVehicle { get; set; }
        public virtual DbSet<cdVehicleType> cdVehicleType { get; set; }
        public virtual DbSet<cdVehicleTypeDesc> cdVehicleTypeDesc { get; set; }
        public virtual DbSet<cdVisitFrequency> cdVisitFrequency { get; set; }
        public virtual DbSet<cdVisitFrequencyDesc> cdVisitFrequencyDesc { get; set; }
        public virtual DbSet<cdWageGarnishmentType> cdWageGarnishmentType { get; set; }
        public virtual DbSet<cdWageGarnishmentTypeDesc> cdWageGarnishmentTypeDesc { get; set; }
        public virtual DbSet<cdWagePlanType> cdWagePlanType { get; set; }
        public virtual DbSet<cdWagePlanTypeDesc> cdWagePlanTypeDesc { get; set; }
        public virtual DbSet<cdWarehouse> cdWarehouse { get; set; }
        public virtual DbSet<cdWarehouseCategory> cdWarehouseCategory { get; set; }
        public virtual DbSet<cdWarehouseCategoryDesc> cdWarehouseCategoryDesc { get; set; }
        public virtual DbSet<cdWarehouseChannelTemplate> cdWarehouseChannelTemplate { get; set; }
        public virtual DbSet<cdWarehouseChannelTemplateDesc> cdWarehouseChannelTemplateDesc { get; set; }
        public virtual DbSet<cdWarehouseDesc> cdWarehouseDesc { get; set; }
        public virtual DbSet<cdWarehouseType> cdWarehouseType { get; set; }
        public virtual DbSet<cdWarehouseTypeDesc> cdWarehouseTypeDesc { get; set; }
        public virtual DbSet<cdWorkForce> cdWorkForce { get; set; }
        public virtual DbSet<cdWorkForceDesc> cdWorkForceDesc { get; set; }
        public virtual DbSet<cdWorkPlace> cdWorkPlace { get; set; }
        public virtual DbSet<cdWorkPlaceDesc> cdWorkPlaceDesc { get; set; }
        public virtual DbSet<cdWorkPlaceGroup> cdWorkPlaceGroup { get; set; }
        public virtual DbSet<cdWorkPlaceGroupDesc> cdWorkPlaceGroupDesc { get; set; }
        public virtual DbSet<cdWorkPlaceType> cdWorkPlaceType { get; set; }
        public virtual DbSet<cdWorkPlaceTypeDesc> cdWorkPlaceTypeDesc { get; set; }
        public virtual DbSet<cdZone> cdZone { get; set; }
        public virtual DbSet<cdZoneDesc> cdZoneDesc { get; set; }
        public virtual DbSet<dfAirportExchangeRateWidgetParameters> dfAirportExchangeRateWidgetParameters { get; set; }
        public virtual DbSet<dfAttTypesForMarketPlaceCategory> dfAttTypesForMarketPlaceCategory { get; set; }
        public virtual DbSet<dfAvailableTaxTypesOnPos> dfAvailableTaxTypesOnPos { get; set; }
        public virtual DbSet<dfBankCreditOfficialForm> dfBankCreditOfficialForm { get; set; }
        public virtual DbSet<dfBankDefATAttribute> dfBankDefATAttribute { get; set; }
        public virtual DbSet<dfBankOfficialForm> dfBankOfficialForm { get; set; }
        public virtual DbSet<dfBankPaymentInstructionOfficialForm> dfBankPaymentInstructionOfficialForm { get; set; }
        public virtual DbSet<dfBankPaymentListOfficialForm> dfBankPaymentListOfficialForm { get; set; }
        public virtual DbSet<dfBankPOSReturnsRule> dfBankPOSReturnsRule { get; set; }
        public virtual DbSet<dfBankPOSReturnsTermRule> dfBankPOSReturnsTermRule { get; set; }
        public virtual DbSet<dfBasefyStore> dfBasefyStore { get; set; }
        public virtual DbSet<dfBulkMailServiceProviderAccount> dfBulkMailServiceProviderAccount { get; set; }
        public virtual DbSet<dfBulutTahsilatVPosCompany> dfBulutTahsilatVPosCompany { get; set; }
        public virtual DbSet<dfBulutTahsilatVPosOffice> dfBulutTahsilatVPosOffice { get; set; }
        public virtual DbSet<dfCarriageExpenseCodes> dfCarriageExpenseCodes { get; set; }
        public virtual DbSet<dfCashDefATAttribute> dfCashDefATAttribute { get; set; }
        public virtual DbSet<dfCashOfficialForm> dfCashOfficialForm { get; set; }
        public virtual DbSet<dfChequeDefATAttribute> dfChequeDefATAttribute { get; set; }
        public virtual DbSet<dfChequeOfficialForm> dfChequeOfficialForm { get; set; }
        public virtual DbSet<dfChippin> dfChippin { get; set; }
        public virtual DbSet<dfChippinPOSTerminal> dfChippinPOSTerminal { get; set; }
        public virtual DbSet<dfCommunicationForm> dfCommunicationForm { get; set; }
        public virtual DbSet<dfCOMOPOSTerminal> dfCOMOPOSTerminal { get; set; }
        public virtual DbSet<dfCOMOProductProperty> dfCOMOProductProperty { get; set; }
        public virtual DbSet<dfCOMOStore> dfCOMOStore { get; set; }
        public virtual DbSet<dfCompanyClosedPeriod> dfCompanyClosedPeriod { get; set; }
        public virtual DbSet<dfCompanyCostOfGoodsSold> dfCompanyCostOfGoodsSold { get; set; }
        public virtual DbSet<dfCompanyCurrAccSize> dfCompanyCurrAccSize { get; set; }
        public virtual DbSet<dfCompanyDeductionDefault> dfCompanyDeductionDefault { get; set; }
        public virtual DbSet<dfCompanyDefault> dfCompanyDefault { get; set; }
        public virtual DbSet<dfCompanyDigitalMarketingServiceAdress> dfCompanyDigitalMarketingServiceAdress { get; set; }
        public virtual DbSet<dfCompanyEarningsDefault> dfCompanyEarningsDefault { get; set; }
        public virtual DbSet<dfCompanyEarningsMonthly> dfCompanyEarningsMonthly { get; set; }
        public virtual DbSet<dfCompanyEmailDefault> dfCompanyEmailDefault { get; set; }
        public virtual DbSet<dfCompanyFolder> dfCompanyFolder { get; set; }
        public virtual DbSet<dfCompanyLockTransaction> dfCompanyLockTransaction { get; set; }
        public virtual DbSet<dfCompanyMarkup> dfCompanyMarkup { get; set; }
        public virtual DbSet<dfCompanyPriceGroup> dfCompanyPriceGroup { get; set; }
        public virtual DbSet<dfCompanyProcessLockTransaction> dfCompanyProcessLockTransaction { get; set; }
        public virtual DbSet<dfConsignmentStore> dfConsignmentStore { get; set; }
        public virtual DbSet<dfConsStoreDistributionWarehouse> dfConsStoreDistributionWarehouse { get; set; }
        public virtual DbSet<dfCreditableConfirmation> dfCreditableConfirmation { get; set; }
        public virtual DbSet<dfCreditCardPaymentDefATAttribute> dfCreditCardPaymentDefATAttribute { get; set; }
        public virtual DbSet<dfCreditCardPaymentOfficialForm> dfCreditCardPaymentOfficialForm { get; set; }
        public virtual DbSet<dfCurrAccProductLotLevels> dfCurrAccProductLotLevels { get; set; }
        public virtual DbSet<dfCustomerOnlinePayment> dfCustomerOnlinePayment { get; set; }
        public virtual DbSet<dfCustomsCompany> dfCustomsCompany { get; set; }
        public virtual DbSet<dfCustomsStore> dfCustomsStore { get; set; }
        public virtual DbSet<dfDebitOfficialForm> dfDebitOfficialForm { get; set; }
        public virtual DbSet<dfDepartmentReceiptOfficialForm> dfDepartmentReceiptOfficialForm { get; set; }
        public virtual DbSet<dfDMSCompany> dfDMSCompany { get; set; }
        public virtual DbSet<dfDMSPOSTerminal> dfDMSPOSTerminal { get; set; }
        public virtual DbSet<dfDMSStore> dfDMSStore { get; set; }
        public virtual DbSet<dfDufryCompany> dfDufryCompany { get; set; }
        public virtual DbSet<dfDufryStore> dfDufryStore { get; set; }
        public virtual DbSet<dfEArchiveOfficialForm> dfEArchiveOfficialForm { get; set; }
        public virtual DbSet<dfEArchiveWebServiceParameters> dfEArchiveWebServiceParameters { get; set; }
        public virtual DbSet<dfEInvoiceOfficialForm> dfEInvoiceOfficialForm { get; set; }
        public virtual DbSet<dfEInvoiceWebServiceParameters> dfEInvoiceWebServiceParameters { get; set; }
        public virtual DbSet<dfEShipmentOfficialForm> dfEShipmentOfficialForm { get; set; }
        public virtual DbSet<dfEShipmentWebServiceParameters> dfEShipmentWebServiceParameters { get; set; }
        public virtual DbSet<dfExpenseSlipForm> dfExpenseSlipForm { get; set; }
        public virtual DbSet<dffastPayCompany> dffastPayCompany { get; set; }
        public virtual DbSet<dffastPayPosTerminal> dffastPayPosTerminal { get; set; }
        public virtual DbSet<dffastPayStore> dffastPayStore { get; set; }
        public virtual DbSet<dfFixedAssetReassessmentRates> dfFixedAssetReassessmentRates { get; set; }
        public virtual DbSet<dfGetirCarsiCompany> dfGetirCarsiCompany { get; set; }
        public virtual DbSet<dfGetirCarsiOrderCancelReasonConvert> dfGetirCarsiOrderCancelReasonConvert { get; set; }
        public virtual DbSet<dfGetirCarsiStore> dfGetirCarsiStore { get; set; }
        public virtual DbSet<dfGLClosedYear> dfGLClosedYear { get; set; }
        public virtual DbSet<dfGlobalBlueCompany> dfGlobalBlueCompany { get; set; }
        public virtual DbSet<dfGlobalBlueStore> dfGlobalBlueStore { get; set; }
        public virtual DbSet<dfGlobalDataMatrix> dfGlobalDataMatrix { get; set; }
        public virtual DbSet<dfGlobalDefault> dfGlobalDefault { get; set; }
        public virtual DbSet<dfGlobalFolder> dfGlobalFolder { get; set; }
        public virtual DbSet<dfGlobalItemSize> dfGlobalItemSize { get; set; }
        public virtual DbSet<dfGlobalMernisUser> dfGlobalMernisUser { get; set; }
        public virtual DbSet<dfGuidedSalesCustomerParameters> dfGuidedSalesCustomerParameters { get; set; }
        public virtual DbSet<dfGuidedSalesParameters> dfGuidedSalesParameters { get; set; }
        public virtual DbSet<dfGuidedSalesProductParameters> dfGuidedSalesProductParameters { get; set; }
        public virtual DbSet<dfHopiCompany> dfHopiCompany { get; set; }
        public virtual DbSet<dfHopiStore> dfHopiStore { get; set; }
        public virtual DbSet<dfIGACompany> dfIGACompany { get; set; }
        public virtual DbSet<dfIGAPosTerminal> dfIGAPosTerminal { get; set; }
        public virtual DbSet<dfIncomeTaxRelief> dfIncomeTaxRelief { get; set; }
        public virtual DbSet<dfInnerOrderProcessOfficialForm> dfInnerOrderProcessOfficialForm { get; set; }
        public virtual DbSet<dfInnerProcessOfficialForm> dfInnerProcessOfficialForm { get; set; }
        public virtual DbSet<dfInstallmentCountRulesBracket> dfInstallmentCountRulesBracket { get; set; }
        public virtual DbSet<dfInsuaranceExpenseCodes> dfInsuaranceExpenseCodes { get; set; }
        public virtual DbSet<dfItemDimensionNames> dfItemDimensionNames { get; set; }
        public virtual DbSet<dfItemTestOfficialForm> dfItemTestOfficialForm { get; set; }
        public virtual DbSet<dfIyzicoCompany> dfIyzicoCompany { get; set; }
        public virtual DbSet<dfJournalDefATAttribute> dfJournalDefATAttribute { get; set; }
        public virtual DbSet<dfJournalOfficialForm> dfJournalOfficialForm { get; set; }
        public virtual DbSet<dfJoyRefundCompany> dfJoyRefundCompany { get; set; }
        public virtual DbSet<dfJoyRefundStore> dfJoyRefundStore { get; set; }
        public virtual DbSet<dfMarketPlaceParameters> dfMarketPlaceParameters { get; set; }
        public virtual DbSet<dfMedulaLogonInfo> dfMedulaLogonInfo { get; set; }
        public virtual DbSet<dfMedulaStoreLogonInfo> dfMedulaStoreLogonInfo { get; set; }
        public virtual DbSet<dfMobilDevCompanyBrandCollectorID> dfMobilDevCompanyBrandCollectorID { get; set; }
        public virtual DbSet<dfMobilDevCompanyThirdPartyCollectorID> dfMobilDevCompanyThirdPartyCollectorID { get; set; }
        public virtual DbSet<dfMobildevStoreCollectorID> dfMobildevStoreCollectorID { get; set; }
        public virtual DbSet<dfMobilDevStoreCompanyBrandCollectorID> dfMobilDevStoreCompanyBrandCollectorID { get; set; }
        public virtual DbSet<dfMobilRevenueUser> dfMobilRevenueUser { get; set; }
        public virtual DbSet<dfMobilRevenueUserSalesPoint> dfMobilRevenueUserSalesPoint { get; set; }
        public virtual DbSet<dfMonthlyTurnoverTarget> dfMonthlyTurnoverTarget { get; set; }
        public virtual DbSet<dfOfficeCreditCardType> dfOfficeCreditCardType { get; set; }
        public virtual DbSet<dfOfficeDefault> dfOfficeDefault { get; set; }
        public virtual DbSet<dfOfficeEArchiveStartDate> dfOfficeEArchiveStartDate { get; set; }
        public virtual DbSet<dfOfficeNotAvailableProcess> dfOfficeNotAvailableProcess { get; set; }
        public virtual DbSet<dfOfflinePosTerminalParameters> dfOfflinePosTerminalParameters { get; set; }
        public virtual DbSet<dfOnlineBankWebServiceParameters> dfOnlineBankWebServiceParameters { get; set; }
        public virtual DbSet<dfOnlineDistributor> dfOnlineDistributor { get; set; }
        public virtual DbSet<dfOnlineInstallmentPaymentBankAccs> dfOnlineInstallmentPaymentBankAccs { get; set; }
        public virtual DbSet<dfOnlineInstallmentPaymentParameters> dfOnlineInstallmentPaymentParameters { get; set; }
        public virtual DbSet<dfOnlineSalesandPaymentBankAccs> dfOnlineSalesandPaymentBankAccs { get; set; }
        public virtual DbSet<dfOnlineSalesandPaymentParameters> dfOnlineSalesandPaymentParameters { get; set; }
        public virtual DbSet<dfOnlineSalesAndPaymentParametersForConnection> dfOnlineSalesAndPaymentParametersForConnection { get; set; }
        public virtual DbSet<dfOtherPaymentOfficialForm> dfOtherPaymentOfficialForm { get; set; }
        public virtual DbSet<dfPARO> dfPARO { get; set; }
        public virtual DbSet<dfPAROCompany> dfPAROCompany { get; set; }
        public virtual DbSet<dfPAROPOSTerminal> dfPAROPOSTerminal { get; set; }
        public virtual DbSet<dfPAROProductProperty> dfPAROProductProperty { get; set; }
        public virtual DbSet<dfPAROStore> dfPAROStore { get; set; }
        public virtual DbSet<dfPaymentOfficialForm> dfPaymentOfficialForm { get; set; }
        public virtual DbSet<dfPaynetBankIDConvert> dfPaynetBankIDConvert { get; set; }
        public virtual DbSet<dfPaynetCompany> dfPaynetCompany { get; set; }
        public virtual DbSet<dfPaynetPaymentPlan> dfPaynetPaymentPlan { get; set; }
        public virtual DbSet<dfPaynetStore> dfPaynetStore { get; set; }
        public virtual DbSet<dfPayrollDefault> dfPayrollDefault { get; set; }
        public virtual DbSet<dfPayrollForm> dfPayrollForm { get; set; }
        public virtual DbSet<dfPDCCurrAcc> dfPDCCurrAcc { get; set; }
        public virtual DbSet<dfPDCCurrAccAttribute> dfPDCCurrAccAttribute { get; set; }
        public virtual DbSet<dfPDCCurrAccCommunication> dfPDCCurrAccCommunication { get; set; }
        public virtual DbSet<dfPDCCurrAccContact> dfPDCCurrAccContact { get; set; }
        public virtual DbSet<dfPDCCurrAccPersonalInfo> dfPDCCurrAccPersonalInfo { get; set; }
        public virtual DbSet<dfPDCCurrAccPostalAddress> dfPDCCurrAccPostalAddress { get; set; }
        public virtual DbSet<dfPDCCustomerCompanyBrandAttribute> dfPDCCustomerCompanyBrandAttribute { get; set; }
        public virtual DbSet<dfPDCElements> dfPDCElements { get; set; }
        public virtual DbSet<dfPDCQuery> dfPDCQuery { get; set; }
        public virtual DbSet<dfPeriodicalAllocationRule> dfPeriodicalAllocationRule { get; set; }
        public virtual DbSet<dfPeriodicalSMSRule> dfPeriodicalSMSRule { get; set; }
        public virtual DbSet<dfPeriodicalTransferPlanRule> dfPeriodicalTransferPlanRule { get; set; }
        public virtual DbSet<dfPlanetPaymentCompany> dfPlanetPaymentCompany { get; set; }
        public virtual DbSet<dfPlanetPaymentStore> dfPlanetPaymentStore { get; set; }
        public virtual DbSet<dfPosCustomerScreenLayout> dfPosCustomerScreenLayout { get; set; }
        public virtual DbSet<dfPosCustomerScreenWidgetParameters> dfPosCustomerScreenWidgetParameters { get; set; }
        public virtual DbSet<dfPosDeviceParameters> dfPosDeviceParameters { get; set; }
        public virtual DbSet<dfPosNewCustomer> dfPosNewCustomer { get; set; }
        public virtual DbSet<dfPosNewCustomerActions> dfPosNewCustomerActions { get; set; }
        public virtual DbSet<dfPosNewCustomerField> dfPosNewCustomerField { get; set; }
        public virtual DbSet<dfPosOrderOpticalProductField> dfPosOrderOpticalProductField { get; set; }
        public virtual DbSet<dfPosUI> dfPosUI { get; set; }
        public virtual DbSet<dfPosUIDesc> dfPosUIDesc { get; set; }
        public virtual DbSet<dfPosUISetting> dfPosUISetting { get; set; }
        public virtual DbSet<dfPriceListForm> dfPriceListForm { get; set; }
        public virtual DbSet<dfProcessOfficialForm> dfProcessOfficialForm { get; set; }
        public virtual DbSet<dfProductHierarchy> dfProductHierarchy { get; set; }
        public virtual DbSet<dfProductHierarchyAttribute> dfProductHierarchyAttribute { get; set; }
        public virtual DbSet<dfProductHierarchyColorSet> dfProductHierarchyColorSet { get; set; }
        public virtual DbSet<dfProductHierarchyDefault> dfProductHierarchyDefault { get; set; }
        public virtual DbSet<dfProductHierarchyDimSet> dfProductHierarchyDimSet { get; set; }
        public virtual DbSet<dfProductHierarchyLevelNames> dfProductHierarchyLevelNames { get; set; }
        public virtual DbSet<dfProductsForOfficeBasedSerialNumberTracking> dfProductsForOfficeBasedSerialNumberTracking { get; set; }
        public virtual DbSet<dfProductsForSerialNumberTrackingOnCustomer> dfProductsForSerialNumberTrackingOnCustomer { get; set; }
        public virtual DbSet<dfPurchaseRequisitionOfficialForm> dfPurchaseRequisitionOfficialForm { get; set; }
        public virtual DbSet<dfPurchaseRequisitionProposalOfficialForm> dfPurchaseRequisitionProposalOfficialForm { get; set; }
        public virtual DbSet<dfReSendSMSForCustomerRelationship> dfReSendSMSForCustomerRelationship { get; set; }
        public virtual DbSet<dfRetailCustomerConditionalRequiredFields> dfRetailCustomerConditionalRequiredFields { get; set; }
        public virtual DbSet<dfRomaniaGoosfrabaeInvoiceOffice> dfRomaniaGoosfrabaeInvoiceOffice { get; set; }
        public virtual DbSet<dfRomaniaGoosfrabaeShipmentOffice> dfRomaniaGoosfrabaeShipmentOffice { get; set; }
        public virtual DbSet<dfSMSForCustomerRelationship> dfSMSForCustomerRelationship { get; set; }
        public virtual DbSet<dfSocialInsuranceRates> dfSocialInsuranceRates { get; set; }
        public virtual DbSet<dfStoreConsStore> dfStoreConsStore { get; set; }
        public virtual DbSet<dfStoreCreditableConfirmation> dfStoreCreditableConfirmation { get; set; }
        public virtual DbSet<dfStoreDefault> dfStoreDefault { get; set; }
        public virtual DbSet<dfStoreDeliveryWarehouse> dfStoreDeliveryWarehouse { get; set; }
        public virtual DbSet<dfStoreDigitalMarketingService> dfStoreDigitalMarketingService { get; set; }
        public virtual DbSet<dfStoreDistributionWarehouse> dfStoreDistributionWarehouse { get; set; }
        public virtual DbSet<dfStoreFolder> dfStoreFolder { get; set; }
        public virtual DbSet<dfStoreForeignCurrency> dfStoreForeignCurrency { get; set; }
        public virtual DbSet<dfStoreHierarchy> dfStoreHierarchy { get; set; }
        public virtual DbSet<dfStoreHierarchyLevelNames> dfStoreHierarchyLevelNames { get; set; }
        public virtual DbSet<dfStoreLabelTypes> dfStoreLabelTypes { get; set; }
        public virtual DbSet<dfStoreProductInformation> dfStoreProductInformation { get; set; }
        public virtual DbSet<dfStoreSupportWarehouse> dfStoreSupportWarehouse { get; set; }
        public virtual DbSet<dfStoreTotalDiscountAuthority> dfStoreTotalDiscountAuthority { get; set; }
        public virtual DbSet<dfStoreTransferStore> dfStoreTransferStore { get; set; }
        public virtual DbSet<dfSupportRequestOfficialForm> dfSupportRequestOfficialForm { get; set; }
        public virtual DbSet<dfSupportRequestSurveyDefault> dfSupportRequestSurveyDefault { get; set; }
        public virtual DbSet<dfTaxFreePointCompany> dfTaxFreePointCompany { get; set; }
        public virtual DbSet<dfTaxFreeRefundRate> dfTaxFreeRefundRate { get; set; }
        public virtual DbSet<dfTaxFreeZoneCompany> dfTaxFreeZoneCompany { get; set; }
        public virtual DbSet<dfTaxFreeZoneStore> dfTaxFreeZoneStore { get; set; }
        public virtual DbSet<dfTransactionDefFTAttribute> dfTransactionDefFTAttribute { get; set; }
        public virtual DbSet<dfUmicoPOSTerminal> dfUmicoPOSTerminal { get; set; }
        public virtual DbSet<dfUnifreeCompany> dfUnifreeCompany { get; set; }
        public virtual DbSet<dfUnifreeStore> dfUnifreeStore { get; set; }
        public virtual DbSet<dfUserAllowedOffice> dfUserAllowedOffice { get; set; }
        public virtual DbSet<dfUserAllowedStore> dfUserAllowedStore { get; set; }
        public virtual DbSet<dfUserAllowedWarehouse> dfUserAllowedWarehouse { get; set; }
        public virtual DbSet<dfUserPosition> dfUserPosition { get; set; }
        public virtual DbSet<dfUserPositionHistory> dfUserPositionHistory { get; set; }
        public virtual DbSet<dfUserPosUISettings> dfUserPosUISettings { get; set; }
        public virtual DbSet<dfUTSWebServiceToken> dfUTSWebServiceToken { get; set; }
        public virtual DbSet<dfVehicleLoadingOfficialForm> dfVehicleLoadingOfficialForm { get; set; }
        public virtual DbSet<dfVehicleUnLoadingOfficialForm> dfVehicleUnLoadingOfficialForm { get; set; }
        public virtual DbSet<dfVendorPriceListForm> dfVendorPriceListForm { get; set; }
        public virtual DbSet<dfVirementOfficialForm> dfVirementOfficialForm { get; set; }
        public virtual DbSet<dtSendingData> dtSendingData { get; set; }
        public virtual DbSet<e_EInvoiceIntegrators> e_EInvoiceIntegrators { get; set; }
        public virtual DbSet<e_GeneralLedgerDetail> e_GeneralLedgerDetail { get; set; }
        public virtual DbSet<e_GeneralLedgerHeader> e_GeneralLedgerHeader { get; set; }
        public virtual DbSet<e_GlobalParameters> e_GlobalParameters { get; set; }
        public virtual DbSet<e_InboxExpenseSlipLine> e_InboxExpenseSlipLine { get; set; }
        public virtual DbSet<e_InboxInvoiceAppResponse> e_InboxInvoiceAppResponse { get; set; }
        public virtual DbSet<e_InboxInvoiceConfirmation> e_InboxInvoiceConfirmation { get; set; }
        public virtual DbSet<e_InboxInvoiceCurrAcc> e_InboxInvoiceCurrAcc { get; set; }
        public virtual DbSet<e_InboxInvoiceDespatch> e_InboxInvoiceDespatch { get; set; }
        public virtual DbSet<e_InboxInvoiceHeader> e_InboxInvoiceHeader { get; set; }
        public virtual DbSet<e_InboxInvoiceLine> e_InboxInvoiceLine { get; set; }
        public virtual DbSet<e_InboxInvoiceOrder> e_InboxInvoiceOrder { get; set; }
        public virtual DbSet<e_InboxInvoiceParty> e_InboxInvoiceParty { get; set; }
        public virtual DbSet<e_InboxInvoiceSignedInfo> e_InboxInvoiceSignedInfo { get; set; }
        public virtual DbSet<e_InboxShipmentBuyerCustomerParty> e_InboxShipmentBuyerCustomerParty { get; set; }
        public virtual DbSet<e_InboxShipmentCarrierParty> e_InboxShipmentCarrierParty { get; set; }
        public virtual DbSet<e_InboxShipmentDeliveryCustomerParty> e_InboxShipmentDeliveryCustomerParty { get; set; }
        public virtual DbSet<e_InboxShipmentDespatchSupplierParty> e_InboxShipmentDespatchSupplierParty { get; set; }
        public virtual DbSet<e_InboxShipmentDrivers> e_InboxShipmentDrivers { get; set; }
        public virtual DbSet<e_InboxShipmentHeader> e_InboxShipmentHeader { get; set; }
        public virtual DbSet<e_InboxShipmentLine> e_InboxShipmentLine { get; set; }
        public virtual DbSet<e_InboxShipmentLineV3Items> e_InboxShipmentLineV3Items { get; set; }
        public virtual DbSet<e_InboxShipmentOriginatorCustomerParty> e_InboxShipmentOriginatorCustomerParty { get; set; }
        public virtual DbSet<e_InboxShipmentResponseDeliveryCustomerParty> e_InboxShipmentResponseDeliveryCustomerParty { get; set; }
        public virtual DbSet<e_InboxShipmentResponseDespatchSupplierParty> e_InboxShipmentResponseDespatchSupplierParty { get; set; }
        public virtual DbSet<e_InboxShipmentResponseHeader> e_InboxShipmentResponseHeader { get; set; }
        public virtual DbSet<e_InboxShipmentResponseLine> e_InboxShipmentResponseLine { get; set; }
        public virtual DbSet<e_InboxShipmentSellerSupplierParty> e_InboxShipmentSellerSupplierParty { get; set; }
        public virtual DbSet<e_InboxShipmentStatus> e_InboxShipmentStatus { get; set; }
        public virtual DbSet<e_InboxShipmentTransportDetails> e_InboxShipmentTransportDetails { get; set; }
        public virtual DbSet<e_InboxStatus> e_InboxStatus { get; set; }
        public virtual DbSet<e_InvoiceTrace> e_InvoiceTrace { get; set; }
        public virtual DbSet<e_JournalEntryDetail> e_JournalEntryDetail { get; set; }
        public virtual DbSet<e_JournalEntryHeader> e_JournalEntryHeader { get; set; }
        public virtual DbSet<e_LastShipmentAskDate> e_LastShipmentAskDate { get; set; }
        public virtual DbSet<e_LedgerLog> e_LedgerLog { get; set; }
        public virtual DbSet<e_LedgerParameters> e_LedgerParameters { get; set; }
        public virtual DbSet<e_LedgerSequenceNumber> e_LedgerSequenceNumber { get; set; }
        public virtual DbSet<e_LedgerSerialNumber> e_LedgerSerialNumber { get; set; }
        public virtual DbSet<e_OutboxInvoiceAppResponse> e_OutboxInvoiceAppResponse { get; set; }
        public virtual DbSet<e_OutboxInvoiceCurrAcc> e_OutboxInvoiceCurrAcc { get; set; }
        public virtual DbSet<e_OutboxInvoiceDelivery> e_OutboxInvoiceDelivery { get; set; }
        public virtual DbSet<e_OutboxInvoiceDespatch> e_OutboxInvoiceDespatch { get; set; }
        public virtual DbSet<e_OutboxInvoiceHeader> e_OutboxInvoiceHeader { get; set; }
        public virtual DbSet<e_OutboxInvoiceHeaderExportSaleCharges> e_OutboxInvoiceHeaderExportSaleCharges { get; set; }
        public virtual DbSet<e_OutboxInvoiceHeaderExportSaleExtensions> e_OutboxInvoiceHeaderExportSaleExtensions { get; set; }
        public virtual DbSet<e_OutboxInvoiceHeaderExportSaleTransportDetails> e_OutboxInvoiceHeaderExportSaleTransportDetails { get; set; }
        public virtual DbSet<e_OutboxInvoiceLine> e_OutboxInvoiceLine { get; set; }
        public virtual DbSet<e_OutboxInvoiceLinePickingDetails> e_OutboxInvoiceLinePickingDetails { get; set; }
        public virtual DbSet<e_OutboxInvoiceOrder> e_OutboxInvoiceOrder { get; set; }
        public virtual DbSet<e_OutboxInvoiceParty> e_OutboxInvoiceParty { get; set; }
        public virtual DbSet<e_OutboxInvoiceSGKExtensions> e_OutboxInvoiceSGKExtensions { get; set; }
        public virtual DbSet<e_OutboxInvoiceUBLExtensions> e_OutboxInvoiceUBLExtensions { get; set; }
        public virtual DbSet<e_OutboxShipmentBuyerCustomerParty> e_OutboxShipmentBuyerCustomerParty { get; set; }
        public virtual DbSet<e_OutboxShipmentCarrierParty> e_OutboxShipmentCarrierParty { get; set; }
        public virtual DbSet<e_OutboxShipmentDeliveryCustomerParty> e_OutboxShipmentDeliveryCustomerParty { get; set; }
        public virtual DbSet<e_OutboxShipmentDespatchSupplierParty> e_OutboxShipmentDespatchSupplierParty { get; set; }
        public virtual DbSet<e_OutboxShipmentDrivers> e_OutboxShipmentDrivers { get; set; }
        public virtual DbSet<e_OutboxShipmentHeader> e_OutboxShipmentHeader { get; set; }
        public virtual DbSet<e_OutboxShipmentLine> e_OutboxShipmentLine { get; set; }
        public virtual DbSet<e_OutboxShipmentOrder> e_OutboxShipmentOrder { get; set; }
        public virtual DbSet<e_OutboxShipmentOriginatorCustomerParty> e_OutboxShipmentOriginatorCustomerParty { get; set; }
        public virtual DbSet<e_OutboxShipmentResponseDeliveryCustomerParty> e_OutboxShipmentResponseDeliveryCustomerParty { get; set; }
        public virtual DbSet<e_OutboxShipmentResponseDespatchSupplierParty> e_OutboxShipmentResponseDespatchSupplierParty { get; set; }
        public virtual DbSet<e_OutboxShipmentResponseHeader> e_OutboxShipmentResponseHeader { get; set; }
        public virtual DbSet<e_OutboxShipmentResponseLine> e_OutboxShipmentResponseLine { get; set; }
        public virtual DbSet<e_OutboxShipmentSellerSupplierParty> e_OutboxShipmentSellerSupplierParty { get; set; }
        public virtual DbSet<e_OutboxShipmentStatus> e_OutboxShipmentStatus { get; set; }
        public virtual DbSet<e_OutboxShipmentTransportDetails> e_OutboxShipmentTransportDetails { get; set; }
        public virtual DbSet<e_OutboxShipmentUBLExtensions> e_OutboxShipmentUBLExtensions { get; set; }
        public virtual DbSet<e_OutboxStatus> e_OutboxStatus { get; set; }
        public virtual DbSet<e_PartyType> e_PartyType { get; set; }
        public virtual DbSet<e_SubjectToEInvoice> e_SubjectToEInvoice { get; set; }
        public virtual DbSet<e_SubjectToEShipment> e_SubjectToEShipment { get; set; }
        public virtual DbSet<FixSellUser> FixSellUser { get; set; }
        public virtual DbSet<hrEmployeeAGI> hrEmployeeAGI { get; set; }
        public virtual DbSet<hrEmployeeJobTitle> hrEmployeeJobTitle { get; set; }
        public virtual DbSet<hrEmployeeMonthlySum> hrEmployeeMonthlySum { get; set; }
        public virtual DbSet<hrEmployeeMonthlySumDetail> hrEmployeeMonthlySumDetail { get; set; }
        public virtual DbSet<hrEmployeeOrganizationChart> hrEmployeeOrganizationChart { get; set; }
        public virtual DbSet<hrEmployeePayrollProfile> hrEmployeePayrollProfile { get; set; }
        public virtual DbSet<hrEmployeePrivateInsurance> hrEmployeePrivateInsurance { get; set; }
        public virtual DbSet<hrEmployeeSGKBorrowing> hrEmployeeSGKBorrowing { get; set; }
        public virtual DbSet<hrEmployeeWage> hrEmployeeWage { get; set; }
        public virtual DbSet<hrEmployeeWorkPlace> hrEmployeeWorkPlace { get; set; }
        public virtual DbSet<hrJobInterview> hrJobInterview { get; set; }
        public virtual DbSet<hrJobInterviewResults> hrJobInterviewResults { get; set; }
        public virtual DbSet<hrJobPositionCandidate> hrJobPositionCandidate { get; set; }
        public virtual DbSet<hrJobTitleOrganizationChart> hrJobTitleOrganizationChart { get; set; }
        public virtual DbSet<hrSGKEmployeeJobEndDeclaration> hrSGKEmployeeJobEndDeclaration { get; set; }
        public virtual DbSet<hrSGKEmployeeJobStartDeclaration> hrSGKEmployeeJobStartDeclaration { get; set; }
        public virtual DbSet<hrSGKMonthlyDocument> hrSGKMonthlyDocument { get; set; }
        public virtual DbSet<hrSGKMonthlyDocumentDeclaration> hrSGKMonthlyDocumentDeclaration { get; set; }
        public virtual DbSet<hrTestResult> hrTestResult { get; set; }
        public virtual DbSet<hrWageGarnishment> hrWageGarnishment { get; set; }
        public virtual DbSet<InvoiceDetails> InvoiceDetails { get; set; }
        public virtual DbSet<lgSMSForCustomerRelationshipNonFormattedCommunications> lgSMSForCustomerRelationshipNonFormattedCommunications { get; set; }
        public virtual DbSet<lgV3EventLog> lgV3EventLog { get; set; }
        public virtual DbSet<lgV3OfflinePOSSendStatusLog> lgV3OfflinePOSSendStatusLog { get; set; }
        public virtual DbSet<Parameters> Parameters { get; set; }
        public virtual DbSet<prAllocationResultViewCustomization> prAllocationResultViewCustomization { get; set; }
        public virtual DbSet<prAllocationRuleScript> prAllocationRuleScript { get; set; }
        public virtual DbSet<prAllocationTemplateParameterValue> prAllocationTemplateParameterValue { get; set; }
        public virtual DbSet<prAmountRuleBracket> prAmountRuleBracket { get; set; }
        public virtual DbSet<prAvailableDeclarationPostTypes> prAvailableDeclarationPostTypes { get; set; }
        public virtual DbSet<prBankAdditionalChargeTypeGLAccs> prBankAdditionalChargeTypeGLAccs { get; set; }
        public virtual DbSet<prBankBranch> prBankBranch { get; set; }
        public virtual DbSet<prBankPOSAccounts> prBankPOSAccounts { get; set; }
        public virtual DbSet<prBankPOSGLAccs> prBankPOSGLAccs { get; set; }
        public virtual DbSet<prBankPosID> prBankPosID { get; set; }
        public virtual DbSet<prBankPOSProviderConvert> prBankPOSProviderConvert { get; set; }
        public virtual DbSet<prBOMContent> prBOMContent { get; set; }
        public virtual DbSet<prBOMTemplateAttribute> prBOMTemplateAttribute { get; set; }
        public virtual DbSet<prBOMTemplateContent> prBOMTemplateContent { get; set; }
        public virtual DbSet<prBOMTemplateItemConditionalFilter> prBOMTemplateItemConditionalFilter { get; set; }
        public virtual DbSet<prBOMTemplateItemFilter> prBOMTemplateItemFilter { get; set; }
        public virtual DbSet<prCareWarningTemplateAtt> prCareWarningTemplateAtt { get; set; }
        public virtual DbSet<prChannelTemplateCurrAcc> prChannelTemplateCurrAcc { get; set; }
        public virtual DbSet<prChequeAttribute> prChequeAttribute { get; set; }
        public virtual DbSet<prChequeGLAccs> prChequeGLAccs { get; set; }
        public virtual DbSet<prCityMapLocation> prCityMapLocation { get; set; }
        public virtual DbSet<prColorThemeAttribute> prColorThemeAttribute { get; set; }
        public virtual DbSet<prCompanyCostCenter> prCompanyCostCenter { get; set; }
        public virtual DbSet<prCompanyCreditCardEarnedPoints> prCompanyCreditCardEarnedPoints { get; set; }
        public virtual DbSet<prCompanyCreditCardEmployee> prCompanyCreditCardEmployee { get; set; }
        public virtual DbSet<prCompanyCreditCardExpense> prCompanyCreditCardExpense { get; set; }
        public virtual DbSet<prCompanyCreditCardUsageFee> prCompanyCreditCardUsageFee { get; set; }
        public virtual DbSet<prCompanyExpense> prCompanyExpense { get; set; }
        public virtual DbSet<prCompanyExpenseInvoiceConfirmationRule> prCompanyExpenseInvoiceConfirmationRule { get; set; }
        public virtual DbSet<prCompanyHierarchy> prCompanyHierarchy { get; set; }
        public virtual DbSet<prConfirmationFormCommTypes> prConfirmationFormCommTypes { get; set; }
        public virtual DbSet<prConfirmationFormContent> prConfirmationFormContent { get; set; }
        public virtual DbSet<prConfirmationRequiredProductGroups> prConfirmationRequiredProductGroups { get; set; }
        public virtual DbSet<prConfirmationRuleStep> prConfirmationRuleStep { get; set; }
        public virtual DbSet<prConfirmationRuleStepUser> prConfirmationRuleStepUser { get; set; }
        public virtual DbSet<prConsentSourceConvert> prConsentSourceConvert { get; set; }
        public virtual DbSet<prConvertedJobCandidate> prConvertedJobCandidate { get; set; }
        public virtual DbSet<prConvertedPotentialCustomer> prConvertedPotentialCustomer { get; set; }
        public virtual DbSet<prCostCenterAttribute> prCostCenterAttribute { get; set; }
        public virtual DbSet<prCostCenterCostDriver> prCostCenterCostDriver { get; set; }
        public virtual DbSet<prCostCenterHierarchy> prCostCenterHierarchy { get; set; }
        public virtual DbSet<prCountryCallingCode> prCountryCallingCode { get; set; }
        public virtual DbSet<prCountryPCTApplicablePaymentTypes> prCountryPCTApplicablePaymentTypes { get; set; }
        public virtual DbSet<prCreditCardTypeBIN> prCreditCardTypeBIN { get; set; }
        public virtual DbSet<prCreditCardTypeGLAccs> prCreditCardTypeGLAccs { get; set; }
        public virtual DbSet<prCreditCardValidity> prCreditCardValidity { get; set; }
        public virtual DbSet<prCreditSurveyorResponsibilityArea> prCreditSurveyorResponsibilityArea { get; set; }
        public virtual DbSet<prCurrAccAttribute> prCurrAccAttribute { get; set; }
        public virtual DbSet<prCurrAccAvailableForeignCurrencyTrans> prCurrAccAvailableForeignCurrencyTrans { get; set; }
        public virtual DbSet<prCurrAccBadDebtStatus> prCurrAccBadDebtStatus { get; set; }
        public virtual DbSet<prCurrAccBankAccNo> prCurrAccBankAccNo { get; set; }
        public virtual DbSet<prCurrAccCommunication> prCurrAccCommunication { get; set; }
        public virtual DbSet<prCurrAccCommunicationFormatted> prCurrAccCommunicationFormatted { get; set; }
        public virtual DbSet<prCurrAccCompanyBrand> prCurrAccCompanyBrand { get; set; }
        public virtual DbSet<prCurrAccContact> prCurrAccContact { get; set; }
        public virtual DbSet<prCurrAccDefault> prCurrAccDefault { get; set; }
        public virtual DbSet<prCurrAccEInvoiceAlias> prCurrAccEInvoiceAlias { get; set; }
        public virtual DbSet<prCurrAccEInvoiceOfficialForm> prCurrAccEInvoiceOfficialForm { get; set; }
        public virtual DbSet<prCurrAccEShipmentAlias> prCurrAccEShipmentAlias { get; set; }
        public virtual DbSet<prCurrAccEShipmentOfficialForm> prCurrAccEShipmentOfficialForm { get; set; }
        public virtual DbSet<prCurrAccExtendedProperties> prCurrAccExtendedProperties { get; set; }
        public virtual DbSet<prCurrAccGLAccount> prCurrAccGLAccount { get; set; }
        public virtual DbSet<prCurrAccInformation> prCurrAccInformation { get; set; }
        public virtual DbSet<prCurrAccListContent> prCurrAccListContent { get; set; }
        public virtual DbSet<prCurrAccLotGrAtt> prCurrAccLotGrAtt { get; set; }
        public virtual DbSet<prCurrAccMapLocation> prCurrAccMapLocation { get; set; }
        public virtual DbSet<prCurrAccNotes> prCurrAccNotes { get; set; }
        public virtual DbSet<prCurrAccOnlineBank> prCurrAccOnlineBank { get; set; }
        public virtual DbSet<prCurrAccOptInOptOutStatus> prCurrAccOptInOptOutStatus { get; set; }
        public virtual DbSet<prCurrAccPersonalDataConfirmation> prCurrAccPersonalDataConfirmation { get; set; }
        public virtual DbSet<prCurrAccPersonalDataConfirmationStatus> prCurrAccPersonalDataConfirmationStatus { get; set; }
        public virtual DbSet<prCurrAccPersonalInfo> prCurrAccPersonalInfo { get; set; }
        public virtual DbSet<prCurrAccPhoto> prCurrAccPhoto { get; set; }
        public virtual DbSet<prCurrAccPostalAddress> prCurrAccPostalAddress { get; set; }
        public virtual DbSet<prCurrAccReconciliationContact> prCurrAccReconciliationContact { get; set; }
        public virtual DbSet<prCurrAccReconciliationContactReports> prCurrAccReconciliationContactReports { get; set; }
        public virtual DbSet<prCurrAccUBLExtensions> prCurrAccUBLExtensions { get; set; }
        public virtual DbSet<prCurrAccUserWarning> prCurrAccUserWarning { get; set; }
        public virtual DbSet<prCurrAccUTSInformation> prCurrAccUTSInformation { get; set; }
        public virtual DbSet<prCustomerCompanyBrandAttribute> prCustomerCompanyBrandAttribute { get; set; }
        public virtual DbSet<prCustomerConversation> prCustomerConversation { get; set; }
        public virtual DbSet<prCustomerConversationSubjectRelatedResult> prCustomerConversationSubjectRelatedResult { get; set; }
        public virtual DbSet<prCustomerCreditLimit> prCustomerCreditLimit { get; set; }
        public virtual DbSet<prCustomerDBSAccount> prCustomerDBSAccount { get; set; }
        public virtual DbSet<prCustomerDiscountGrAtt> prCustomerDiscountGrAtt { get; set; }
        public virtual DbSet<prCustomerMarkupGrAtt> prCustomerMarkupGrAtt { get; set; }
        public virtual DbSet<prCustomerOnlinePayment> prCustomerOnlinePayment { get; set; }
        public virtual DbSet<prCustomerOnlinePaymentContact> prCustomerOnlinePaymentContact { get; set; }
        public virtual DbSet<prCustomerPaymentPlanGrAtt> prCustomerPaymentPlanGrAtt { get; set; }
        public virtual DbSet<prCustomerPresentCard> prCustomerPresentCard { get; set; }
        public virtual DbSet<prCustomerSalesperson> prCustomerSalesperson { get; set; }
        public virtual DbSet<prCustomerStore> prCustomerStore { get; set; }
        public virtual DbSet<prCustomerVendorAccount> prCustomerVendorAccount { get; set; }
        public virtual DbSet<prCustomerVerificationPassword> prCustomerVerificationPassword { get; set; }
        public virtual DbSet<prCustomProcessGroupAtt> prCustomProcessGroupAtt { get; set; }
        public virtual DbSet<prDataTransferCompanyParameter> prDataTransferCompanyParameter { get; set; }
        public virtual DbSet<prDataTransferJobClients> prDataTransferJobClients { get; set; }
        public virtual DbSet<prDataTransferJobSchedule> prDataTransferJobSchedule { get; set; }
        public virtual DbSet<prDataTransferTemplateQuery> prDataTransferTemplateQuery { get; set; }
        public virtual DbSet<prDataTransferTemplateQueryFilter> prDataTransferTemplateQueryFilter { get; set; }
        public virtual DbSet<prDBSLimitAkbank> prDBSLimitAkbank { get; set; }
        public virtual DbSet<prDBSLimitAkbankHistory> prDBSLimitAkbankHistory { get; set; }
        public virtual DbSet<prDBSLimitIsBankasi> prDBSLimitIsBankasi { get; set; }
        public virtual DbSet<prDBSLimitIsBankasiHistory> prDBSLimitIsBankasiHistory { get; set; }
        public virtual DbSet<prDBSLimitTEB> prDBSLimitTEB { get; set; }
        public virtual DbSet<prDBSLimitTEBHistory> prDBSLimitTEBHistory { get; set; }
        public virtual DbSet<prDBSLimitYKB> prDBSLimitYKB { get; set; }
        public virtual DbSet<prDBSLimitYKBHistory> prDBSLimitYKBHistory { get; set; }
        public virtual DbSet<prDeclarationGLAccs> prDeclarationGLAccs { get; set; }
        public virtual DbSet<prDeclarationTypeDetail> prDeclarationTypeDetail { get; set; }
        public virtual DbSet<prDeclarationXML> prDeclarationXML { get; set; }
        public virtual DbSet<prDeliveryCompanyMarketPlaceMapping> prDeliveryCompanyMarketPlaceMapping { get; set; }
        public virtual DbSet<prDigitalChannelStockConfiguration> prDigitalChannelStockConfiguration { get; set; }
        public virtual DbSet<prDiscountOfferActiveLog> prDiscountOfferActiveLog { get; set; }
        public virtual DbSet<prDiscountOfferAttribute> prDiscountOfferAttribute { get; set; }
        public virtual DbSet<prDiscountOfferCreditCard> prDiscountOfferCreditCard { get; set; }
        public virtual DbSet<prDiscountOfferCustomer> prDiscountOfferCustomer { get; set; }
        public virtual DbSet<prDiscountOfferDescription> prDiscountOfferDescription { get; set; }
        public virtual DbSet<prDiscountOfferLocation> prDiscountOfferLocation { get; set; }
        public virtual DbSet<prDiscountOfferMethodParameter> prDiscountOfferMethodParameter { get; set; }
        public virtual DbSet<prDiscountOfferMethodScript> prDiscountOfferMethodScript { get; set; }
        public virtual DbSet<prDiscountOfferNotes> prDiscountOfferNotes { get; set; }
        public virtual DbSet<prDiscountOfferParameterValue> prDiscountOfferParameterValue { get; set; }
        public virtual DbSet<prDiscountOfferPassword> prDiscountOfferPassword { get; set; }
        public virtual DbSet<prDiscountOfferPaymentPlan> prDiscountOfferPaymentPlan { get; set; }
        public virtual DbSet<prDiscountOfferPaymentProvider> prDiscountOfferPaymentProvider { get; set; }
        public virtual DbSet<prDiscountOfferProduct> prDiscountOfferProduct { get; set; }
        public virtual DbSet<prDiscountOfferRules> prDiscountOfferRules { get; set; }
        public virtual DbSet<prDiscountOfferTurnoverTarget> prDiscountOfferTurnoverTarget { get; set; }
        public virtual DbSet<prDiscountPoint> prDiscountPoint { get; set; }
        public virtual DbSet<prDiscountPointTypeNotes> prDiscountPointTypeNotes { get; set; }
        public virtual DbSet<prDiscountReasonSubReason> prDiscountReasonSubReason { get; set; }
        public virtual DbSet<prDiscountTypeGLAccs> prDiscountTypeGLAccs { get; set; }
        public virtual DbSet<prDiscountVoucherTypeNotes> prDiscountVoucherTypeNotes { get; set; }
        public virtual DbSet<prDistrictMapLocation> prDistrictMapLocation { get; set; }
        public virtual DbSet<prDOVGLAccs> prDOVGLAccs { get; set; }
        public virtual DbSet<prEArchiveWebServiceCompany> prEArchiveWebServiceCompany { get; set; }
        public virtual DbSet<prEArchiveWebServiceOffice> prEArchiveWebServiceOffice { get; set; }
        public virtual DbSet<prEasyStartupComments> prEasyStartupComments { get; set; }
        public virtual DbSet<prEasyStartupNotes> prEasyStartupNotes { get; set; }
        public virtual DbSet<prEInvoiceWebServiceCompany> prEInvoiceWebServiceCompany { get; set; }
        public virtual DbSet<prEInvoiceWebServiceOffice> prEInvoiceWebServiceOffice { get; set; }
        public virtual DbSet<prEmployee7252Incentive> prEmployee7252Incentive { get; set; }
        public virtual DbSet<prEmployeeDocument> prEmployeeDocument { get; set; }
        public virtual DbSet<prEmployeeEducation> prEmployeeEducation { get; set; }
        public virtual DbSet<prEmployeeForeignLanguage> prEmployeeForeignLanguage { get; set; }
        public virtual DbSet<prEmployeeJobTraining> prEmployeeJobTraining { get; set; }
        public virtual DbSet<prEmployeeLeaveDay> prEmployeeLeaveDay { get; set; }
        public virtual DbSet<prEmployeeLeaveHour> prEmployeeLeaveHour { get; set; }
        public virtual DbSet<prEmployeeLeaveRequest> prEmployeeLeaveRequest { get; set; }
        public virtual DbSet<prEmployeeLeaveRequestHour> prEmployeeLeaveRequestHour { get; set; }
        public virtual DbSet<prEmployeeLeaveTransfered> prEmployeeLeaveTransfered { get; set; }
        public virtual DbSet<prEmployeePrevJob> prEmployeePrevJob { get; set; }
        public virtual DbSet<prEmployeeRecord> prEmployeeRecord { get; set; }
        public virtual DbSet<prEmployeeRemoteWorkDays> prEmployeeRemoteWorkDays { get; set; }
        public virtual DbSet<prEmployeeSeniorityTransfered> prEmployeeSeniorityTransfered { get; set; }
        public virtual DbSet<prEmployeeShoppingLimit> prEmployeeShoppingLimit { get; set; }
        public virtual DbSet<prEmployeeSoftware> prEmployeeSoftware { get; set; }
        public virtual DbSet<prEmployeeWorkplaceInformation> prEmployeeWorkplaceInformation { get; set; }
        public virtual DbSet<prExpenseInvoiceConfirmationRule> prExpenseInvoiceConfirmationRule { get; set; }
        public virtual DbSet<prExportFileAttribute> prExportFileAttribute { get; set; }
        public virtual DbSet<prExportFileIndirectExpense> prExportFileIndirectExpense { get; set; }
        public virtual DbSet<prExportFileInsurance> prExportFileInsurance { get; set; }
        public virtual DbSet<prExportFileShippingInfo> prExportFileShippingInfo { get; set; }
        public virtual DbSet<prExportFileStatusHistory> prExportFileStatusHistory { get; set; }
        public virtual DbSet<prFixedAssetDepreciationInfo> prFixedAssetDepreciationInfo { get; set; }
        public virtual DbSet<prFixedAssetEmployee> prFixedAssetEmployee { get; set; }
        public virtual DbSet<prFixedAssetExpense> prFixedAssetExpense { get; set; }
        public virtual DbSet<prFixedAssetExpenseReassessment> prFixedAssetExpenseReassessment { get; set; }
        public virtual DbSet<prFixedAssetInsurance> prFixedAssetInsurance { get; set; }
        public virtual DbSet<prFixedAssetPurchases> prFixedAssetPurchases { get; set; }
        public virtual DbSet<prFixedAssetReassessmentRates> prFixedAssetReassessmentRates { get; set; }
        public virtual DbSet<prFixedAssetSales> prFixedAssetSales { get; set; }
        public virtual DbSet<prFixedAssetStatusHistory> prFixedAssetStatusHistory { get; set; }
        public virtual DbSet<prGiftCardCharge> prGiftCardCharge { get; set; }
        public virtual DbSet<prGLAccAttribute> prGLAccAttribute { get; set; }
        public virtual DbSet<prGLAccAvailableForeignCurrencyTrans> prGLAccAvailableForeignCurrencyTrans { get; set; }
        public virtual DbSet<prGLAccAvailableJournalTypeSub> prGLAccAvailableJournalTypeSub { get; set; }
        public virtual DbSet<prGLAccNotes> prGLAccNotes { get; set; }
        public virtual DbSet<prGLAccOnlineBank> prGLAccOnlineBank { get; set; }
        public virtual DbSet<prGLAccUserWarning> prGLAccUserWarning { get; set; }
        public virtual DbSet<prGLReflectionAccount> prGLReflectionAccount { get; set; }
        public virtual DbSet<prImportFileAttribute> prImportFileAttribute { get; set; }
        public virtual DbSet<prImportFileExpense> prImportFileExpense { get; set; }
        public virtual DbSet<prImportFileGLAccs> prImportFileGLAccs { get; set; }
        public virtual DbSet<prImportFileIndirectExpense> prImportFileIndirectExpense { get; set; }
        public virtual DbSet<prImportFileInsurance> prImportFileInsurance { get; set; }
        public virtual DbSet<prImportFileShippingInfo> prImportFileShippingInfo { get; set; }
        public virtual DbSet<prImportFileStatusHistory> prImportFileStatusHistory { get; set; }
        public virtual DbSet<prInnerProcessInfo> prInnerProcessInfo { get; set; }
        public virtual DbSet<prInnerProcessITAttribute> prInnerProcessITAttribute { get; set; }
        public virtual DbSet<prInnerProcessItemType> prInnerProcessItemType { get; set; }
        public virtual DbSet<prInsuranceAgencyContribution> prInsuranceAgencyContribution { get; set; }
        public virtual DbSet<prInteractiveSMSApplications> prInteractiveSMSApplications { get; set; }
        public virtual DbSet<prITAttributeTypeRequiredProcesses> prITAttributeTypeRequiredProcesses { get; set; }
        public virtual DbSet<prItemAccountGrGLAccs> prItemAccountGrGLAccs { get; set; }
        public virtual DbSet<prItemAirportSalesCommissionGroup> prItemAirportSalesCommissionGroup { get; set; }
        public virtual DbSet<prItemAlike> prItemAlike { get; set; }
        public virtual DbSet<prItemAttribute> prItemAttribute { get; set; }
        public virtual DbSet<prItemBarcode> prItemBarcode { get; set; }
        public virtual DbSet<prItemBasePrice> prItemBasePrice { get; set; }
        public virtual DbSet<prItemBatchBarcode> prItemBatchBarcode { get; set; }
        public virtual DbSet<prItemColorAttributes> prItemColorAttributes { get; set; }
        public virtual DbSet<prItemColorFabricBlend> prItemColorFabricBlend { get; set; }
        public virtual DbSet<prItemCompanyBrand> prItemCompanyBrand { get; set; }
        public virtual DbSet<prItemCostCenter> prItemCostCenter { get; set; }
        public virtual DbSet<prItemCostCenterRates> prItemCostCenterRates { get; set; }
        public virtual DbSet<prItemCrossUnitOfMeasure> prItemCrossUnitOfMeasure { get; set; }
        public virtual DbSet<prItemDim1Equ> prItemDim1Equ { get; set; }
        public virtual DbSet<prItemDim2Equ> prItemDim2Equ { get; set; }
        public virtual DbSet<prItemDim3Equ> prItemDim3Equ { get; set; }
        public virtual DbSet<prItemDiscountGrAtt> prItemDiscountGrAtt { get; set; }
        public virtual DbSet<prItemInformation> prItemInformation { get; set; }
        public virtual DbSet<prItemListContent> prItemListContent { get; set; }
        public virtual DbSet<prItemMeasuresOfVolume> prItemMeasuresOfVolume { get; set; }
        public virtual DbSet<prItemNotes> prItemNotes { get; set; }
        public virtual DbSet<prItemPaymentPlanGrAtt> prItemPaymentPlanGrAtt { get; set; }
        public virtual DbSet<prItemPhoto> prItemPhoto { get; set; }
        public virtual DbSet<prItemProcessPermits> prItemProcessPermits { get; set; }
        public virtual DbSet<prItemRequisition> prItemRequisition { get; set; }
        public virtual DbSet<prItemSection> prItemSection { get; set; }
        public virtual DbSet<prItemSerialNumber> prItemSerialNumber { get; set; }
        public virtual DbSet<prItemSerialNumberPool> prItemSerialNumberPool { get; set; }
        public virtual DbSet<prItemStockLevel> prItemStockLevel { get; set; }
        public virtual DbSet<prItemTaxGrAtt> prItemTaxGrAtt { get; set; }
        public virtual DbSet<prItemTextileCareSymbol> prItemTextileCareSymbol { get; set; }
        public virtual DbSet<prItemTextileCareTemplateSymbol> prItemTextileCareTemplateSymbol { get; set; }
        public virtual DbSet<prItemUnAcceptableExpense> prItemUnAcceptableExpense { get; set; }
        public virtual DbSet<prItemVariant> prItemVariant { get; set; }
        public virtual DbSet<prItemVendorGrAtt> prItemVendorGrAtt { get; set; }
        public virtual DbSet<prJobTrainingAttribute> prJobTrainingAttribute { get; set; }
        public virtual DbSet<prJobTrainingNotes> prJobTrainingNotes { get; set; }
        public virtual DbSet<prJobTrainingPlanned> prJobTrainingPlanned { get; set; }
        public virtual DbSet<prJobTrainingRealised> prJobTrainingRealised { get; set; }
        public virtual DbSet<prLetterOfGuaranteeAttribute> prLetterOfGuaranteeAttribute { get; set; }
        public virtual DbSet<prLinkedProductContent> prLinkedProductContent { get; set; }
        public virtual DbSet<prLinkedProductContentSum> prLinkedProductContentSum { get; set; }
        public virtual DbSet<prLinkedProductContentSumDetail> prLinkedProductContentSumDetail { get; set; }
        public virtual DbSet<prLinkedProductProperties> prLinkedProductProperties { get; set; }
        public virtual DbSet<prLotQty> prLotQty { get; set; }
        public virtual DbSet<prMarketPlaceCategoryAttConvert> prMarketPlaceCategoryAttConvert { get; set; }
        public virtual DbSet<prMarketPlaceCategoryAttType> prMarketPlaceCategoryAttType { get; set; }
        public virtual DbSet<prMarketPlaceCategoryAttTypeConvert> prMarketPlaceCategoryAttTypeConvert { get; set; }
        public virtual DbSet<prMarketPlaceCategoryConvert> prMarketPlaceCategoryConvert { get; set; }
        public virtual DbSet<prMarketPlaceCreditCardMappings> prMarketPlaceCreditCardMappings { get; set; }
        public virtual DbSet<prMarketPlaceItemVariant> prMarketPlaceItemVariant { get; set; }
        public virtual DbSet<prMarketPlaceProduct> prMarketPlaceProduct { get; set; }
        public virtual DbSet<prMarketPlaceProductHierarchyConvert> prMarketPlaceProductHierarchyConvert { get; set; }
        public virtual DbSet<prMarketPlaceProductInformation> prMarketPlaceProductInformation { get; set; }
        public virtual DbSet<prMDMCommunication> prMDMCommunication { get; set; }
        public virtual DbSet<prMDMPostalAddress> prMDMPostalAddress { get; set; }
        public virtual DbSet<prMedicalProductImportCountries> prMedicalProductImportCountries { get; set; }
        public virtual DbSet<prMedicalProductOriginCountries> prMedicalProductOriginCountries { get; set; }
        public virtual DbSet<prMedicalProductProperties> prMedicalProductProperties { get; set; }
        public virtual DbSet<prMT940ProcessRules> prMT940ProcessRules { get; set; }
        public virtual DbSet<prNotesGLAccs> prNotesGLAccs { get; set; }
        public virtual DbSet<prOfficeCOGSGrAtt> prOfficeCOGSGrAtt { get; set; }
        public virtual DbSet<prOfficeGLAccs> prOfficeGLAccs { get; set; }
        public virtual DbSet<prOfficeMapLocation> prOfficeMapLocation { get; set; }
        public virtual DbSet<prOnlineBankWebServiceBankInternalParameter> prOnlineBankWebServiceBankInternalParameter { get; set; }
        public virtual DbSet<prOpticalSutContributionAmount> prOpticalSutContributionAmount { get; set; }
        public virtual DbSet<prPaylinkCardOwner> prPaylinkCardOwner { get; set; }
        public virtual DbSet<prPaymentNumberGroup> prPaymentNumberGroup { get; set; }
        public virtual DbSet<prPaymentPlanAdditionalInstallmentAuthority> prPaymentPlanAdditionalInstallmentAuthority { get; set; }
        public virtual DbSet<prPaymentPlanAdditionalInstallmentCampaign> prPaymentPlanAdditionalInstallmentCampaign { get; set; }
        public virtual DbSet<prPaymentProviderConvert> prPaymentProviderConvert { get; set; }
        public virtual DbSet<prPaymentProviderGLAccs> prPaymentProviderGLAccs { get; set; }
        public virtual DbSet<prPCTGLAccs> prPCTGLAccs { get; set; }
        public virtual DbSet<prPersonalDataConfirmationFormTypeForCurrAccTypes> prPersonalDataConfirmationFormTypeForCurrAccTypes { get; set; }
        public virtual DbSet<prPOSTerminalATAttribute> prPOSTerminalATAttribute { get; set; }
        public virtual DbSet<prPosTerminalDevice> prPosTerminalDevice { get; set; }
        public virtual DbSet<prPosTerminalFiscalPrinter> prPosTerminalFiscalPrinter { get; set; }
        public virtual DbSet<prPOSTerminalPrinter> prPOSTerminalPrinter { get; set; }
        public virtual DbSet<prPresentCardActivationSteps> prPresentCardActivationSteps { get; set; }
        public virtual DbSet<prPresentCardValidCardTypes> prPresentCardValidCardTypes { get; set; }
        public virtual DbSet<prProcessATAttribute> prProcessATAttribute { get; set; }
        public virtual DbSet<prProcessDefaultExpenseType> prProcessDefaultExpenseType { get; set; }
        public virtual DbSet<prProcessDiscount> prProcessDiscount { get; set; }
        public virtual DbSet<prProcessFlowRules> prProcessFlowRules { get; set; }
        public virtual DbSet<prProcessFTAttribute> prProcessFTAttribute { get; set; }
        public virtual DbSet<prProcessInfo> prProcessInfo { get; set; }
        public virtual DbSet<prProcessITAttribute> prProcessITAttribute { get; set; }
        public virtual DbSet<prProcessItemType> prProcessItemType { get; set; }
        public virtual DbSet<prProductCareWarning> prProductCareWarning { get; set; }
        public virtual DbSet<prProductColorAttribute> prProductColorAttribute { get; set; }
        public virtual DbSet<prProductColorSetContent> prProductColorSetContent { get; set; }
        public virtual DbSet<prProductDimSetContent> prProductDimSetContent { get; set; }
        public virtual DbSet<prProductFrameProperties> prProductFrameProperties { get; set; }
        public virtual DbSet<prProductImageURLs> prProductImageURLs { get; set; }
        public virtual DbSet<prProductLensProperties> prProductLensProperties { get; set; }
        public virtual DbSet<prProductLot> prProductLot { get; set; }
        public virtual DbSet<prProductLotBarcode> prProductLotBarcode { get; set; }
        public virtual DbSet<prProductPartAvailableFabric> prProductPartAvailableFabric { get; set; }
        public virtual DbSet<prProductPoint> prProductPoint { get; set; }
        public virtual DbSet<prProductStatusHistory> prProductStatusHistory { get; set; }
        public virtual DbSet<prProposalConfirmationRuleDepartments> prProposalConfirmationRuleDepartments { get; set; }
        public virtual DbSet<prProposalConfirmationRuleStep> prProposalConfirmationRuleStep { get; set; }
        public virtual DbSet<prProposalConfirmationRuleStepUser> prProposalConfirmationRuleStepUser { get; set; }
        public virtual DbSet<prPurchasingAgentAvailableRequisition> prPurchasingAgentAvailableRequisition { get; set; }
        public virtual DbSet<prRelatedCurrAcc> prRelatedCurrAcc { get; set; }
        public virtual DbSet<prRelationalPriceGroups> prRelationalPriceGroups { get; set; }
        public virtual DbSet<prRequisitionAttribute> prRequisitionAttribute { get; set; }
        public virtual DbSet<prRequisitionConfirmationRuleDepartments> prRequisitionConfirmationRuleDepartments { get; set; }
        public virtual DbSet<prRequisitionConfirmationRuleStep> prRequisitionConfirmationRuleStep { get; set; }
        public virtual DbSet<prRequisitionConfirmationRuleStepUser> prRequisitionConfirmationRuleStepUser { get; set; }
        public virtual DbSet<prRequisitionCurrAcc> prRequisitionCurrAcc { get; set; }
        public virtual DbSet<prRequisitionLimit> prRequisitionLimit { get; set; }
        public virtual DbSet<prResponsibilityAreaPostalAddress> prResponsibilityAreaPostalAddress { get; set; }
        public virtual DbSet<prRetailCustomerSegmentationFilters> prRetailCustomerSegmentationFilters { get; set; }
        public virtual DbSet<prRetailCustomerSegmentationSQL> prRetailCustomerSegmentationSQL { get; set; }
        public virtual DbSet<prReturnReasonAvailableProcess> prReturnReasonAvailableProcess { get; set; }
        public virtual DbSet<prRoleMember> prRoleMember { get; set; }
        public virtual DbSet<prRollNotes> prRollNotes { get; set; }
        public virtual DbSet<prRoundsmanResponsibilityArea> prRoundsmanResponsibilityArea { get; set; }
        public virtual DbSet<prSection> prSection { get; set; }
        public virtual DbSet<prServiceAvailableProductLevel> prServiceAvailableProductLevel { get; set; }
        public virtual DbSet<prServiceAvailableSupportType> prServiceAvailableSupportType { get; set; }
        public virtual DbSet<prStoreBankAccCodesForPayment> prStoreBankAccCodesForPayment { get; set; }
        public virtual DbSet<prStoreBankPOSAccounts> prStoreBankPOSAccounts { get; set; }
        public virtual DbSet<prStoreBankPOSGLAccs> prStoreBankPOSGLAccs { get; set; }
        public virtual DbSet<prStoreCapacity> prStoreCapacity { get; set; }
        public virtual DbSet<prStoreCashAcc> prStoreCashAcc { get; set; }
        public virtual DbSet<prStoreCustomerGLAccount> prStoreCustomerGLAccount { get; set; }
        public virtual DbSet<prStoreProperties> prStoreProperties { get; set; }
        public virtual DbSet<prStoreSpecialDay> prStoreSpecialDay { get; set; }
        public virtual DbSet<prStoreStatus> prStoreStatus { get; set; }
        public virtual DbSet<prStoreVendor> prStoreVendor { get; set; }
        public virtual DbSet<prStoreWorkingHours> prStoreWorkingHours { get; set; }
        public virtual DbSet<prSubCurrAcc> prSubCurrAcc { get; set; }
        public virtual DbSet<prSubCurrAccAttribute> prSubCurrAccAttribute { get; set; }
        public virtual DbSet<prSubCurrAccDefault> prSubCurrAccDefault { get; set; }
        public virtual DbSet<prSubCurrAccOnlineBank> prSubCurrAccOnlineBank { get; set; }
        public virtual DbSet<prSubCurrAccSalesperson> prSubCurrAccSalesperson { get; set; }
        public virtual DbSet<prTechnicalResponsibleAvailableRequisition> prTechnicalResponsibleAvailableRequisition { get; set; }
        public virtual DbSet<prTimePeriodDay> prTimePeriodDay { get; set; }
        public virtual DbSet<prTransferPlanResultViewCustomization> prTransferPlanResultViewCustomization { get; set; }
        public virtual DbSet<prTransferPlanRuleScript> prTransferPlanRuleScript { get; set; }
        public virtual DbSet<prTransferPlanTemplateParameterValue> prTransferPlanTemplateParameterValue { get; set; }
        public virtual DbSet<prUBBDeclaredItems> prUBBDeclaredItems { get; set; }
        public virtual DbSet<prUniFreeTenderTypeMapping> prUniFreeTenderTypeMapping { get; set; }
        public virtual DbSet<prUTSDeclaredItems> prUTSDeclaredItems { get; set; }
        public virtual DbSet<prV3ToMdmIDMap> prV3ToMdmIDMap { get; set; }
        public virtual DbSet<prVatGLAccs> prVatGLAccs { get; set; }
        public virtual DbSet<prVehicleDrivers> prVehicleDrivers { get; set; }
        public virtual DbSet<prWarehouseChannelTemplateContent> prWarehouseChannelTemplateContent { get; set; }
        public virtual DbSet<prWarehouseMapLocation> prWarehouseMapLocation { get; set; }
        public virtual DbSet<prWarehousePostalAddress> prWarehousePostalAddress { get; set; }
        public virtual DbSet<prWarehouseProcessFlowRules> prWarehouseProcessFlowRules { get; set; }
        public virtual DbSet<prWarehouseResponsibilityArea> prWarehouseResponsibilityArea { get; set; }
        public virtual DbSet<prWithHoldingTaxAvailableDovRates> prWithHoldingTaxAvailableDovRates { get; set; }
        public virtual DbSet<prWorkPlaceATAttribute> prWorkPlaceATAttribute { get; set; }
        public virtual DbSet<prWorkPlaceFTAttribute> prWorkPlaceFTAttribute { get; set; }
        public virtual DbSet<prWorkPlaceGLAccs> prWorkPlaceGLAccs { get; set; }
        public virtual DbSet<prWorkPlaceOptimalEmployment> prWorkPlaceOptimalEmployment { get; set; }
        public virtual DbSet<prWorkPlaceSecondment> prWorkPlaceSecondment { get; set; }
        public virtual DbSet<prWorkplaceSGKLogonInfo> prWorkplaceSGKLogonInfo { get; set; }
        public virtual DbSet<ReportPermissions> ReportPermissions { get; set; }
        public virtual DbSet<ReportQueries> ReportQueries { get; set; }
        public virtual DbSet<rpAirConnUSB> rpAirConnUSB { get; set; }
        public virtual DbSet<rpAirConnUSB_CashIn> rpAirConnUSB_CashIn { get; set; }
        public virtual DbSet<rpAirConnUSB_CashOut> rpAirConnUSB_CashOut { get; set; }
        public virtual DbSet<rpAirConnUSB_Correction> rpAirConnUSB_Correction { get; set; }
        public virtual DbSet<rpAirConnUSB_GetControlTapeHeader> rpAirConnUSB_GetControlTapeHeader { get; set; }
        public virtual DbSet<rpAirConnUSB_GetControlTapeLine> rpAirConnUSB_GetControlTapeLine { get; set; }
        public virtual DbSet<rpAirConnUSB_GetInfo> rpAirConnUSB_GetInfo { get; set; }
        public virtual DbSet<rpAirConnUSB_Invoice> rpAirConnUSB_Invoice { get; set; }
        public virtual DbSet<rpAirConnUSB_PeriodicZReport> rpAirConnUSB_PeriodicZReport { get; set; }
        public virtual DbSet<rpAirConnUSB_XReport> rpAirConnUSB_XReport { get; set; }
        public virtual DbSet<rpAirConnUSB_ZReport> rpAirConnUSB_ZReport { get; set; }
        public virtual DbSet<rpBrowsedProduct> rpBrowsedProduct { get; set; }
        public virtual DbSet<rpCompareTransactionHeader> rpCompareTransactionHeader { get; set; }
        public virtual DbSet<rpCompareTransactionLine> rpCompareTransactionLine { get; set; }
        public virtual DbSet<rpCompareTransactionSourceFiles> rpCompareTransactionSourceFiles { get; set; }
        public virtual DbSet<rpCompareTransactionTargetFiles> rpCompareTransactionTargetFiles { get; set; }
        public virtual DbSet<rpCustomerBalanceDueDay_adminadmin> rpCustomerBalanceDueDay_adminadmin { get; set; }
        public virtual DbSet<rpEArchiveIntegratorControl> rpEArchiveIntegratorControl { get; set; }
        public virtual DbSet<rpEuromessageCampaignConversations> rpEuromessageCampaignConversations { get; set; }
        public virtual DbSet<rpEuromessageCampaignDeliveryStatusDetail> rpEuromessageCampaignDeliveryStatusDetail { get; set; }
        public virtual DbSet<rpEuromessageCampaigns> rpEuromessageCampaigns { get; set; }
        public virtual DbSet<rpEuromessageUnsubscriberDetails> rpEuromessageUnsubscriberDetails { get; set; }
        public virtual DbSet<rpExportData> rpExportData { get; set; }
        public virtual DbSet<rpExternalItemFileHeader> rpExternalItemFileHeader { get; set; }
        public virtual DbSet<rpExternalItemFileLine> rpExternalItemFileLine { get; set; }
        public virtual DbSet<rpGrandLedgerDetail> rpGrandLedgerDetail { get; set; }
        public virtual DbSet<rpGrandLedgerTotals> rpGrandLedgerTotals { get; set; }
        public virtual DbSet<rpItemLastDimensions> rpItemLastDimensions { get; set; }
        public virtual DbSet<rpJournalLedgerDetail> rpJournalLedgerDetail { get; set; }
        public virtual DbSet<rpMobildevIVTContactReconciliation> rpMobildevIVTContactReconciliation { get; set; }
        public virtual DbSet<rpMobildevIVTEmailReconciliation> rpMobildevIVTEmailReconciliation { get; set; }
        public virtual DbSet<rpMobilDevIVTLiteEmailReconciliation> rpMobilDevIVTLiteEmailReconciliation { get; set; }
        public virtual DbSet<rpMobilDevIVTLiteMsisdnReconciliation> rpMobilDevIVTLiteMsisdnReconciliation { get; set; }
        public virtual DbSet<rpMobildevIVTReconciliation> rpMobildevIVTReconciliation { get; set; }
        public virtual DbSet<rpNegativeInventoryStockID> rpNegativeInventoryStockID { get; set; }
        public virtual DbSet<rpOnlineBankFuturePosIncomeByOperationAndDueDate> rpOnlineBankFuturePosIncomeByOperationAndDueDate { get; set; }
        public virtual DbSet<rpOnlineBankFuturePosIncomeByReturnDate> rpOnlineBankFuturePosIncomeByReturnDate { get; set; }
        public virtual DbSet<rpOrderDeliveryAssignmentCollectedItems> rpOrderDeliveryAssignmentCollectedItems { get; set; }
        public virtual DbSet<rpProductDatamatrixLabel> rpProductDatamatrixLabel { get; set; }
        public virtual DbSet<rpProductLabel> rpProductLabel { get; set; }
        public virtual DbSet<rpProductLabelRollNumber> rpProductLabelRollNumber { get; set; }
        public virtual DbSet<rpProposalLineConfirmationHistory> rpProposalLineConfirmationHistory { get; set; }
        public virtual DbSet<rpPurchaseRequisitionConfirmationHistory> rpPurchaseRequisitionConfirmationHistory { get; set; }
        public virtual DbSet<rpPurchaseRequisitionProposalConfirmationHistory> rpPurchaseRequisitionProposalConfirmationHistory { get; set; }
        public virtual DbSet<rpRegisteredEmailForPayrollSendEvidence> rpRegisteredEmailForPayrollSendEvidence { get; set; }
        public virtual DbSet<rpRegisteredEmailForPayrollSendStatus> rpRegisteredEmailForPayrollSendStatus { get; set; }
        public virtual DbSet<rpSelectedProduct> rpSelectedProduct { get; set; }
        public virtual DbSet<rpSelectedProductInvoice> rpSelectedProductInvoice { get; set; }
        public virtual DbSet<rpSelectedProductOrder> rpSelectedProductOrder { get; set; }
        public virtual DbSet<rpSettings> rpSettings { get; set; }
        public virtual DbSet<rpSubjectToEInvoice> rpSubjectToEInvoice { get; set; }
        public virtual DbSet<rpTransferApproved> rpTransferApproved { get; set; }
        public virtual DbSet<rpTuratelACLBlackListReconciliation> rpTuratelACLBlackListReconciliation { get; set; }
        public virtual DbSet<rpTuratelACLWhiteListReconciliation> rpTuratelACLWhiteListReconciliation { get; set; }
        public virtual DbSet<rpTuratelADMAuthorizationReconciliation> rpTuratelADMAuthorizationReconciliation { get; set; }
        public virtual DbSet<rpTuratelADMCommunicationReconciliation> rpTuratelADMCommunicationReconciliation { get; set; }
        public virtual DbSet<srCashSerialNumber> srCashSerialNumber { get; set; }
        public virtual DbSet<srChequesSerialNumber> srChequesSerialNumber { get; set; }
        public virtual DbSet<srCodeNumberCheque> srCodeNumberCheque { get; set; }
        public virtual DbSet<srCodeNumberCurrAcc> srCodeNumberCurrAcc { get; set; }
        public virtual DbSet<srCodeNumberGiftCard> srCodeNumberGiftCard { get; set; }
        public virtual DbSet<srCodeNumberItem> srCodeNumberItem { get; set; }
        public virtual DbSet<srCodeNumberLetterOfGuarantee> srCodeNumberLetterOfGuarantee { get; set; }
        public virtual DbSet<srCodeNumberWarehouse> srCodeNumberWarehouse { get; set; }
        public virtual DbSet<srCurrAccListNumber> srCurrAccListNumber { get; set; }
        public virtual DbSet<srCustomerConversationFormNumber> srCustomerConversationFormNumber { get; set; }
        public virtual DbSet<srDistanceSaleBankPaymentNumber> srDistanceSaleBankPaymentNumber { get; set; }
        public virtual DbSet<srEArchiveSerialNumber> srEArchiveSerialNumber { get; set; }
        public virtual DbSet<srEInvoiceSerialNumber> srEInvoiceSerialNumber { get; set; }
        public virtual DbSet<srEShipmentSerialNumber> srEShipmentSerialNumber { get; set; }
        public virtual DbSet<srExpenseInvoiceDocumentNumber> srExpenseInvoiceDocumentNumber { get; set; }
        public virtual DbSet<srFormNumberCommunication> srFormNumberCommunication { get; set; }
        public virtual DbSet<srOnlineInstallmentBankPayment> srOnlineInstallmentBankPayment { get; set; }
        public virtual DbSet<srOpticalProtocolNumber> srOpticalProtocolNumber { get; set; }
        public virtual DbSet<srPayrollDocumentNumber> srPayrollDocumentNumber { get; set; }
        public virtual DbSet<srRefNumberAdjustCost> srRefNumberAdjustCost { get; set; }
        public virtual DbSet<srRefNumberAgentReservation> srRefNumberAgentReservation { get; set; }
        public virtual DbSet<srRefNumberAllocation> srRefNumberAllocation { get; set; }
        public virtual DbSet<srRefNumberBadDebt> srRefNumberBadDebt { get; set; }
        public virtual DbSet<srRefNumberBankCredit> srRefNumberBankCredit { get; set; }
        public virtual DbSet<srRefNumberBankPaymentInstruction> srRefNumberBankPaymentInstruction { get; set; }
        public virtual DbSet<srRefNumberBankPaymentList> srRefNumberBankPaymentList { get; set; }
        public virtual DbSet<srRefNumberBankTrans> srRefNumberBankTrans { get; set; }
        public virtual DbSet<srRefNumberCashTrans> srRefNumberCashTrans { get; set; }
        public virtual DbSet<srRefNumberChequeTrans> srRefNumberChequeTrans { get; set; }
        public virtual DbSet<srRefNumberConfirmationForm> srRefNumberConfirmationForm { get; set; }
        public virtual DbSet<srRefNumberContract> srRefNumberContract { get; set; }
        public virtual DbSet<srRefNumberCreditCardPayment> srRefNumberCreditCardPayment { get; set; }
        public virtual DbSet<srRefNumberDebit> srRefNumberDebit { get; set; }
        public virtual DbSet<srRefNumberDepartmentReceipt> srRefNumberDepartmentReceipt { get; set; }
        public virtual DbSet<srRefNumberDeviceDocument> srRefNumberDeviceDocument { get; set; }
        public virtual DbSet<srRefNumberDiscountVoucher> srRefNumberDiscountVoucher { get; set; }
        public virtual DbSet<srRefNumberExpenseAccrual> srRefNumberExpenseAccrual { get; set; }
        public virtual DbSet<srRefNumberExpenseSlip> srRefNumberExpenseSlip { get; set; }
        public virtual DbSet<srRefNumberGiftCardPayment> srRefNumberGiftCardPayment { get; set; }
        public virtual DbSet<srRefNumberIncentive> srRefNumberIncentive { get; set; }
        public virtual DbSet<srRefNumberInnerOrder> srRefNumberInnerOrder { get; set; }
        public virtual DbSet<srRefNumberInnerProcess> srRefNumberInnerProcess { get; set; }
        public virtual DbSet<srRefNumberItemTest> srRefNumberItemTest { get; set; }
        public virtual DbSet<srRefNumberJournal> srRefNumberJournal { get; set; }
        public virtual DbSet<srRefNumberOtherPayment> srRefNumberOtherPayment { get; set; }
        public virtual DbSet<srRefNumberPayment> srRefNumberPayment { get; set; }
        public virtual DbSet<srRefNumberPriceList> srRefNumberPriceList { get; set; }
        public virtual DbSet<srRefNumberProcessFlow> srRefNumberProcessFlow { get; set; }
        public virtual DbSet<srRefNumberPurchaseRequisition> srRefNumberPurchaseRequisition { get; set; }
        public virtual DbSet<srRefNumberReportedSale> srRefNumberReportedSale { get; set; }
        public virtual DbSet<srRefNumberSalesPlan> srRefNumberSalesPlan { get; set; }
        public virtual DbSet<srRefNumberSupportRequest> srRefNumberSupportRequest { get; set; }
        public virtual DbSet<srRefNumberTaxIncurred> srRefNumberTaxIncurred { get; set; }
        public virtual DbSet<srRefNumberTransferPlan> srRefNumberTransferPlan { get; set; }
        public virtual DbSet<srRefNumberVehicleLoading> srRefNumberVehicleLoading { get; set; }
        public virtual DbSet<srRefNumberVehicleUnLoading> srRefNumberVehicleUnLoading { get; set; }
        public virtual DbSet<srRefNumberVendorPriceList> srRefNumberVendorPriceList { get; set; }
        public virtual DbSet<srRefNumberVirement> srRefNumberVirement { get; set; }
        public virtual DbSet<srSerialNumber> srSerialNumber { get; set; }
        public virtual DbSet<stDispOrder> stDispOrder { get; set; }
        public virtual DbSet<stInnerOrder> stInnerOrder { get; set; }
        public virtual DbSet<stItemRollNumber> stItemRollNumber { get; set; }
        public virtual DbSet<stItemRollNumberPicking> stItemRollNumberPicking { get; set; }
        public virtual DbSet<stItemSerialNumber> stItemSerialNumber { get; set; }
        public virtual DbSet<stOrder> stOrder { get; set; }
        public virtual DbSet<stOrderAsn> stOrderAsn { get; set; }
        public virtual DbSet<stPicking> stPicking { get; set; }
        public virtual DbSet<stProductAvailableInventory> stProductAvailableInventory { get; set; }
        public virtual DbSet<stProductFirstIncomingDate> stProductFirstIncomingDate { get; set; }
        public virtual DbSet<stProductRemainingInOrder> stProductRemainingInOrder { get; set; }
        public virtual DbSet<stProductRemainingOutOrder> stProductRemainingOutOrder { get; set; }
        public virtual DbSet<stProductRemainingReserve> stProductRemainingReserve { get; set; }
        public virtual DbSet<stProductSalesLastPeriod> stProductSalesLastPeriod { get; set; }
        public virtual DbSet<stProductSalesWeekly> stProductSalesWeekly { get; set; }
        public virtual DbSet<stProductTransferNotApproved> stProductTransferNotApproved { get; set; }
        public virtual DbSet<stPurchaseOrder> stPurchaseOrder { get; set; }
        public virtual DbSet<stReportedSale> stReportedSale { get; set; }
        public virtual DbSet<stReserve> stReserve { get; set; }
        public virtual DbSet<stShipment> stShipment { get; set; }
        public virtual DbSet<stToleranceInnerOrder> stToleranceInnerOrder { get; set; }
        public virtual DbSet<stToleranceOrder> stToleranceOrder { get; set; }
        public virtual DbSet<tpAgentContractDeservedDebit> tpAgentContractDeservedDebit { get; set; }
        public virtual DbSet<tpAgentContractVehicleDebit> tpAgentContractVehicleDebit { get; set; }
        public virtual DbSet<tpAgentContractVisitFrequencyDebit> tpAgentContractVisitFrequencyDebit { get; set; }
        public virtual DbSet<tpAgentPerformanceBonusDebit> tpAgentPerformanceBonusDebit { get; set; }
        public virtual DbSet<tpAgentPerformanceDebit> tpAgentPerformanceDebit { get; set; }
        public virtual DbSet<tpAgentReservationActualPax> tpAgentReservationActualPax { get; set; }
        public virtual DbSet<tpAgentReservationReasonForNotShopping> tpAgentReservationReasonForNotShopping { get; set; }
        public virtual DbSet<tpAllocationATAttribute> tpAllocationATAttribute { get; set; }
        public virtual DbSet<tpAllocationITAttribute> tpAllocationITAttribute { get; set; }
        public virtual DbSet<tpBadDebtLawyerHistory> tpBadDebtLawyerHistory { get; set; }
        public virtual DbSet<tpBankATAttribute> tpBankATAttribute { get; set; }
        public virtual DbSet<tpBankCreditATAttribute> tpBankCreditATAttribute { get; set; }
        public virtual DbSet<tpBankCreditFTAttribute> tpBankCreditFTAttribute { get; set; }
        public virtual DbSet<tpBankCreditRelatedCheques> tpBankCreditRelatedCheques { get; set; }
        public virtual DbSet<tpBankCreditRelatedExportFiles> tpBankCreditRelatedExportFiles { get; set; }
        public virtual DbSet<tpBankCreditRotativeInterestRates> tpBankCreditRotativeInterestRates { get; set; }
        public virtual DbSet<tpBankFTAttribute> tpBankFTAttribute { get; set; }
        public virtual DbSet<tpBankHeaderOnlineBankIntegration> tpBankHeaderOnlineBankIntegration { get; set; }
        public virtual DbSet<tpBankMT940> tpBankMT940 { get; set; }
        public virtual DbSet<tpBankPaymentInstructionATAttribute> tpBankPaymentInstructionATAttribute { get; set; }
        public virtual DbSet<tpBankPaymentInstructionFTAttribute> tpBankPaymentInstructionFTAttribute { get; set; }
        public virtual DbSet<tpBankPaymentListATAttribute> tpBankPaymentListATAttribute { get; set; }
        public virtual DbSet<tpBankPaymentListFTAttribute> tpBankPaymentListFTAttribute { get; set; }
        public virtual DbSet<tpBulutTahsilatCreditCardPayment> tpBulutTahsilatCreditCardPayment { get; set; }
        public virtual DbSet<tpCanceledEArchiveInvoice> tpCanceledEArchiveInvoice { get; set; }
        public virtual DbSet<tpCanceledUTSDeclaration> tpCanceledUTSDeclaration { get; set; }
        public virtual DbSet<tpCashATAttribute> tpCashATAttribute { get; set; }
        public virtual DbSet<tpCashFTAttribute> tpCashFTAttribute { get; set; }
        public virtual DbSet<tpCashRegisterInfo> tpCashRegisterInfo { get; set; }
        public virtual DbSet<tpChequeATAttribute> tpChequeATAttribute { get; set; }
        public virtual DbSet<tpChequeFTAttribute> tpChequeFTAttribute { get; set; }
        public virtual DbSet<tpCompanyCreditCardPaymentDueDate> tpCompanyCreditCardPaymentDueDate { get; set; }
        public virtual DbSet<tpContractATAttribute> tpContractATAttribute { get; set; }
        public virtual DbSet<tpContractITAttribute> tpContractITAttribute { get; set; }
        public virtual DbSet<tpCreditCardBulutTahsilatVPOSReturn> tpCreditCardBulutTahsilatVPOSReturn { get; set; }
        public virtual DbSet<tpCreditCardPaymentATAttribute> tpCreditCardPaymentATAttribute { get; set; }
        public virtual DbSet<tpCreditCardPaymentDueDate> tpCreditCardPaymentDueDate { get; set; }
        public virtual DbSet<tpCreditCardPaymentFTAttribute> tpCreditCardPaymentFTAttribute { get; set; }
        public virtual DbSet<tpCurrAccBookATAttribute> tpCurrAccBookATAttribute { get; set; }
        public virtual DbSet<tpCurrAccBookFTAttribute> tpCurrAccBookFTAttribute { get; set; }
        public virtual DbSet<tpCustomerOnlinePaymentCorrelations> tpCustomerOnlinePaymentCorrelations { get; set; }
        public virtual DbSet<tpDebitATAttribute> tpDebitATAttribute { get; set; }
        public virtual DbSet<tpDebitFTAttribute> tpDebitFTAttribute { get; set; }
        public virtual DbSet<tpDeletedFiscalInvoice> tpDeletedFiscalInvoice { get; set; }
        public virtual DbSet<tpDispOrderHeaderExtension> tpDispOrderHeaderExtension { get; set; }
        public virtual DbSet<tpDistanceSaleBankPayment> tpDistanceSaleBankPayment { get; set; }
        public virtual DbSet<tpEArchieveIntegratorInfo> tpEArchieveIntegratorInfo { get; set; }
        public virtual DbSet<tpEArchiveInvoiceConfirmation> tpEArchiveInvoiceConfirmation { get; set; }
        public virtual DbSet<tpExpenseAccrualATAttribute> tpExpenseAccrualATAttribute { get; set; }
        public virtual DbSet<tpExpenseAccrualFTAttribute> tpExpenseAccrualFTAttribute { get; set; }
        public virtual DbSet<tpExpenseInvoiceConfirmation> tpExpenseInvoiceConfirmation { get; set; }
        public virtual DbSet<tpExpenseSlipATAttribute> tpExpenseSlipATAttribute { get; set; }
        public virtual DbSet<tpExpenseSlipFTAttribute> tpExpenseSlipFTAttribute { get; set; }
        public virtual DbSet<tpExpenseSlipTaxLine> tpExpenseSlipTaxLine { get; set; }
        public virtual DbSet<tpExportSaleRealisition> tpExportSaleRealisition { get; set; }
        public virtual DbSet<tpGiftCardPaymentATAttribute> tpGiftCardPaymentATAttribute { get; set; }
        public virtual DbSet<tpGiftCardPaymentFTAttribute> tpGiftCardPaymentFTAttribute { get; set; }
        public virtual DbSet<tpInnerCustomsTransferImportInvoiceLine> tpInnerCustomsTransferImportInvoiceLine { get; set; }
        public virtual DbSet<tpInnerHeaderExtension> tpInnerHeaderExtension { get; set; }
        public virtual DbSet<tpInnerITAttribute> tpInnerITAttribute { get; set; }
        public virtual DbSet<tpInnerLineDocument> tpInnerLineDocument { get; set; }
        public virtual DbSet<tpInnerLinePurchaseInvoiceLine> tpInnerLinePurchaseInvoiceLine { get; set; }
        public virtual DbSet<tpInnerOrderITAttribute> tpInnerOrderITAttribute { get; set; }
        public virtual DbSet<tpInnerTransportModeDetail> tpInnerTransportModeDetail { get; set; }
        public virtual DbSet<tpInnerVehicleDrivers> tpInnerVehicleDrivers { get; set; }
        public virtual DbSet<tpInStockDeclarationInfo> tpInStockDeclarationInfo { get; set; }
        public virtual DbSet<tpInvoiceadditionalDeliveryProcessesDistance> tpInvoiceadditionalDeliveryProcessesDistance { get; set; }
        public virtual DbSet<tpInvoiceATAttribute> tpInvoiceATAttribute { get; set; }
        public virtual DbSet<tpInvoiceCancelDBSBankIntegration> tpInvoiceCancelDBSBankIntegration { get; set; }
        public virtual DbSet<tpInvoiceDiscountOffer> tpInvoiceDiscountOffer { get; set; }
        public virtual DbSet<tpInvoiceDiscountOfferContributor> tpInvoiceDiscountOfferContributor { get; set; }
        public virtual DbSet<tpInvoiceEArchieveXML> tpInvoiceEArchieveXML { get; set; }
        public virtual DbSet<tpInvoiceEInvoiceXML> tpInvoiceEInvoiceXML { get; set; }
        public virtual DbSet<tpInvoiceExchangeDifferencePaidCheque> tpInvoiceExchangeDifferencePaidCheque { get; set; }
        public virtual DbSet<tpInvoiceFTAttribute> tpInvoiceFTAttribute { get; set; }
        public virtual DbSet<tpInvoiceHeaderExtension> tpInvoiceHeaderExtension { get; set; }
        public virtual DbSet<tpInvoiceHeaderSalesPerson> tpInvoiceHeaderSalesPerson { get; set; }
        public virtual DbSet<tpInvoiceITAttribute> tpInvoiceITAttribute { get; set; }
        public virtual DbSet<tpInvoiceLineAgentPerformance> tpInvoiceLineAgentPerformance { get; set; }
        public virtual DbSet<tpInvoiceLineExpenseAccrual> tpInvoiceLineExpenseAccrual { get; set; }
        public virtual DbSet<tpInvoiceLineExtension> tpInvoiceLineExtension { get; set; }
        public virtual DbSet<tpInvoiceLineOpticalProductInfo> tpInvoiceLineOpticalProductInfo { get; set; }
        public virtual DbSet<tpInvoiceLinePickingDetails> tpInvoiceLinePickingDetails { get; set; }
        public virtual DbSet<tpInvoiceOpticalContribution> tpInvoiceOpticalContribution { get; set; }
        public virtual DbSet<tpInvoicePassportAndBoardingInfo> tpInvoicePassportAndBoardingInfo { get; set; }
        public virtual DbSet<tpInvoicePostalAddress> tpInvoicePostalAddress { get; set; }
        public virtual DbSet<tpInvoiceSaleReturnHistory> tpInvoiceSaleReturnHistory { get; set; }
        public virtual DbSet<tpInvoiceSGKExtensions> tpInvoiceSGKExtensions { get; set; }
        public virtual DbSet<tpInvoiceSourceInfo> tpInvoiceSourceInfo { get; set; }
        public virtual DbSet<tpInvoiceTransportModeDetail> tpInvoiceTransportModeDetail { get; set; }
        public virtual DbSet<tpInvoiceUBLExtensions> tpInvoiceUBLExtensions { get; set; }
        public virtual DbSet<tpInvoiceUnAcceptableExpenseLine> tpInvoiceUnAcceptableExpenseLine { get; set; }
        public virtual DbSet<tpJournalATAttribute> tpJournalATAttribute { get; set; }
        public virtual DbSet<tpJournalFTAttribute> tpJournalFTAttribute { get; set; }
        public virtual DbSet<tpJournalIntegrationStatus> tpJournalIntegrationStatus { get; set; }
        public virtual DbSet<tpJournalLineExtension> tpJournalLineExtension { get; set; }
        public virtual DbSet<tpJournalTaxIncurred> tpJournalTaxIncurred { get; set; }
        public virtual DbSet<tpJournalZNum> tpJournalZNum { get; set; }
        public virtual DbSet<tpJournalZNumDetail> tpJournalZNumDetail { get; set; }
        public virtual DbSet<tpOnlineBankPosPaymentList> tpOnlineBankPosPaymentList { get; set; }
        public virtual DbSet<tpOnlineInstallmentBankPayment> tpOnlineInstallmentBankPayment { get; set; }
        public virtual DbSet<tpOrderATAttribute> tpOrderATAttribute { get; set; }
        public virtual DbSet<tpOrderCancelDetail> tpOrderCancelDetail { get; set; }
        public virtual DbSet<tpOrderCancelDetailHeader> tpOrderCancelDetailHeader { get; set; }
        public virtual DbSet<tpOrderCanceled> tpOrderCanceled { get; set; }
        public virtual DbSet<tpOrderCancelReturnTransactions> tpOrderCancelReturnTransactions { get; set; }
        public virtual DbSet<tpOrderCashRegisterInfo> tpOrderCashRegisterInfo { get; set; }
        public virtual DbSet<tpOrderContractContext> tpOrderContractContext { get; set; }
        public virtual DbSet<tpOrderDeliveryDetail> tpOrderDeliveryDetail { get; set; }
        public virtual DbSet<tpOrderDiscountOffer> tpOrderDiscountOffer { get; set; }
        public virtual DbSet<tpOrderDiscountOfferContributor> tpOrderDiscountOfferContributor { get; set; }
        public virtual DbSet<tpOrderDistanceSalesCorrelations> tpOrderDistanceSalesCorrelations { get; set; }
        public virtual DbSet<tpOrderDistanceSalesSMS> tpOrderDistanceSalesSMS { get; set; }
        public virtual DbSet<tpOrderFTAttribute> tpOrderFTAttribute { get; set; }
        public virtual DbSet<tpOrderHeaderExtension> tpOrderHeaderExtension { get; set; }
        public virtual DbSet<tpOrderITAttribute> tpOrderITAttribute { get; set; }
        public virtual DbSet<tpOrderLineExtension> tpOrderLineExtension { get; set; }
        public virtual DbSet<tpOrderLineSerialNumber> tpOrderLineSerialNumber { get; set; }
        public virtual DbSet<tpOrderOpticalProductCustomProcess> tpOrderOpticalProductCustomProcess { get; set; }
        public virtual DbSet<tpOrderOTAttribute> tpOrderOTAttribute { get; set; }
        public virtual DbSet<tpOrderPostalAddress> tpOrderPostalAddress { get; set; }
        public virtual DbSet<tpOrdersViaInternetInfo> tpOrdersViaInternetInfo { get; set; }
        public virtual DbSet<tpOtherPaymentATAttribute> tpOtherPaymentATAttribute { get; set; }
        public virtual DbSet<tpOtherPaymentFTAttribute> tpOtherPaymentFTAttribute { get; set; }
        public virtual DbSet<tpOutStockDeclarationInfo> tpOutStockDeclarationInfo { get; set; }
        public virtual DbSet<tpPaymentATAttribute> tpPaymentATAttribute { get; set; }
        public virtual DbSet<tpPaymentBadDebtLawyer> tpPaymentBadDebtLawyer { get; set; }
        public virtual DbSet<tpPaymentBulutTahsilatMapping> tpPaymentBulutTahsilatMapping { get; set; }
        public virtual DbSet<tpPaymentFTAttribute> tpPaymentFTAttribute { get; set; }
        public virtual DbSet<tpPaymentPaynetMapping> tpPaymentPaynetMapping { get; set; }
        public virtual DbSet<tpPaymentRegisterInfo> tpPaymentRegisterInfo { get; set; }
        public virtual DbSet<tpPaymentReturn> tpPaymentReturn { get; set; }
        public virtual DbSet<tpPaynetCreditCardPayment> tpPaynetCreditCardPayment { get; set; }
        public virtual DbSet<tpPickingFromSectionTransfer> tpPickingFromSectionTransfer { get; set; }
        public virtual DbSet<tpProposalATAttribute> tpProposalATAttribute { get; set; }
        public virtual DbSet<tpProposalDiscountOffer> tpProposalDiscountOffer { get; set; }
        public virtual DbSet<tpProposalDiscountOfferContributor> tpProposalDiscountOfferContributor { get; set; }
        public virtual DbSet<tpProposalFTAttribute> tpProposalFTAttribute { get; set; }
        public virtual DbSet<tpProposalITAttribute> tpProposalITAttribute { get; set; }
        public virtual DbSet<tpProposalLineConfirmation> tpProposalLineConfirmation { get; set; }
        public virtual DbSet<tpProposalLineConfirmationStatus> tpProposalLineConfirmationStatus { get; set; }
        public virtual DbSet<tpProposalLineRevision> tpProposalLineRevision { get; set; }
        public virtual DbSet<tpPurchaseRequisitionATAttribute> tpPurchaseRequisitionATAttribute { get; set; }
        public virtual DbSet<tpPurchaseRequisitionClosedByInventory> tpPurchaseRequisitionClosedByInventory { get; set; }
        public virtual DbSet<tpPurchaseRequisitionConfirmation> tpPurchaseRequisitionConfirmation { get; set; }
        public virtual DbSet<tpPurchaseRequisitionItemAttributeInfo> tpPurchaseRequisitionItemAttributeInfo { get; set; }
        public virtual DbSet<tpPurchaseRequisitionItemInfo> tpPurchaseRequisitionItemInfo { get; set; }
        public virtual DbSet<tpPurchaseRequisitionProposal> tpPurchaseRequisitionProposal { get; set; }
        public virtual DbSet<tpPurchaseRequisitionProposalATAttribute> tpPurchaseRequisitionProposalATAttribute { get; set; }
        public virtual DbSet<tpPurchaseRequisitionProposalConfirmation> tpPurchaseRequisitionProposalConfirmation { get; set; }
        public virtual DbSet<tpPurchaseRequisitionProposalRevision> tpPurchaseRequisitionProposalRevision { get; set; }
        public virtual DbSet<tpPurchaseRequisitionReceiveInfo> tpPurchaseRequisitionReceiveInfo { get; set; }
        public virtual DbSet<tpPurchaseRequisitionRevision> tpPurchaseRequisitionRevision { get; set; }
        public virtual DbSet<tpPurchaseRequisitionTechnicalNotes> tpPurchaseRequisitionTechnicalNotes { get; set; }
        public virtual DbSet<tpPurchaseRequisitionTrace> tpPurchaseRequisitionTrace { get; set; }
        public virtual DbSet<tpSalesViaInternetInfo> tpSalesViaInternetInfo { get; set; }
        public virtual DbSet<tpShipmentHeaderExtension> tpShipmentHeaderExtension { get; set; }
        public virtual DbSet<tpShipmentITAttribute> tpShipmentITAttribute { get; set; }
        public virtual DbSet<tpShipmentLinePickingDetails> tpShipmentLinePickingDetails { get; set; }
        public virtual DbSet<tpShipmentReturn> tpShipmentReturn { get; set; }
        public virtual DbSet<tpShipmentTransportModeDetail> tpShipmentTransportModeDetail { get; set; }
        public virtual DbSet<tpShipmentUBLExtensions> tpShipmentUBLExtensions { get; set; }
        public virtual DbSet<tpShipmentVehicleDrivers> tpShipmentVehicleDrivers { get; set; }
        public virtual DbSet<tpSMSPoolLineExtension> tpSMSPoolLineExtension { get; set; }
        public virtual DbSet<tpStockCross> tpStockCross { get; set; }
        public virtual DbSet<tpStockITAttribute> tpStockITAttribute { get; set; }
        public virtual DbSet<tpSupportRequestConfirmation> tpSupportRequestConfirmation { get; set; }
        public virtual DbSet<tpSupportRequestDecisionLetter> tpSupportRequestDecisionLetter { get; set; }
        public virtual DbSet<tpSupportRequestInformation> tpSupportRequestInformation { get; set; }
        public virtual DbSet<tpSupportResolve> tpSupportResolve { get; set; }
        public virtual DbSet<tpSupportResolveMaterial> tpSupportResolveMaterial { get; set; }
        public virtual DbSet<tpSupportStatusHistory> tpSupportStatusHistory { get; set; }
        public virtual DbSet<tpTransferPlanATAttribute> tpTransferPlanATAttribute { get; set; }
        public virtual DbSet<tpTransferPlanITAttribute> tpTransferPlanITAttribute { get; set; }
        public virtual DbSet<tpTsmCashRegisterInfo> tpTsmCashRegisterInfo { get; set; }
        public virtual DbSet<tpVehicleLoadingDriver> tpVehicleLoadingDriver { get; set; }
        public virtual DbSet<tpVehicleLoadingLineDeliveryStatus> tpVehicleLoadingLineDeliveryStatus { get; set; }
        public virtual DbSet<tpVehicleLoadingRoundsman> tpVehicleLoadingRoundsman { get; set; }
        public virtual DbSet<tpVirementATAttribute> tpVirementATAttribute { get; set; }
        public virtual DbSet<tpVirementFTAttribute> tpVirementFTAttribute { get; set; }
        public virtual DbSet<trAdjustCostBankLine> trAdjustCostBankLine { get; set; }
        public virtual DbSet<trAdjustCostExpenseInvoiceLine> trAdjustCostExpenseInvoiceLine { get; set; }
        public virtual DbSet<trAdjustCostExpenseSlipLine> trAdjustCostExpenseSlipLine { get; set; }
        public virtual DbSet<trAdjustCostHeader> trAdjustCostHeader { get; set; }
        public virtual DbSet<trAdjustCostInner> trAdjustCostInner { get; set; }
        public virtual DbSet<trAdjustCostInnerLine> trAdjustCostInnerLine { get; set; }
        public virtual DbSet<trAdjustCostInventory> trAdjustCostInventory { get; set; }
        public virtual DbSet<trAdjustCostInventoryLine> trAdjustCostInventoryLine { get; set; }
        public virtual DbSet<trAdjustCostInvoice> trAdjustCostInvoice { get; set; }
        public virtual DbSet<trAdjustCostInvoiceLine> trAdjustCostInvoiceLine { get; set; }
        public virtual DbSet<trAdjustCostOrder> trAdjustCostOrder { get; set; }
        public virtual DbSet<trAdjustCostOrderLine> trAdjustCostOrderLine { get; set; }
        public virtual DbSet<trAgentContractDeservedLine> trAgentContractDeservedLine { get; set; }
        public virtual DbSet<trAgentContractHeader> trAgentContractHeader { get; set; }
        public virtual DbSet<trAgentContractPeriodicalLine> trAgentContractPeriodicalLine { get; set; }
        public virtual DbSet<trAgentContractSpecialLine> trAgentContractSpecialLine { get; set; }
        public virtual DbSet<trAgentContractStandartLine> trAgentContractStandartLine { get; set; }
        public virtual DbSet<trAgentContractVehicle> trAgentContractVehicle { get; set; }
        public virtual DbSet<trAgentContractVisitFrequencyLine> trAgentContractVisitFrequencyLine { get; set; }
        public virtual DbSet<trAgentPerformanceBonusHeader> trAgentPerformanceBonusHeader { get; set; }
        public virtual DbSet<trAgentPerformanceBonusLine> trAgentPerformanceBonusLine { get; set; }
        public virtual DbSet<trAgentReservationHeader> trAgentReservationHeader { get; set; }
        public virtual DbSet<trAgentReservationSalesPerson> trAgentReservationSalesPerson { get; set; }
        public virtual DbSet<trAgentReservationVehicleDetail> trAgentReservationVehicleDetail { get; set; }
        public virtual DbSet<trAllocation> trAllocation { get; set; }
        public virtual DbSet<trAllocationChannel> trAllocationChannel { get; set; }
        public virtual DbSet<trAllocationParameterValue> trAllocationParameterValue { get; set; }
        public virtual DbSet<trAllocationProduct> trAllocationProduct { get; set; }
        public virtual DbSet<trAllocationProductQty> trAllocationProductQty { get; set; }
        public virtual DbSet<trBadDebtLetter> trBadDebtLetter { get; set; }
        public virtual DbSet<trBadDebtLetterPrint> trBadDebtLetterPrint { get; set; }
        public virtual DbSet<trBadDebtTransAddExpenseDebits> trBadDebtTransAddExpenseDebits { get; set; }
        public virtual DbSet<trBadDebtTransHeader> trBadDebtTransHeader { get; set; }
        public virtual DbSet<trBadDebtTransLine> trBadDebtTransLine { get; set; }
        public virtual DbSet<trBadDebtTransLineAddExpense> trBadDebtTransLineAddExpense { get; set; }
        public virtual DbSet<trBadDebtTransLineInstalment> trBadDebtTransLineInstalment { get; set; }
        public virtual DbSet<trBadDebtTransLineResult> trBadDebtTransLineResult { get; set; }
        public virtual DbSet<trBankCreditHeader> trBankCreditHeader { get; set; }
        public virtual DbSet<trBankCreditLine> trBankCreditLine { get; set; }
        public virtual DbSet<trBankCreditLineCurrency> trBankCreditLineCurrency { get; set; }
        public virtual DbSet<trBankCreditPaymentPlan> trBankCreditPaymentPlan { get; set; }
        public virtual DbSet<trBankHeader> trBankHeader { get; set; }
        public virtual DbSet<trBankLine> trBankLine { get; set; }
        public virtual DbSet<trBankLineAdditionalCharge> trBankLineAdditionalCharge { get; set; }
        public virtual DbSet<trBankLineCostCenterRates> trBankLineCostCenterRates { get; set; }
        public virtual DbSet<trBankLineCurrency> trBankLineCurrency { get; set; }
        public virtual DbSet<trBankPaymentInstructionHeader> trBankPaymentInstructionHeader { get; set; }
        public virtual DbSet<trBankPaymentInstructionLine> trBankPaymentInstructionLine { get; set; }
        public virtual DbSet<trBankPaymentListHeader> trBankPaymentListHeader { get; set; }
        public virtual DbSet<trBankPaymentListLine> trBankPaymentListLine { get; set; }
        public virtual DbSet<trBudget> trBudget { get; set; }
        public virtual DbSet<trCashHeader> trCashHeader { get; set; }
        public virtual DbSet<trCashLine> trCashLine { get; set; }
        public virtual DbSet<trCashLineCostCenterRates> trCashLineCostCenterRates { get; set; }
        public virtual DbSet<trCashLineCurrency> trCashLineCurrency { get; set; }
        public virtual DbSet<trChequeHeader> trChequeHeader { get; set; }
        public virtual DbSet<trChequeLine> trChequeLine { get; set; }
        public virtual DbSet<trChequeLineCurrency> trChequeLineCurrency { get; set; }
        public virtual DbSet<trContract> trContract { get; set; }
        public virtual DbSet<trContractProduct> trContractProduct { get; set; }
        public virtual DbSet<trCostCenterDistributions> trCostCenterDistributions { get; set; }
        public virtual DbSet<trCostOfGoodsSoldHeader> trCostOfGoodsSoldHeader { get; set; }
        public virtual DbSet<trCostOfGoodsSoldLine> trCostOfGoodsSoldLine { get; set; }
        public virtual DbSet<trCountrySpecialDay> trCountrySpecialDay { get; set; }
        public virtual DbSet<trCreditCardPaymentHeader> trCreditCardPaymentHeader { get; set; }
        public virtual DbSet<trCreditCardPaymentLine> trCreditCardPaymentLine { get; set; }
        public virtual DbSet<trCreditCardPaymentLineCurrency> trCreditCardPaymentLineCurrency { get; set; }
        public virtual DbSet<trCurrAccBook> trCurrAccBook { get; set; }
        public virtual DbSet<trCurrAccBookCurrency> trCurrAccBookCurrency { get; set; }
        public virtual DbSet<trCurrAccReconciliationEMailNotification> trCurrAccReconciliationEMailNotification { get; set; }
        public virtual DbSet<trCurrAccReconciliationReport> trCurrAccReconciliationReport { get; set; }
        public virtual DbSet<trCurrAccReconciliationReportConfirmation> trCurrAccReconciliationReportConfirmation { get; set; }
        public virtual DbSet<trDebitHeader> trDebitHeader { get; set; }
        public virtual DbSet<trDebitLine> trDebitLine { get; set; }
        public virtual DbSet<trDebitLineCurrency> trDebitLineCurrency { get; set; }
        public virtual DbSet<trDepartmentReceiptHeader> trDepartmentReceiptHeader { get; set; }
        public virtual DbSet<trDepartmentReceiptLine> trDepartmentReceiptLine { get; set; }
        public virtual DbSet<trDispOrderHeader> trDispOrderHeader { get; set; }
        public virtual DbSet<trDispOrderLine> trDispOrderLine { get; set; }
        public virtual DbSet<trEmployeeDebit> trEmployeeDebit { get; set; }
        public virtual DbSet<trEmployeeDebitCurrency> trEmployeeDebitCurrency { get; set; }
        public virtual DbSet<trEndOfPeriodInventory> trEndOfPeriodInventory { get; set; }
        public virtual DbSet<trExchangeRateHeader> trExchangeRateHeader { get; set; }
        public virtual DbSet<trExchangeRateLine> trExchangeRateLine { get; set; }
        public virtual DbSet<trExpenseAccrualHeader> trExpenseAccrualHeader { get; set; }
        public virtual DbSet<trExpenseAccrualLine> trExpenseAccrualLine { get; set; }
        public virtual DbSet<trExpenseAccrualLineCostCenterRates> trExpenseAccrualLineCostCenterRates { get; set; }
        public virtual DbSet<trExpenseAccrualLineCurrency> trExpenseAccrualLineCurrency { get; set; }
        public virtual DbSet<trExpenseSlipHeader> trExpenseSlipHeader { get; set; }
        public virtual DbSet<trExpenseSlipLine> trExpenseSlipLine { get; set; }
        public virtual DbSet<trExpenseSlipLineCostCenterRates> trExpenseSlipLineCostCenterRates { get; set; }
        public virtual DbSet<trExpenseSlipLineCurrency> trExpenseSlipLineCurrency { get; set; }
        public virtual DbSet<trFixedAssetBookHeader> trFixedAssetBookHeader { get; set; }
        public virtual DbSet<trFixedAssetBookLine> trFixedAssetBookLine { get; set; }
        public virtual DbSet<trForthcomingItems> trForthcomingItems { get; set; }
        public virtual DbSet<trForthcomingOrders> trForthcomingOrders { get; set; }
        public virtual DbSet<trGiftCardPaymentHeader> trGiftCardPaymentHeader { get; set; }
        public virtual DbSet<trGiftCardPaymentLine> trGiftCardPaymentLine { get; set; }
        public virtual DbSet<trGiftCardPaymentLineCurrency> trGiftCardPaymentLineCurrency { get; set; }
        public virtual DbSet<trIncentiveHeader> trIncentiveHeader { get; set; }
        public virtual DbSet<trIncentiveLine> trIncentiveLine { get; set; }
        public virtual DbSet<trInnerHeader> trInnerHeader { get; set; }
        public virtual DbSet<trInnerLine> trInnerLine { get; set; }
        public virtual DbSet<trInnerLineBOM> trInnerLineBOM { get; set; }
        public virtual DbSet<trInnerLineCostCenterRates> trInnerLineCostCenterRates { get; set; }
        public virtual DbSet<trInnerLineGiftCard> trInnerLineGiftCard { get; set; }
        public virtual DbSet<trInnerLineInventoryTransfer> trInnerLineInventoryTransfer { get; set; }
        public virtual DbSet<trInnerLineSum> trInnerLineSum { get; set; }
        public virtual DbSet<trInnerLineSumDetail> trInnerLineSumDetail { get; set; }
        public virtual DbSet<trInnerOrderHeader> trInnerOrderHeader { get; set; }
        public virtual DbSet<trInnerOrderLine> trInnerOrderLine { get; set; }
        public virtual DbSet<trInnerOrderLineSum> trInnerOrderLineSum { get; set; }
        public virtual DbSet<trInnerOrderLineSumDetail> trInnerOrderLineSumDetail { get; set; }
        public virtual DbSet<trInvoiceHeader> trInvoiceHeader { get; set; }
        public virtual DbSet<trInvoiceLine> trInvoiceLine { get; set; }
        public virtual DbSet<trInvoiceLineBOM> trInvoiceLineBOM { get; set; }
        public virtual DbSet<trInvoiceLineCostCenterRates> trInvoiceLineCostCenterRates { get; set; }
        public virtual DbSet<trInvoiceLineCurrency> trInvoiceLineCurrency { get; set; }
        public virtual DbSet<trInvoiceLineGiftCard> trInvoiceLineGiftCard { get; set; }
        public virtual DbSet<trInvoiceLineReportedSales> trInvoiceLineReportedSales { get; set; }
        public virtual DbSet<trInvoiceLineSubsequentDeliveryOrders> trInvoiceLineSubsequentDeliveryOrders { get; set; }
        public virtual DbSet<trInvoiceLineSum> trInvoiceLineSum { get; set; }
        public virtual DbSet<trInvoiceLineSumDetail> trInvoiceLineSumDetail { get; set; }
        public virtual DbSet<trItemTestHeader> trItemTestHeader { get; set; }
        public virtual DbSet<trItemTestLine> trItemTestLine { get; set; }
        public virtual DbSet<trJournalHeader> trJournalHeader { get; set; }
        public virtual DbSet<trJournalLedgerEntryNumber> trJournalLedgerEntryNumber { get; set; }
        public virtual DbSet<trJournalLine> trJournalLine { get; set; }
        public virtual DbSet<trJournalLineCostCenterRates> trJournalLineCostCenterRates { get; set; }
        public virtual DbSet<trJournalLineCurrency> trJournalLineCurrency { get; set; }
        public virtual DbSet<trMessageBox> trMessageBox { get; set; }
        public virtual DbSet<trOrderAdvancePayments> trOrderAdvancePayments { get; set; }
        public virtual DbSet<trOrderAsnHeader> trOrderAsnHeader { get; set; }
        public virtual DbSet<trOrderAsnLine> trOrderAsnLine { get; set; }
        public virtual DbSet<trOrderAsnLineSum> trOrderAsnLineSum { get; set; }
        public virtual DbSet<trOrderAsnLineSumDetail> trOrderAsnLineSumDetail { get; set; }
        public virtual DbSet<trOrderAuditorSurvey> trOrderAuditorSurvey { get; set; }
        public virtual DbSet<trOrderHeader> trOrderHeader { get; set; }
        public virtual DbSet<trOrderLine> trOrderLine { get; set; }
        public virtual DbSet<trOrderLineBOM> trOrderLineBOM { get; set; }
        public virtual DbSet<trOrderLineCurrency> trOrderLineCurrency { get; set; }
        public virtual DbSet<trOrderLineSum> trOrderLineSum { get; set; }
        public virtual DbSet<trOrderLineSumDetail> trOrderLineSumDetail { get; set; }
        public virtual DbSet<trOrderOpticalProduct> trOrderOpticalProduct { get; set; }
        public virtual DbSet<trOrderOpticalProductLine> trOrderOpticalProductLine { get; set; }
        public virtual DbSet<trOrderPaymentPlan> trOrderPaymentPlan { get; set; }
        public virtual DbSet<trOrderSurvey> trOrderSurvey { get; set; }
        public virtual DbSet<trOtherPaymentHeader> trOtherPaymentHeader { get; set; }
        public virtual DbSet<trOtherPaymentLine> trOtherPaymentLine { get; set; }
        public virtual DbSet<trOtherPaymentLineCurrency> trOtherPaymentLineCurrency { get; set; }
        public virtual DbSet<trPaymentHeader> trPaymentHeader { get; set; }
        public virtual DbSet<trPaymentLine> trPaymentLine { get; set; }
        public virtual DbSet<trPaymentLineCurrency> trPaymentLineCurrency { get; set; }
        public virtual DbSet<trPayrollHeader> trPayrollHeader { get; set; }
        public virtual DbSet<trPayrollLine> trPayrollLine { get; set; }
        public virtual DbSet<trPayrollLineDeduction> trPayrollLineDeduction { get; set; }
        public virtual DbSet<trPayrollLineGarnishment> trPayrollLineGarnishment { get; set; }
        public virtual DbSet<trPayrollLineTally> trPayrollLineTally { get; set; }
        public virtual DbSet<trPayrollTerminationSeveranceDetail> trPayrollTerminationSeveranceDetail { get; set; }
        public virtual DbSet<trPickingHeader> trPickingHeader { get; set; }
        public virtual DbSet<trPickingLine> trPickingLine { get; set; }
        public virtual DbSet<trPriceListHeader> trPriceListHeader { get; set; }
        public virtual DbSet<trPriceListLine> trPriceListLine { get; set; }
        public virtual DbSet<trProposalHeader> trProposalHeader { get; set; }
        public virtual DbSet<trProposalLine> trProposalLine { get; set; }
        public virtual DbSet<trProposalLineCurrency> trProposalLineCurrency { get; set; }
        public virtual DbSet<trProposalLineSum> trProposalLineSum { get; set; }
        public virtual DbSet<trProposalLineSumDetail> trProposalLineSumDetail { get; set; }
        public virtual DbSet<trPurchaseRequisitionConfirmationEMailNotification> trPurchaseRequisitionConfirmationEMailNotification { get; set; }
        public virtual DbSet<trPurchaseRequisitionHeader> trPurchaseRequisitionHeader { get; set; }
        public virtual DbSet<trPurchaseRequisitionLine> trPurchaseRequisitionLine { get; set; }
        public virtual DbSet<trPurchaseRequisitionProposalConfirmationEMailNotification> trPurchaseRequisitionProposalConfirmationEMailNotification { get; set; }
        public virtual DbSet<trPurchaseRequisitionProposalConfirmationEMailNotificationDetail> trPurchaseRequisitionProposalConfirmationEMailNotificationDetail { get; set; }
        public virtual DbSet<trReportedSaleHeader> trReportedSaleHeader { get; set; }
        public virtual DbSet<trReportedSaleLine> trReportedSaleLine { get; set; }
        public virtual DbSet<trReserveHeader> trReserveHeader { get; set; }
        public virtual DbSet<trReserveLine> trReserveLine { get; set; }
        public virtual DbSet<trReserveTransfer> trReserveTransfer { get; set; }
        public virtual DbSet<trReturnedForthcomingItems> trReturnedForthcomingItems { get; set; }
        public virtual DbSet<trSalesPlan> trSalesPlan { get; set; }
        public virtual DbSet<trSalesPlanChannel> trSalesPlanChannel { get; set; }
        public virtual DbSet<trSalesPlanProduct> trSalesPlanProduct { get; set; }
        public virtual DbSet<trSalesPlanProductQty> trSalesPlanProductQty { get; set; }
        public virtual DbSet<trShipmentHeader> trShipmentHeader { get; set; }
        public virtual DbSet<trShipmentLine> trShipmentLine { get; set; }
        public virtual DbSet<trShipmentLineBOM> trShipmentLineBOM { get; set; }
        public virtual DbSet<trShipmentLineGiftCard> trShipmentLineGiftCard { get; set; }
        public virtual DbSet<trShipmentLineSum> trShipmentLineSum { get; set; }
        public virtual DbSet<trShipmentLineSumDetail> trShipmentLineSumDetail { get; set; }
        public virtual DbSet<trSMSPoolHeader> trSMSPoolHeader { get; set; }
        public virtual DbSet<trSMSPoolLine> trSMSPoolLine { get; set; }
        public virtual DbSet<trSMSPoolMessage> trSMSPoolMessage { get; set; }
        public virtual DbSet<trStock> trStock { get; set; }
        public virtual DbSet<trStoreVisitors> trStoreVisitors { get; set; }
        public virtual DbSet<trStoreVisitorsNew> trStoreVisitorsNew { get; set; }
        public virtual DbSet<trSupportRequestHeader> trSupportRequestHeader { get; set; }
        public virtual DbSet<trSupportRequestLine> trSupportRequestLine { get; set; }
        public virtual DbSet<trSupportRequestSurvey> trSupportRequestSurvey { get; set; }
        public virtual DbSet<trSurveyAnswerHeader> trSurveyAnswerHeader { get; set; }
        public virtual DbSet<trSurveyAnswerLine> trSurveyAnswerLine { get; set; }
        public virtual DbSet<trTaxIncurredHeader> trTaxIncurredHeader { get; set; }
        public virtual DbSet<trTaxIncurredLine> trTaxIncurredLine { get; set; }
        public virtual DbSet<trTFRSInvoiceAdjustment> trTFRSInvoiceAdjustment { get; set; }
        public virtual DbSet<trTransferPlan> trTransferPlan { get; set; }
        public virtual DbSet<trTransferPlanChannel> trTransferPlanChannel { get; set; }
        public virtual DbSet<trTransferPlanParameterValue> trTransferPlanParameterValue { get; set; }
        public virtual DbSet<trTransferPlanProduct> trTransferPlanProduct { get; set; }
        public virtual DbSet<trTransferPlanProductQty> trTransferPlanProductQty { get; set; }
        public virtual DbSet<trVehicleLoadingHeader> trVehicleLoadingHeader { get; set; }
        public virtual DbSet<trVehicleLoadingLine> trVehicleLoadingLine { get; set; }
        public virtual DbSet<trVehicleUnLoadingHeader> trVehicleUnLoadingHeader { get; set; }
        public virtual DbSet<trVehicleUnLoadingLine> trVehicleUnLoadingLine { get; set; }
        public virtual DbSet<trVendorPriceListHeader> trVendorPriceListHeader { get; set; }
        public virtual DbSet<trVendorPriceListLine> trVendorPriceListLine { get; set; }
        public virtual DbSet<trVirementHeader> trVirementHeader { get; set; }
        public virtual DbSet<trVirementLine> trVirementLine { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<zpBasefyCheckOutCancellation> zpBasefyCheckOutCancellation { get; set; }
        public virtual DbSet<zpBasefyCheckOutNew> zpBasefyCheckOutNew { get; set; }
        public virtual DbSet<zpBasefyCheckOutRefundOrder> zpBasefyCheckOutRefundOrder { get; set; }
        public virtual DbSet<zpBasefyCheckOutUsePoint> zpBasefyCheckOutUsePoint { get; set; }
        public virtual DbSet<zpBasefyUserSearch> zpBasefyUserSearch { get; set; }
        public virtual DbSet<zpBulutTahsilatCreditCardPaymentEventLog> zpBulutTahsilatCreditCardPaymentEventLog { get; set; }
        public virtual DbSet<zpBulutTahsilatCreditCardVPOSCancelPaymentList> zpBulutTahsilatCreditCardVPOSCancelPaymentList { get; set; }
        public virtual DbSet<zpBulutTahsilatCreditCardVPOSPaymentList> zpBulutTahsilatCreditCardVPOSPaymentList { get; set; }
        public virtual DbSet<zpBulutTahsilatCreditCardVPOSReturnLog> zpBulutTahsilatCreditCardVPOSReturnLog { get; set; }
        public virtual DbSet<zpBulutTahsilatCustomerOnlinePayment> zpBulutTahsilatCustomerOnlinePayment { get; set; }
        public virtual DbSet<zpBulutTahsilatDistanceSalePayment> zpBulutTahsilatDistanceSalePayment { get; set; }
        public virtual DbSet<zpBulutTahsilatRetailCustomerBankPaymentList> zpBulutTahsilatRetailCustomerBankPaymentList { get; set; }
        public virtual DbSet<zpChippinProcessedPayment> zpChippinProcessedPayment { get; set; }
        public virtual DbSet<zpChippinServiceLog> zpChippinServiceLog { get; set; }
        public virtual DbSet<zpCOMOCancelPayment> zpCOMOCancelPayment { get; set; }
        public virtual DbSet<zpCOMOCancelPurchase> zpCOMOCancelPurchase { get; set; }
        public virtual DbSet<zpCOMODoPayment> zpCOMODoPayment { get; set; }
        public virtual DbSet<zpCOMOGetBenefits> zpCOMOGetBenefits { get; set; }
        public virtual DbSet<zpCOMOGetMemberDetails> zpCOMOGetMemberDetails { get; set; }
        public virtual DbSet<zpCOMOSubmitPurchase> zpCOMOSubmitPurchase { get; set; }
        public virtual DbSet<zpCOMOVoidPurchase> zpCOMOVoidPurchase { get; set; }
        public virtual DbSet<zpCustomsShoppingHistory> zpCustomsShoppingHistory { get; set; }
        public virtual DbSet<zpDmsCancelByProduct> zpDmsCancelByProduct { get; set; }
        public virtual DbSet<zpDmsCancelByProductItem> zpDmsCancelByProductItem { get; set; }
        public virtual DbSet<zpDmsCancelByProductPayment> zpDmsCancelByProductPayment { get; set; }
        public virtual DbSet<zpDmsGetCustomerByCode> zpDmsGetCustomerByCode { get; set; }
        public virtual DbSet<zpDmsGetCustomerByCodeBenefits> zpDmsGetCustomerByCodeBenefits { get; set; }
        public virtual DbSet<zpDmsRegisterPaidCheck> zpDmsRegisterPaidCheck { get; set; }
        public virtual DbSet<zpDmsRegisterPaidCheckItem> zpDmsRegisterPaidCheckItem { get; set; }
        public virtual DbSet<zpDmsRegisterPaidCheckItemCampaign> zpDmsRegisterPaidCheckItemCampaign { get; set; }
        public virtual DbSet<zpDmsRegisterPaidCheckItemProduct> zpDmsRegisterPaidCheckItemProduct { get; set; }
        public virtual DbSet<zpDmsRegisterPaidCheckPayment> zpDmsRegisterPaidCheckPayment { get; set; }
        public virtual DbSet<zpFastPayProcessedPayment> zpFastPayProcessedPayment { get; set; }
        public virtual DbSet<zpFinanceCompanyServiceLog> zpFinanceCompanyServiceLog { get; set; }
        public virtual DbSet<zpGetirCarsiOrderInfo> zpGetirCarsiOrderInfo { get; set; }
        public virtual DbSet<zpGetirCarsiServiceLog> zpGetirCarsiServiceLog { get; set; }
        public virtual DbSet<zpGlobalBlueConfiguration> zpGlobalBlueConfiguration { get; set; }
        public virtual DbSet<zpGlobalBlueLastDocument> zpGlobalBlueLastDocument { get; set; }
        public virtual DbSet<zpGlobalBlueServiceLog> zpGlobalBlueServiceLog { get; set; }
        public virtual DbSet<zpGlobalBlueTransaction> zpGlobalBlueTransaction { get; set; }
        public virtual DbSet<zpGlobalBlueWebServiceLog> zpGlobalBlueWebServiceLog { get; set; }
        public virtual DbSet<zpHopiCancelCoinTransaction> zpHopiCancelCoinTransaction { get; set; }
        public virtual DbSet<zpHopiCancelReturnTransaction> zpHopiCancelReturnTransaction { get; set; }
        public virtual DbSet<zpHopiCompleteCoinTransaction> zpHopiCompleteCoinTransaction { get; set; }
        public virtual DbSet<zpHopiCompleteReturnTransaction> zpHopiCompleteReturnTransaction { get; set; }
        public virtual DbSet<zpHopiGetHopiUserInfo> zpHopiGetHopiUserInfo { get; set; }
        public virtual DbSet<zpHopiGetHopiUserInfoCampaignSummary> zpHopiGetHopiUserInfoCampaignSummary { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOut> zpHopiNotifyCheckOut { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOutCampaignFreePaymentDetail> zpHopiNotifyCheckOutCampaignFreePaymentDetail { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOutPaymentDetail> zpHopiNotifyCheckOutPaymentDetail { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOutSubTotalDetail> zpHopiNotifyCheckOutSubTotalDetail { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOutTransactionInfo> zpHopiNotifyCheckOutTransactionInfo { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOutUsedCampaignDetail> zpHopiNotifyCheckOutUsedCampaignDetail { get; set; }
        public virtual DbSet<zpHopiNotifyCheckOutUsedCoinDetail> zpHopiNotifyCheckOutUsedCoinDetail { get; set; }
        public virtual DbSet<zpHopiPayProcessedPayment> zpHopiPayProcessedPayment { get; set; }
        public virtual DbSet<zpHopiPayServiceLog> zpHopiPayServiceLog { get; set; }
        public virtual DbSet<zpHopiRefundCoin> zpHopiRefundCoin { get; set; }
        public virtual DbSet<zpHopiServiceLog> zpHopiServiceLog { get; set; }
        public virtual DbSet<zpHopiStartCoinTransaction> zpHopiStartCoinTransaction { get; set; }
        public virtual DbSet<zpHopiStartReturnTransaction> zpHopiStartReturnTransaction { get; set; }
        public virtual DbSet<zpHopiStartReturnTransactionReturnCampaignDetail> zpHopiStartReturnTransactionReturnCampaignDetail { get; set; }
        public virtual DbSet<zpHopiStartReturnTransactionReturnTransactionInfo> zpHopiStartReturnTransactionReturnTransactionInfo { get; set; }
        public virtual DbSet<zpHopiUsedCampaignDetailAmountDetail> zpHopiUsedCampaignDetailAmountDetail { get; set; }
        public virtual DbSet<zpHopiUsedCampaignDetailBenefitDetail> zpHopiUsedCampaignDetailBenefitDetail { get; set; }
        public virtual DbSet<zpIyzicoProcessedPayment> zpIyzicoProcessedPayment { get; set; }
        public virtual DbSet<zpJoyRefundTransaction> zpJoyRefundTransaction { get; set; }
        public virtual DbSet<zpMobilDevWebHookService> zpMobilDevWebHookService { get; set; }
        public virtual DbSet<zpMobilDevWebHookServiceLog> zpMobilDevWebHookServiceLog { get; set; }
        public virtual DbSet<zpN2AnimaProcessedPayment> zpN2AnimaProcessedPayment { get; set; }
        public virtual DbSet<zpOnlineBankServiceErrorLog> zpOnlineBankServiceErrorLog { get; set; }
        public virtual DbSet<zpOnlineBankServiceLog> zpOnlineBankServiceLog { get; set; }
        public virtual DbSet<zpOnlineBankTransaction> zpOnlineBankTransaction { get; set; }
        public virtual DbSet<zpParoAlisverisBaslat> zpParoAlisverisBaslat { get; set; }
        public virtual DbSet<zpParoAlisverisBitti> zpParoAlisverisBitti { get; set; }
        public virtual DbSet<zpParoAlisverisIptal> zpParoAlisverisIptal { get; set; }
        public virtual DbSet<zpParoDuyuru> zpParoDuyuru { get; set; }
        public virtual DbSet<zpParoIndirim> zpParoIndirim { get; set; }
        public virtual DbSet<zpParoPuan> zpParoPuan { get; set; }
        public virtual DbSet<zpParoPuanIade> zpParoPuanIade { get; set; }
        public virtual DbSet<zpParoUyeKontrol> zpParoUyeKontrol { get; set; }
        public virtual DbSet<zpPaynetCreditCardPaymentEventLog> zpPaynetCreditCardPaymentEventLog { get; set; }
        public virtual DbSet<zpPaynetCreditCardPaymentLine> zpPaynetCreditCardPaymentLine { get; set; }
        public virtual DbSet<zpPaynetDistanceSalePayment> zpPaynetDistanceSalePayment { get; set; }
        public virtual DbSet<zpPaynetDistanceSalePaymentURL> zpPaynetDistanceSalePaymentURL { get; set; }
        public virtual DbSet<zpPaynetProcessedPayment> zpPaynetProcessedPayment { get; set; }
        public virtual DbSet<zpTaxFreePointServiceLog> zpTaxFreePointServiceLog { get; set; }
        public virtual DbSet<zpTaxFreeZoneTransaction> zpTaxFreeZoneTransaction { get; set; }
        public virtual DbSet<zpTuratelWebHookServiceLog> zpTuratelWebHookServiceLog { get; set; }
        public virtual DbSet<zpUmicoTransaction> zpUmicoTransaction { get; set; }
        public virtual DbSet<zpUTSForthcomingShipment> zpUTSForthcomingShipment { get; set; }
        public virtual DbSet<zpUTSWebServisHareketBildirim> zpUTSWebServisHareketBildirim { get; set; }
        public virtual DbSet<zpUTSWebServisIptalBildirim> zpUTSWebServisIptalBildirim { get; set; }
        public virtual DbSet<zpUTSWebServisResponseLog> zpUTSWebServisResponseLog { get; set; }
        public virtual DbSet<zpVodafoneAcService> zpVodafoneAcService { get; set; }
        public virtual DbSet<zt_CreditCardAccounts> zt_CreditCardAccounts { get; set; }
        public virtual DbSet<zt_DYSEditOrderResponse> zt_DYSEditOrderResponse { get; set; }
        public virtual DbSet<zt_ProductSupplier> zt_ProductSupplier { get; set; }
        public virtual DbSet<zt_RetailOrderList_Log> zt_RetailOrderList_Log { get; set; }
        public virtual DbSet<zt_RGN_BebegimOlacakXML> zt_RGN_BebegimOlacakXML { get; set; }
        public virtual DbSet<zt_RGN_BebegimOlacakXMLImage> zt_RGN_BebegimOlacakXMLImage { get; set; }
        public virtual DbSet<zt_RGN_BebegimOlacakXMLSecenek> zt_RGN_BebegimOlacakXMLSecenek { get; set; }
        public virtual DbSet<zt_RGN_BebegimOlacakXMLTeknikDetay> zt_RGN_BebegimOlacakXMLTeknikDetay { get; set; }
        public virtual DbSet<zt_RGN_NudoXML> zt_RGN_NudoXML { get; set; }
        public virtual DbSet<zt_RGN_NudoXMLImage> zt_RGN_NudoXMLImage { get; set; }
        public virtual DbSet<zt_RGN_NudoXMLSecenek> zt_RGN_NudoXMLSecenek { get; set; }
        public virtual DbSet<zt_RGN_PackageToInvoiceStatus> zt_RGN_PackageToInvoiceStatus { get; set; }
        public virtual DbSet<zt_RGN_PackageToInvoiceTransaction> zt_RGN_PackageToInvoiceTransaction { get; set; }
        public virtual DbSet<zt_RGN_PackageToShelfTransaction> zt_RGN_PackageToShelfTransaction { get; set; }
        public virtual DbSet<zt_RGN_PartiBetaXML> zt_RGN_PartiBetaXML { get; set; }
        public virtual DbSet<zt_RGN_PartiBetaXMLVariant> zt_RGN_PartiBetaXMLVariant { get; set; }
        public virtual DbSet<zt_RGN_ProductAttributeType> zt_RGN_ProductAttributeType { get; set; }
        public virtual DbSet<zt_RGN_ProductList> zt_RGN_ProductList { get; set; }
        public virtual DbSet<zt_RGN_srRefNumberPackageList> zt_RGN_srRefNumberPackageList { get; set; }
        public virtual DbSet<zt_RGN_trAssigmentOrderUser> zt_RGN_trAssigmentOrderUser { get; set; }
        public virtual DbSet<zt_RGN_trOrderPackageList> zt_RGN_trOrderPackageList { get; set; }
        public virtual DbSet<zt_RGN_trOrderPackageListQty> zt_RGN_trOrderPackageListQty { get; set; }
        public virtual DbSet<zt_RGN_trPickingToInvoiceListQty> zt_RGN_trPickingToInvoiceListQty { get; set; }
        public virtual DbSet<zt_RGN_trShelfPackageListQty> zt_RGN_trShelfPackageListQty { get; set; }
        public virtual DbSet<zt_RGN_UsersReservation> zt_RGN_UsersReservation { get; set; }
        public virtual DbSet<zt_SaleChannelCustomer> zt_SaleChannelCustomer { get; set; }
        public virtual DbSet<zt_SqlEgitim_Deneme1> zt_SqlEgitim_Deneme1 { get; set; }
        public virtual DbSet<zt_StoreVisitorConvertStore> zt_StoreVisitorConvertStore { get; set; }
        public virtual DbSet<ztDYSInventoryControl> ztDYSInventoryControl { get; set; }
        public virtual DbSet<auCardElementRequiredKey> auCardElementRequiredKey { get; set; }
        public virtual DbSet<auInvoiceTsmPaymentInfo> auInvoiceTsmPaymentInfo { get; set; }
        public virtual DbSet<bck_trOrderLineCurrency> bck_trOrderLineCurrency { get; set; }
        public virtual DbSet<dfAgentContractProductLevels> dfAgentContractProductLevels { get; set; }
        public virtual DbSet<dfOfflinePosServiceParameters> dfOfflinePosServiceParameters { get; set; }
        public virtual DbSet<dfProductGroupLevelForOfficeBasedSerialNumberTracking> dfProductGroupLevelForOfficeBasedSerialNumberTracking { get; set; }
        public virtual DbSet<dfSupportRequestProductLevels> dfSupportRequestProductLevels { get; set; }
        public virtual DbSet<MPersonel> MPersonel { get; set; }
        public virtual DbSet<OrderTransaction> OrderTransaction { get; set; }
        public virtual DbSet<RGN> RGN { get; set; }
        public virtual DbSet<Sayi> Sayi { get; set; }
        public virtual DbSet<ShipmentPrintQueue> ShipmentPrintQueue { get; set; }
        public virtual DbSet<trAllocationData_DefR1> trAllocationData_DefR1 { get; set; }
        public virtual DbSet<trAllocationData_DefR2> trAllocationData_DefR2 { get; set; }
        public virtual DbSet<trAllocationData_M> trAllocationData_M { get; set; }
        public virtual DbSet<trTransferPlanData_DefT1> trTransferPlanData_DefT1 { get; set; }
        public virtual DbSet<trTransferPlanData_DefT2> trTransferPlanData_DefT2 { get; set; }
        public virtual DbSet<trTransferPlanData_DefT3> trTransferPlanData_DefT3 { get; set; }
        public virtual DbSet<trTransferPlanData_ITR> trTransferPlanData_ITR { get; set; }
        public virtual DbSet<zt_BNS_OrderDatamatrixList> zt_BNS_OrderDatamatrixList { get; set; }
        public virtual DbSet<zt_InvoiceBackup> zt_InvoiceBackup { get; set; }
        public virtual DbSet<zt_RetailOrderList> zt_RetailOrderList { get; set; }
        public virtual DbSet<zt_RetailOrderList_test> zt_RetailOrderList_test { get; set; }
        public virtual DbSet<zt_RGN_CollectedReserveItem> zt_RGN_CollectedReserveItem { get; set; }
        public virtual DbSet<zt_RGN_ProductAttribute> zt_RGN_ProductAttribute { get; set; }
        public virtual DbSet<zt_RGN_ProductDescriptions> zt_RGN_ProductDescriptions { get; set; }
        public virtual DbSet<zt_RGN_ProductInventoryNUDO> zt_RGN_ProductInventoryNUDO { get; set; }
        public virtual DbSet<zt_RGN_ProductVariantList> zt_RGN_ProductVariantList { get; set; }
        public virtual DbSet<zt_RGN_TempReserveList> zt_RGN_TempReserveList { get; set; }
        public virtual DbSet<zt_RGN_UsersXML> zt_RGN_UsersXML { get; set; }
        public virtual DbSet<AllAgentPerformanceBonusLines> AllAgentPerformanceBonusLines { get; set; }
        public virtual DbSet<AllAllocationProductStatus> AllAllocationProductStatus { get; set; }
        public virtual DbSet<AllAllocations> AllAllocations { get; set; }
        public virtual DbSet<AllAllocationsWithAttributes> AllAllocationsWithAttributes { get; set; }
        public virtual DbSet<AllBankCredits> AllBankCredits { get; set; }
        public virtual DbSet<AllBankPaymentInstructions> AllBankPaymentInstructions { get; set; }
        public virtual DbSet<AllBankPaymentInstructionsWithAttributes> AllBankPaymentInstructionsWithAttributes { get; set; }
        public virtual DbSet<AllBankPaymentLists> AllBankPaymentLists { get; set; }
        public virtual DbSet<AllBankPaymentListsWithAttributes> AllBankPaymentListsWithAttributes { get; set; }
        public virtual DbSet<AllBanks> AllBanks { get; set; }
        public virtual DbSet<AllBanksWithAttributes> AllBanksWithAttributes { get; set; }
        public virtual DbSet<AllCashs> AllCashs { get; set; }
        public virtual DbSet<AllCashsWithAttributes> AllCashsWithAttributes { get; set; }
        public virtual DbSet<AllCheques> AllCheques { get; set; }
        public virtual DbSet<AllChequesWithAttributes> AllChequesWithAttributes { get; set; }
        public virtual DbSet<AllCostOfGoodsSoldLines> AllCostOfGoodsSoldLines { get; set; }
        public virtual DbSet<AllCreditCardPayments> AllCreditCardPayments { get; set; }
        public virtual DbSet<AllCreditCardPaymentsWithAttributes> AllCreditCardPaymentsWithAttributes { get; set; }
        public virtual DbSet<AllCurrAccBooks> AllCurrAccBooks { get; set; }
        public virtual DbSet<AllCurrAccBooksWithAttributes> AllCurrAccBooksWithAttributes { get; set; }
        public virtual DbSet<AllDebits> AllDebits { get; set; }
        public virtual DbSet<AllDebitsWithAttributes> AllDebitsWithAttributes { get; set; }
        public virtual DbSet<AllDepartmentReceiptLines> AllDepartmentReceiptLines { get; set; }
        public virtual DbSet<AllDispOrderLines> AllDispOrderLines { get; set; }
        public virtual DbSet<AllDispOrderLinesWithITAttributes> AllDispOrderLinesWithITAttributes { get; set; }
        public virtual DbSet<AllEmployeeDebits> AllEmployeeDebits { get; set; }
        public virtual DbSet<AllExchangeRates> AllExchangeRates { get; set; }
        public virtual DbSet<AllExpenseAccruals> AllExpenseAccruals { get; set; }
        public virtual DbSet<AllExpenseAccrualsWithAttributes> AllExpenseAccrualsWithAttributes { get; set; }
        public virtual DbSet<AllExpenseSlips> AllExpenseSlips { get; set; }
        public virtual DbSet<AllExpenseSlipsWithAttributes> AllExpenseSlipsWithAttributes { get; set; }
        public virtual DbSet<AllFixedAssetBookLines> AllFixedAssetBookLines { get; set; }
        public virtual DbSet<AllGiftCardPayments> AllGiftCardPayments { get; set; }
        public virtual DbSet<AllGiftCardPaymentsWithAttributes> AllGiftCardPaymentsWithAttributes { get; set; }
        public virtual DbSet<AllIncentiveLines> AllIncentiveLines { get; set; }
        public virtual DbSet<AllInnerLines> AllInnerLines { get; set; }
        public virtual DbSet<AllInnerLinesWithITAttributes> AllInnerLinesWithITAttributes { get; set; }
        public virtual DbSet<AllInnerOrderLines> AllInnerOrderLines { get; set; }
        public virtual DbSet<AllInnerOrderLinesWithITAttributes> AllInnerOrderLinesWithITAttributes { get; set; }
        public virtual DbSet<AllInnerProcessFlowLines> AllInnerProcessFlowLines { get; set; }
        public virtual DbSet<AllInvoiceInstallments> AllInvoiceInstallments { get; set; }
        public virtual DbSet<AllInvoiceLines> AllInvoiceLines { get; set; }
        public virtual DbSet<AllInvoiceLinesWithITAttributes> AllInvoiceLinesWithITAttributes { get; set; }
        public virtual DbSet<AllInvoices> AllInvoices { get; set; }
        public virtual DbSet<AllInvoicesWithAttributes> AllInvoicesWithAttributes { get; set; }
        public virtual DbSet<AllItemTestLines> AllItemTestLines { get; set; }
        public virtual DbSet<AllJournals> AllJournals { get; set; }
        public virtual DbSet<AllJournalsWithAttributes> AllJournalsWithAttributes { get; set; }
        public virtual DbSet<AllocationATAttributes> AllocationATAttributes { get; set; }
        public virtual DbSet<AllocationATAttributesFilter> AllocationATAttributesFilter { get; set; }
        public virtual DbSet<AllocationData_Default> AllocationData_Default { get; set; }
        public virtual DbSet<AllocationData_DefR1> AllocationData_DefR1 { get; set; }
        public virtual DbSet<AllocationData_DefR2> AllocationData_DefR2 { get; set; }
        public virtual DbSet<AllocationData_M> AllocationData_M { get; set; }
        public virtual DbSet<AllocationITAttributes> AllocationITAttributes { get; set; }
        public virtual DbSet<AllocationITAttributesFilter> AllocationITAttributesFilter { get; set; }
        public virtual DbSet<AllOrderAsnLines> AllOrderAsnLines { get; set; }
        public virtual DbSet<AllOrderAsnLinesWithITAttributes> AllOrderAsnLinesWithITAttributes { get; set; }
        public virtual DbSet<AllOrderLines> AllOrderLines { get; set; }
        public virtual DbSet<AllOrderLinesWithITAttributes> AllOrderLinesWithITAttributes { get; set; }
        public virtual DbSet<AllOrders> AllOrders { get; set; }
        public virtual DbSet<AllOrderStatus> AllOrderStatus { get; set; }
        public virtual DbSet<AllOrdersWithAttributes> AllOrdersWithAttributes { get; set; }
        public virtual DbSet<AllOtherPayments> AllOtherPayments { get; set; }
        public virtual DbSet<AllOtherPaymentsWithAttributes> AllOtherPaymentsWithAttributes { get; set; }
        public virtual DbSet<AllPayments> AllPayments { get; set; }
        public virtual DbSet<AllPaymentsWithAttributes> AllPaymentsWithAttributes { get; set; }
        public virtual DbSet<AllPayrollDeductions> AllPayrollDeductions { get; set; }
        public virtual DbSet<AllPayrolls> AllPayrolls { get; set; }
        public virtual DbSet<AllPayrollTallys> AllPayrollTallys { get; set; }
        public virtual DbSet<AllPickingLines> AllPickingLines { get; set; }
        public virtual DbSet<AllPickingLinesWithITAttributes> AllPickingLinesWithITAttributes { get; set; }
        public virtual DbSet<AllPlannedPayrollDeductions> AllPlannedPayrollDeductions { get; set; }
        public virtual DbSet<AllPlannedPayrolls> AllPlannedPayrolls { get; set; }
        public virtual DbSet<AllPlannedPayrollTallys> AllPlannedPayrollTallys { get; set; }
        public virtual DbSet<AllPriceListLines> AllPriceListLines { get; set; }
        public virtual DbSet<AllProcessFlowLines> AllProcessFlowLines { get; set; }
        public virtual DbSet<AllProposalLines> AllProposalLines { get; set; }
        public virtual DbSet<AllProposalLinesWithITAttributes> AllProposalLinesWithITAttributes { get; set; }
        public virtual DbSet<AllProposals> AllProposals { get; set; }
        public virtual DbSet<AllProposalsWithAttributes> AllProposalsWithAttributes { get; set; }
        public virtual DbSet<AllPurchaseRequisitionLines> AllPurchaseRequisitionLines { get; set; }
        public virtual DbSet<AllReportedSaleLines> AllReportedSaleLines { get; set; }
        public virtual DbSet<AllReserveLines> AllReserveLines { get; set; }
        public virtual DbSet<AllReserveLinesWithITAttributes> AllReserveLinesWithITAttributes { get; set; }
        public virtual DbSet<AllSalesPlans> AllSalesPlans { get; set; }
        public virtual DbSet<AllShipmentLines> AllShipmentLines { get; set; }
        public virtual DbSet<AllShipmentLinesWithITAttributes> AllShipmentLinesWithITAttributes { get; set; }
        public virtual DbSet<AllSMSPools> AllSMSPools { get; set; }
        public virtual DbSet<AllStockWithITAttributes> AllStockWithITAttributes { get; set; }
        public virtual DbSet<AllSupportRequestLines> AllSupportRequestLines { get; set; }
        public virtual DbSet<AllTransferPlanProductStatus> AllTransferPlanProductStatus { get; set; }
        public virtual DbSet<AllTransferPlans> AllTransferPlans { get; set; }
        public virtual DbSet<AllTransferPlansWithAttributes> AllTransferPlansWithAttributes { get; set; }
        public virtual DbSet<AllVehicleLoadingLines> AllVehicleLoadingLines { get; set; }
        public virtual DbSet<AllVehicleUnLoadingLines> AllVehicleUnLoadingLines { get; set; }
        public virtual DbSet<AllVendorPriceListLines> AllVendorPriceListLines { get; set; }
        public virtual DbSet<AllVirements> AllVirements { get; set; }
        public virtual DbSet<AllVirementsWithAttributes> AllVirementsWithAttributes { get; set; }
        public virtual DbSet<BankAccountAttributes> BankAccountAttributes { get; set; }
        public virtual DbSet<BankAccountAttributesFilter> BankAccountAttributesFilter { get; set; }
        public virtual DbSet<BankAccountFilter> BankAccountFilter { get; set; }
        public virtual DbSet<BankATAttributes> BankATAttributes { get; set; }
        public virtual DbSet<BankATAttributesFilter> BankATAttributesFilter { get; set; }
        public virtual DbSet<BankCreditATAttributes> BankCreditATAttributes { get; set; }
        public virtual DbSet<BankCreditATAttributesFilter> BankCreditATAttributesFilter { get; set; }
        public virtual DbSet<BankCreditFTAttributes> BankCreditFTAttributes { get; set; }
        public virtual DbSet<BankCreditFTAttributesFilter> BankCreditFTAttributesFilter { get; set; }
        public virtual DbSet<BankFTAttributes> BankFTAttributes { get; set; }
        public virtual DbSet<BankFTAttributesFilter> BankFTAttributesFilter { get; set; }
        public virtual DbSet<BankPaymentInstructionATAttributes> BankPaymentInstructionATAttributes { get; set; }
        public virtual DbSet<BankPaymentInstructionATAttributesFilter> BankPaymentInstructionATAttributesFilter { get; set; }
        public virtual DbSet<BankPaymentInstructionFTAttributes> BankPaymentInstructionFTAttributes { get; set; }
        public virtual DbSet<BankPaymentInstructionFTAttributesFilter> BankPaymentInstructionFTAttributesFilter { get; set; }
        public virtual DbSet<BankPaymentListATAttributes> BankPaymentListATAttributes { get; set; }
        public virtual DbSet<BankPaymentListATAttributesFilter> BankPaymentListATAttributesFilter { get; set; }
        public virtual DbSet<BankPaymentListFTAttributes> BankPaymentListFTAttributes { get; set; }
        public virtual DbSet<BankPaymentListFTAttributesFilter> BankPaymentListFTAttributesFilter { get; set; }
        public virtual DbSet<BOMTemplateAttributes> BOMTemplateAttributes { get; set; }
        public virtual DbSet<BOMTemplateAttributesFilter> BOMTemplateAttributesFilter { get; set; }
        public virtual DbSet<CashAccountAttributes> CashAccountAttributes { get; set; }
        public virtual DbSet<CashAccountAttributesFilter> CashAccountAttributesFilter { get; set; }
        public virtual DbSet<CashAccountFilter> CashAccountFilter { get; set; }
        public virtual DbSet<CashATAttributes> CashATAttributes { get; set; }
        public virtual DbSet<CashATAttributesFilter> CashATAttributesFilter { get; set; }
        public virtual DbSet<CashFTAttributes> CashFTAttributes { get; set; }
        public virtual DbSet<CashFTAttributesFilter> CashFTAttributesFilter { get; set; }
        public virtual DbSet<ChequeATAttributes> ChequeATAttributes { get; set; }
        public virtual DbSet<ChequeATAttributesFilter> ChequeATAttributesFilter { get; set; }
        public virtual DbSet<ChequeFTAttributes> ChequeFTAttributes { get; set; }
        public virtual DbSet<ChequeFTAttributesFilter> ChequeFTAttributesFilter { get; set; }
        public virtual DbSet<ChequeReceivedAttributes> ChequeReceivedAttributes { get; set; }
        public virtual DbSet<ChequeReceivedAttributesFilter> ChequeReceivedAttributesFilter { get; set; }
        public virtual DbSet<ChequesGivenAttributes> ChequesGivenAttributes { get; set; }
        public virtual DbSet<ChequesGivenAttributesFilter> ChequesGivenAttributesFilter { get; set; }
        public virtual DbSet<ColorThemeAttributes> ColorThemeAttributes { get; set; }
        public virtual DbSet<ColorThemeAttributesFilter> ColorThemeAttributesFilter { get; set; }
        public virtual DbSet<ContractATAttributes> ContractATAttributes { get; set; }
        public virtual DbSet<ContractATAttributesFilter> ContractATAttributesFilter { get; set; }
        public virtual DbSet<ContractITAttributes> ContractITAttributes { get; set; }
        public virtual DbSet<ContractITAttributesFilter> ContractITAttributesFilter { get; set; }
        public virtual DbSet<CostCenterAttributes> CostCenterAttributes { get; set; }
        public virtual DbSet<CostCenterAttributesFilter> CostCenterAttributesFilter { get; set; }
        public virtual DbSet<CreditCardFilter> CreditCardFilter { get; set; }
        public virtual DbSet<CreditCardPaymentATAttributes> CreditCardPaymentATAttributes { get; set; }
        public virtual DbSet<CreditCardPaymentATAttributesFilter> CreditCardPaymentATAttributesFilter { get; set; }
        public virtual DbSet<CreditCardPaymentFTAttributes> CreditCardPaymentFTAttributes { get; set; }
        public virtual DbSet<CreditCardPaymentFTAttributesFilter> CreditCardPaymentFTAttributesFilter { get; set; }
        public virtual DbSet<CurrAccAdvancesForRetailCustomer> CurrAccAdvancesForRetailCustomer { get; set; }
        public virtual DbSet<CurrAccBookATAttributes> CurrAccBookATAttributes { get; set; }
        public virtual DbSet<CurrAccBookATAttributesFilter> CurrAccBookATAttributesFilter { get; set; }
        public virtual DbSet<CurrAccBookFTAttributes> CurrAccBookFTAttributes { get; set; }
        public virtual DbSet<CurrAccBookFTAttributesFilter> CurrAccBookFTAttributesFilter { get; set; }
        public virtual DbSet<CurrAccCredits> CurrAccCredits { get; set; }
        public virtual DbSet<CurrAccCreditsByDocCurrency> CurrAccCreditsByDocCurrency { get; set; }
        public virtual DbSet<CurrAccCreditsForRetailCustomer> CurrAccCreditsForRetailCustomer { get; set; }
        public virtual DbSet<CurrAccDebits> CurrAccDebits { get; set; }
        public virtual DbSet<CurrAccDebitsByDocCurrency> CurrAccDebitsByDocCurrency { get; set; }
        public virtual DbSet<CurrAccDebitsWithPayments> CurrAccDebitsWithPayments { get; set; }
        public virtual DbSet<CustomerAttributes> CustomerAttributes { get; set; }
        public virtual DbSet<CustomerAttributesFilter> CustomerAttributesFilter { get; set; }
        public virtual DbSet<CustomerFilter> CustomerFilter { get; set; }
        public virtual DbSet<CustomerSubCurrAccAttributes> CustomerSubCurrAccAttributes { get; set; }
        public virtual DbSet<CustomerSubCurrAccAttributesFilter> CustomerSubCurrAccAttributesFilter { get; set; }
        public virtual DbSet<DataTransferClients> DataTransferClients { get; set; }
        public virtual DbSet<DataTransferInsertionInfo> DataTransferInsertionInfo { get; set; }
        public virtual DbSet<DataTransferQueries> DataTransferQueries { get; set; }
        public virtual DbSet<DataTransferTemplateQueryFilter> DataTransferTemplateQueryFilter { get; set; }
        public virtual DbSet<DebitATAttributes> DebitATAttributes { get; set; }
        public virtual DbSet<DebitATAttributesFilter> DebitATAttributesFilter { get; set; }
        public virtual DbSet<DebitFTAttributes> DebitFTAttributes { get; set; }
        public virtual DbSet<DebitFTAttributesFilter> DebitFTAttributesFilter { get; set; }
        public virtual DbSet<DiscountOfferAttributes> DiscountOfferAttributes { get; set; }
        public virtual DbSet<DiscountOfferAttributesFilter> DiscountOfferAttributesFilter { get; set; }
        public virtual DbSet<DispOrderStates> DispOrderStates { get; set; }
        public virtual DbSet<EmployeeAttributes> EmployeeAttributes { get; set; }
        public virtual DbSet<EmployeeAttributesFilter> EmployeeAttributesFilter { get; set; }
        public virtual DbSet<EmployeeFilter> EmployeeFilter { get; set; }
        public virtual DbSet<EmployeeMonthlySum> EmployeeMonthlySum { get; set; }
        public virtual DbSet<EmployeeRetailTransactions> EmployeeRetailTransactions { get; set; }
        public virtual DbSet<EventLog> EventLog { get; set; }
        public virtual DbSet<ExpenseAccrualATAttributes> ExpenseAccrualATAttributes { get; set; }
        public virtual DbSet<ExpenseAccrualATAttributesFilter> ExpenseAccrualATAttributesFilter { get; set; }
        public virtual DbSet<ExpenseAccrualFTAttributes> ExpenseAccrualFTAttributes { get; set; }
        public virtual DbSet<ExpenseAccrualFTAttributesFilter> ExpenseAccrualFTAttributesFilter { get; set; }
        public virtual DbSet<ExpenseAttributes> ExpenseAttributes { get; set; }
        public virtual DbSet<ExpenseAttributesFilter> ExpenseAttributesFilter { get; set; }
        public virtual DbSet<ExpenseFilter> ExpenseFilter { get; set; }
        public virtual DbSet<ExpenseSlipATAttributes> ExpenseSlipATAttributes { get; set; }
        public virtual DbSet<ExpenseSlipATAttributesFilter> ExpenseSlipATAttributesFilter { get; set; }
        public virtual DbSet<ExpenseSlipFTAttributes> ExpenseSlipFTAttributes { get; set; }
        public virtual DbSet<ExpenseSlipFTAttributesFilter> ExpenseSlipFTAttributesFilter { get; set; }
        public virtual DbSet<ExportFileAttributes> ExportFileAttributes { get; set; }
        public virtual DbSet<ExportFileAttributesFilter> ExportFileAttributesFilter { get; set; }
        public virtual DbSet<FixedAssetAttributes> FixedAssetAttributes { get; set; }
        public virtual DbSet<FixedAssetAttributesFilter> FixedAssetAttributesFilter { get; set; }
        public virtual DbSet<FixedAssetFilter> FixedAssetFilter { get; set; }
        public virtual DbSet<GetWarehouseForManageReports> GetWarehouseForManageReports { get; set; }
        public virtual DbSet<GiftCardPaymentATAttributes> GiftCardPaymentATAttributes { get; set; }
        public virtual DbSet<GiftCardPaymentATAttributesFilter> GiftCardPaymentATAttributesFilter { get; set; }
        public virtual DbSet<GiftCardPaymentFTAttributes> GiftCardPaymentFTAttributes { get; set; }
        public virtual DbSet<GiftCardPaymentFTAttributesFilter> GiftCardPaymentFTAttributesFilter { get; set; }
        public virtual DbSet<GLAccAttributes> GLAccAttributes { get; set; }
        public virtual DbSet<GLAccAttributesFilter> GLAccAttributesFilter { get; set; }
        public virtual DbSet<GLAccFilter> GLAccFilter { get; set; }
        public virtual DbSet<ImportFileAttributes> ImportFileAttributes { get; set; }
        public virtual DbSet<ImportFileAttributesFilter> ImportFileAttributesFilter { get; set; }
        public virtual DbSet<InnerITAttributes> InnerITAttributes { get; set; }
        public virtual DbSet<InnerITAttributesFilter> InnerITAttributesFilter { get; set; }
        public virtual DbSet<InnerOrderITAttributes> InnerOrderITAttributes { get; set; }
        public virtual DbSet<InnerOrderITAttributesFilter> InnerOrderITAttributesFilter { get; set; }
        public virtual DbSet<InvoiceATAttributes> InvoiceATAttributes { get; set; }
        public virtual DbSet<InvoiceATAttributesFilter> InvoiceATAttributesFilter { get; set; }
        public virtual DbSet<InvoiceFTAttributes> InvoiceFTAttributes { get; set; }
        public virtual DbSet<InvoiceFTAttributesFilter> InvoiceFTAttributesFilter { get; set; }
        public virtual DbSet<InvoiceITAttributes> InvoiceITAttributes { get; set; }
        public virtual DbSet<InvoiceITAttributesFilter> InvoiceITAttributesFilter { get; set; }
        public virtual DbSet<ItemInventory> ItemInventory { get; set; }
        public virtual DbSet<ItemTransferNotApproved> ItemTransferNotApproved { get; set; }
        public virtual DbSet<JobCandidateAttributes> JobCandidateAttributes { get; set; }
        public virtual DbSet<JobCandidateAttributesFilter> JobCandidateAttributesFilter { get; set; }
        public virtual DbSet<JournalATAttributes> JournalATAttributes { get; set; }
        public virtual DbSet<JournalATAttributesFilter> JournalATAttributesFilter { get; set; }
        public virtual DbSet<JournalFTAttributes> JournalFTAttributes { get; set; }
        public virtual DbSet<JournalFTAttributesFilter> JournalFTAttributesFilter { get; set; }
        public virtual DbSet<LetterOfGuaranteeGivenAttributes> LetterOfGuaranteeGivenAttributes { get; set; }
        public virtual DbSet<LetterOfGuaranteeGivenAttributesFilter> LetterOfGuaranteeGivenAttributesFilter { get; set; }
        public virtual DbSet<LetterOfGuaranteeReceivedAttributes> LetterOfGuaranteeReceivedAttributes { get; set; }
        public virtual DbSet<LetterOfGuaranteeReceivedAttributesFilter> LetterOfGuaranteeReceivedAttributesFilter { get; set; }
        public virtual DbSet<LinkedProductFilter> LinkedProductFilter { get; set; }
        public virtual DbSet<MaterialAttributes> MaterialAttributes { get; set; }
        public virtual DbSet<MaterialAttributesFilter> MaterialAttributesFilter { get; set; }
        public virtual DbSet<MaterialFilter> MaterialFilter { get; set; }
        public virtual DbSet<MinumumWageAmounts> MinumumWageAmounts { get; set; }
        public virtual DbSet<NotesPayableAttributes> NotesPayableAttributes { get; set; }
        public virtual DbSet<NotesPayableAttributesFilter> NotesPayableAttributesFilter { get; set; }
        public virtual DbSet<NotesReceivableAttributes> NotesReceivableAttributes { get; set; }
        public virtual DbSet<NotesReceivableAttributesFilter> NotesReceivableAttributesFilter { get; set; }
        public virtual DbSet<OptInOptOutLastTrace> OptInOptOutLastTrace { get; set; }
        public virtual DbSet<OrderATAttributes> OrderATAttributes { get; set; }
        public virtual DbSet<OrderATAttributesFilter> OrderATAttributesFilter { get; set; }
        public virtual DbSet<OrderDeliverySummary> OrderDeliverySummary { get; set; }
        public virtual DbSet<OrderFTAttributes> OrderFTAttributes { get; set; }
        public virtual DbSet<OrderFTAttributesFilter> OrderFTAttributesFilter { get; set; }
        public virtual DbSet<OrderInstallments> OrderInstallments { get; set; }
        public virtual DbSet<OrderITAttributes> OrderITAttributes { get; set; }
        public virtual DbSet<OrderITAttributesFilter> OrderITAttributesFilter { get; set; }
        public virtual DbSet<OrderOTAttributes> OrderOTAttributes { get; set; }
        public virtual DbSet<OrderOTAttributesFilter> OrderOTAttributesFilter { get; set; }
        public virtual DbSet<OtherPaymentATAttributes> OtherPaymentATAttributes { get; set; }
        public virtual DbSet<OtherPaymentATAttributesFilter> OtherPaymentATAttributesFilter { get; set; }
        public virtual DbSet<OtherPaymentFTAttributes> OtherPaymentFTAttributes { get; set; }
        public virtual DbSet<OtherPaymentFTAttributesFilter> OtherPaymentFTAttributesFilter { get; set; }
        public virtual DbSet<PaymentATAttributes> PaymentATAttributes { get; set; }
        public virtual DbSet<PaymentATAttributesFilter> PaymentATAttributesFilter { get; set; }
        public virtual DbSet<PaymentFTAttributes> PaymentFTAttributes { get; set; }
        public virtual DbSet<PaymentFTAttributesFilter> PaymentFTAttributesFilter { get; set; }
        public virtual DbSet<PaymentPlanFilter> PaymentPlanFilter { get; set; }
        public virtual DbSet<PaymentProviderFilter> PaymentProviderFilter { get; set; }
        public virtual DbSet<PersonalDataConfirmationLastTrace> PersonalDataConfirmationLastTrace { get; set; }
        public virtual DbSet<PickingStates> PickingStates { get; set; }
        public virtual DbSet<PositionFilter> PositionFilter { get; set; }
        public virtual DbSet<PotentialCustomerAttributes> PotentialCustomerAttributes { get; set; }
        public virtual DbSet<PotentialCustomerAttributesFilter> PotentialCustomerAttributesFilter { get; set; }
        public virtual DbSet<ProductAttributes> ProductAttributes { get; set; }
        public virtual DbSet<ProductAttributesFilter> ProductAttributesFilter { get; set; }
        public virtual DbSet<ProductColorAttributes> ProductColorAttributes { get; set; }
        public virtual DbSet<ProductDataMatrixCodes> ProductDataMatrixCodes { get; set; }
        public virtual DbSet<ProductFilter> ProductFilter { get; set; }
        public virtual DbSet<ProductSalesLastPeriod> ProductSalesLastPeriod { get; set; }
        public virtual DbSet<ProposalATAttributes> ProposalATAttributes { get; set; }
        public virtual DbSet<ProposalATAttributesFilter> ProposalATAttributesFilter { get; set; }
        public virtual DbSet<ProposalFTAttributes> ProposalFTAttributes { get; set; }
        public virtual DbSet<ProposalFTAttributesFilter> ProposalFTAttributesFilter { get; set; }
        public virtual DbSet<ProposalITAttributes> ProposalITAttributes { get; set; }
        public virtual DbSet<ProposalITAttributesFilter> ProposalITAttributesFilter { get; set; }
        public virtual DbSet<PurchaseRequisitionATAttributes> PurchaseRequisitionATAttributes { get; set; }
        public virtual DbSet<PurchaseRequisitionATAttributesFilter> PurchaseRequisitionATAttributesFilter { get; set; }
        public virtual DbSet<PurchaseRequisitionProposalATAttributes> PurchaseRequisitionProposalATAttributes { get; set; }
        public virtual DbSet<PurchaseRequisitionProposalATAttributesFilter> PurchaseRequisitionProposalATAttributesFilter { get; set; }
        public virtual DbSet<RequisitionAttributes> RequisitionAttributes { get; set; }
        public virtual DbSet<RequisitionAttributesFilter> RequisitionAttributesFilter { get; set; }
        public virtual DbSet<ReserveStates> ReserveStates { get; set; }
        public virtual DbSet<RetailCustomerAttributes> RetailCustomerAttributes { get; set; }
        public virtual DbSet<RetailCustomerAttributesFilter> RetailCustomerAttributesFilter { get; set; }
        public virtual DbSet<RetailCustomerFilter> RetailCustomerFilter { get; set; }
        public virtual DbSet<RetailCustomerTransactions> RetailCustomerTransactions { get; set; }
        public virtual DbSet<RetailCustomerTransactionsNoOrderR> RetailCustomerTransactionsNoOrderR { get; set; }
        public virtual DbSet<RetailDebits> RetailDebits { get; set; }
        public virtual DbSet<RetailDebitsNoOrderR> RetailDebitsNoOrderR { get; set; }
        public virtual DbSet<RetailInstallments> RetailInstallments { get; set; }
        public virtual DbSet<RetailOrderDeposits> RetailOrderDeposits { get; set; }
        public virtual DbSet<RetailPayments> RetailPayments { get; set; }
        public virtual DbSet<RetailSales> RetailSales { get; set; }
        public virtual DbSet<RetailSalesNoOrderR> RetailSalesNoOrderR { get; set; }
        public virtual DbSet<ServiceAttributes> ServiceAttributes { get; set; }
        public virtual DbSet<ServiceAttributesFilter> ServiceAttributesFilter { get; set; }
        public virtual DbSet<ServiceFilter> ServiceFilter { get; set; }
        public virtual DbSet<ShipmentITAttributes> ShipmentITAttributes { get; set; }
        public virtual DbSet<ShipmentITAttributesFilter> ShipmentITAttributesFilter { get; set; }
        public virtual DbSet<StockITAttributes> StockITAttributes { get; set; }
        public virtual DbSet<StockITAttributesFilter> StockITAttributesFilter { get; set; }
        public virtual DbSet<StockWithCost> StockWithCost { get; set; }
        public virtual DbSet<StoreAttributes> StoreAttributes { get; set; }
        public virtual DbSet<StoreAttributesFilter> StoreAttributesFilter { get; set; }
        public virtual DbSet<StoreWarehouses> StoreWarehouses { get; set; }
        public virtual DbSet<SubCurrAccAttributes> SubCurrAccAttributes { get; set; }
        public virtual DbSet<SubCurrAccAttributesFilter> SubCurrAccAttributesFilter { get; set; }
        public virtual DbSet<SubVendorAttributes> SubVendorAttributes { get; set; }
        public virtual DbSet<TFRSAdjustment> TFRSAdjustment { get; set; }
        public virtual DbSet<TransactionsForUTSDeclaration> TransactionsForUTSDeclaration { get; set; }
        public virtual DbSet<TransferPlanATAttributes> TransferPlanATAttributes { get; set; }
        public virtual DbSet<TransferPlanATAttributesFilter> TransferPlanATAttributesFilter { get; set; }
        public virtual DbSet<TransferPlanData_Default> TransferPlanData_Default { get; set; }
        public virtual DbSet<TransferPlanData_DefT1> TransferPlanData_DefT1 { get; set; }
        public virtual DbSet<TransferPlanData_DefT2> TransferPlanData_DefT2 { get; set; }
        public virtual DbSet<TransferPlanData_DefT3> TransferPlanData_DefT3 { get; set; }
        public virtual DbSet<TransferPlanData_ITR> TransferPlanData_ITR { get; set; }
        public virtual DbSet<TransferPlanITAttributes> TransferPlanITAttributes { get; set; }
        public virtual DbSet<TransferPlanITAttributesFilter> TransferPlanITAttributesFilter { get; set; }
        public virtual DbSet<TransferPlanResultData> TransferPlanResultData { get; set; }
        public virtual DbSet<VendorAttributes> VendorAttributes { get; set; }
        public virtual DbSet<VendorAttributesFilter> VendorAttributesFilter { get; set; }
        public virtual DbSet<VendorFilter> VendorFilter { get; set; }
        public virtual DbSet<VendorSubCurrAccAttributes> VendorSubCurrAccAttributes { get; set; }
        public virtual DbSet<VendorSubCurrAccAttributesFilter> VendorSubCurrAccAttributesFilter { get; set; }
        public virtual DbSet<VirementATAttributes> VirementATAttributes { get; set; }
        public virtual DbSet<VirementATAttributesFilter> VirementATAttributesFilter { get; set; }
        public virtual DbSet<VirementFTAttributes> VirementFTAttributes { get; set; }
        public virtual DbSet<VirementFTAttributesFilter> VirementFTAttributesFilter { get; set; }
        public virtual DbSet<vw_AllOrderDetail> vw_AllOrderDetail { get; set; }
        public virtual DbSet<vw_InvoiceListWithAmount> vw_InvoiceListWithAmount { get; set; }
        public virtual DbSet<vw_RGN_CustomerList> vw_RGN_CustomerList { get; set; }
        public virtual DbSet<vw_RGN_FilterReserveList> vw_RGN_FilterReserveList { get; set; }
        public virtual DbSet<vw_RGN_GetOrderDetail> vw_RGN_GetOrderDetail { get; set; }
        public virtual DbSet<vw_RGN_GetOrderListFromSalesChannel> vw_RGN_GetOrderListFromSalesChannel { get; set; }
        public virtual DbSet<vw_RGN_GetOrderTotalProductDetail> vw_RGN_GetOrderTotalProductDetail { get; set; }
        public virtual DbSet<vw_RGN_GetProductList> vw_RGN_GetProductList { get; set; }
        public virtual DbSet<vw_RGN_ItemAttribute> vw_RGN_ItemAttribute { get; set; }
        public virtual DbSet<vw_RGN_ItemList> vw_RGN_ItemList { get; set; }
        public virtual DbSet<vw_RGN_LocationProductDetail> vw_RGN_LocationProductDetail { get; set; }
        public virtual DbSet<vw_RGN_OrderRefNumberList> vw_RGN_OrderRefNumberList { get; set; }
        public virtual DbSet<vw_RGN_PWA_CustomerBalance> vw_RGN_PWA_CustomerBalance { get; set; }
        public virtual DbSet<vw_RGN_PWB_BankAccountBalance> vw_RGN_PWB_BankAccountBalance { get; set; }
        public virtual DbSet<vw_RGN_PWB_BankAccountList> vw_RGN_PWB_BankAccountList { get; set; }
        public virtual DbSet<vw_RGN_PWB_BasePriceType> vw_RGN_PWB_BasePriceType { get; set; }
        public virtual DbSet<vw_RGN_PWB_CustomerBalance> vw_RGN_PWB_CustomerBalance { get; set; }
        public virtual DbSet<vw_RGN_PWB_CustomerList> vw_RGN_PWB_CustomerList { get; set; }
        public virtual DbSet<vw_RGN_PWB_ItemWarehouseStock> vw_RGN_PWB_ItemWarehouseStock { get; set; }
        public virtual DbSet<vw_RGN_PWB_ProductBasePriceList> vw_RGN_PWB_ProductBasePriceList { get; set; }
        public virtual DbSet<vw_RGN_PWB_ProductDetail> vw_RGN_PWB_ProductDetail { get; set; }
        public virtual DbSet<vw_RGN_PWB_SaleInvoiceList> vw_RGN_PWB_SaleInvoiceList { get; set; }
        public virtual DbSet<vw_RGN_PWB_StoreList> vw_RGN_PWB_StoreList { get; set; }
        public virtual DbSet<vw_RGN_WarehouseList> vw_RGN_WarehouseList { get; set; }
        public virtual DbSet<vw_RPlus_ATAttribute> vw_RPlus_ATAttribute { get; set; }
        public virtual DbSet<vw_RPlus_ATAttributeType> vw_RPlus_ATAttributeType { get; set; }
        public virtual DbSet<vw_RPlus_BarcodeList> vw_RPlus_BarcodeList { get; set; }
        public virtual DbSet<vw_RPlus_BarcodeType> vw_RPlus_BarcodeType { get; set; }
        public virtual DbSet<vw_RPlus_Currency> vw_RPlus_Currency { get; set; }
        public virtual DbSet<vw_RPlus_Customers> vw_RPlus_Customers { get; set; }
        public virtual DbSet<vw_RPlus_FindRemainingOrder> vw_RPlus_FindRemainingOrder { get; set; }
        public virtual DbSet<vw_RPlus_FindStoreShippingApproving> vw_RPlus_FindStoreShippingApproving { get; set; }
        public virtual DbSet<vw_RPlus_FindWarehouseTransferApproving> vw_RPlus_FindWarehouseTransferApproving { get; set; }
        public virtual DbSet<vw_RPlus_GetRemainingOrderBarcodeList> vw_RPlus_GetRemainingOrderBarcodeList { get; set; }
        public virtual DbSet<vw_RPlus_GetStoreShippingApprovingBarcodeList> vw_RPlus_GetStoreShippingApprovingBarcodeList { get; set; }
        public virtual DbSet<vw_RPlus_GetWarehouseTransferApprovingBarcodeList> vw_RPlus_GetWarehouseTransferApprovingBarcodeList { get; set; }
        public virtual DbSet<vw_RPlus_HierarchyLevelNames> vw_RPlus_HierarchyLevelNames { get; set; }
        public virtual DbSet<vw_RPlus_ITAttribute> vw_RPlus_ITAttribute { get; set; }
        public virtual DbSet<vw_RPlus_ITAttributeType> vw_RPlus_ITAttributeType { get; set; }
        public virtual DbSet<vw_RPlus_ItemAttributeTypeDesc> vw_RPlus_ItemAttributeTypeDesc { get; set; }
        public virtual DbSet<vw_RPlus_LotBarcodeQty> vw_RPlus_LotBarcodeQty { get; set; }
        public virtual DbSet<vw_RPlus_OfficeDetail> vw_RPlus_OfficeDetail { get; set; }
        public virtual DbSet<vw_RPlus_OrderPrintView> vw_RPlus_OrderPrintView { get; set; }
        public virtual DbSet<vw_RPlus_PriceGroupDetail> vw_RPlus_PriceGroupDetail { get; set; }
        public virtual DbSet<vw_RPlus_ProductDetail> vw_RPlus_ProductDetail { get; set; }
        public virtual DbSet<vw_RPlus_SerialNumber> vw_RPlus_SerialNumber { get; set; }
        public virtual DbSet<vw_RPlus_ShippingPrintView> vw_RPlus_ShippingPrintView { get; set; }
        public virtual DbSet<vw_RPlus_StoreDetail> vw_RPlus_StoreDetail { get; set; }
        public virtual DbSet<vw_RPlus_SubCurrAcc> vw_RPlus_SubCurrAcc { get; set; }
        public virtual DbSet<vw_RPlus_WarehouseDetail> vw_RPlus_WarehouseDetail { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ATAttribute> vw_RPlusAndroid_ATAttribute { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ATAttributeType> vw_RPlusAndroid_ATAttributeType { get; set; }
        public virtual DbSet<vw_RPlusAndroid_BarcodeList> vw_RPlusAndroid_BarcodeList { get; set; }
        public virtual DbSet<vw_RPlusAndroid_BarcodeType> vw_RPlusAndroid_BarcodeType { get; set; }
        public virtual DbSet<vw_RPlusAndroid_Currency> vw_RPlusAndroid_Currency { get; set; }
        public virtual DbSet<vw_RPlusAndroid_Customers> vw_RPlusAndroid_Customers { get; set; }
        public virtual DbSet<vw_RPlusAndroid_FindRemainingDispOrder> vw_RPlusAndroid_FindRemainingDispOrder { get; set; }
        public virtual DbSet<vw_RPlusAndroid_FindRemainingOrder> vw_RPlusAndroid_FindRemainingOrder { get; set; }
        public virtual DbSet<vw_RPlusAndroid_FindStoreShippingApproving> vw_RPlusAndroid_FindStoreShippingApproving { get; set; }
        public virtual DbSet<vw_RPlusAndroid_FindWarehouseTransferApproving> vw_RPlusAndroid_FindWarehouseTransferApproving { get; set; }
        public virtual DbSet<vw_RPlusAndroid_GetRemainingDispOrderBarcodeList> vw_RPlusAndroid_GetRemainingDispOrderBarcodeList { get; set; }
        public virtual DbSet<vw_RPlusAndroid_GetRemainingOrderBarcodeList> vw_RPlusAndroid_GetRemainingOrderBarcodeList { get; set; }
        public virtual DbSet<vw_RPlusAndroid_GetStoreShippingApprovingBarcodeList> vw_RPlusAndroid_GetStoreShippingApprovingBarcodeList { get; set; }
        public virtual DbSet<vw_RPlusAndroid_GetWarehouseTransferApprovingBarcodeList> vw_RPlusAndroid_GetWarehouseTransferApprovingBarcodeList { get; set; }
        public virtual DbSet<vw_RPlusAndroid_HierarchyLevelNames> vw_RPlusAndroid_HierarchyLevelNames { get; set; }
        public virtual DbSet<vw_RPlusAndroid_InvoiceSerialNumber> vw_RPlusAndroid_InvoiceSerialNumber { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ITAttribute> vw_RPlusAndroid_ITAttribute { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ITAttributeType> vw_RPlusAndroid_ITAttributeType { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ItemAttributeTypeDesc> vw_RPlusAndroid_ItemAttributeTypeDesc { get; set; }
        public virtual DbSet<vw_RPlusAndroid_LotBarcodeQty> vw_RPlusAndroid_LotBarcodeQty { get; set; }
        public virtual DbSet<vw_RPlusAndroid_OfficeDetail> vw_RPlusAndroid_OfficeDetail { get; set; }
        public virtual DbSet<vw_RPlusAndroid_OrderPrintView> vw_RPlusAndroid_OrderPrintView { get; set; }
        public virtual DbSet<vw_RPlusAndroid_PriceGroupDetail> vw_RPlusAndroid_PriceGroupDetail { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ProductDetail> vw_RPlusAndroid_ProductDetail { get; set; }
        public virtual DbSet<vw_RPlusAndroid_SalesPerson> vw_RPlusAndroid_SalesPerson { get; set; }
        public virtual DbSet<vw_RPlusAndroid_SerialNumber> vw_RPlusAndroid_SerialNumber { get; set; }
        public virtual DbSet<vw_RPlusAndroid_ShippingPrintView> vw_RPlusAndroid_ShippingPrintView { get; set; }
        public virtual DbSet<vw_RPlusAndroid_StoreDetail> vw_RPlusAndroid_StoreDetail { get; set; }
        public virtual DbSet<vw_RPlusAndroid_SubCurrAcc> vw_RPlusAndroid_SubCurrAcc { get; set; }
        public virtual DbSet<vw_RPlusAndroid_WarehouseDetail> vw_RPlusAndroid_WarehouseDetail { get; set; }
        public virtual DbSet<vw_Tamara_Customers> vw_Tamara_Customers { get; set; }
        public virtual DbSet<vw_TMR_ProductAtt02> vw_TMR_ProductAtt02 { get; set; }
        public virtual DbSet<vw_TMR_ProductAtt03> vw_TMR_ProductAtt03 { get; set; }
        public virtual DbSet<vw_TMR_ProductAtt09> vw_TMR_ProductAtt09 { get; set; }
        public virtual DbSet<vw_TMR_ProductAtt10> vw_TMR_ProductAtt10 { get; set; }
        public virtual DbSet<vw_TMR_ProductAtt17> vw_TMR_ProductAtt17 { get; set; }
        public virtual DbSet<AlinanSiparisler> AlinanSiparisler { get; set; }
        public virtual DbSet<AlinanTeklifler> AlinanTeklifler { get; set; }
        public virtual DbSet<AlisFiyatListesi> AlisFiyatListesi { get; set; }
        public virtual DbSet<ASNler> ASNler { get; set; }
        public virtual DbSet<BankaHareketleri> BankaHareketleri { get; set; }
        public virtual DbSet<CekSenetHareketleri> CekSenetHareketleri { get; set; }
        public virtual DbSet<DahiliStokHareketleri> DahiliStokHareketleri { get; set; }
        public virtual DbSet<DovizKurlari> DovizKurlari { get; set; }
        public virtual DbSet<Envanter> Envanter { get; set; }
        public virtual DbSet<Faturalar> Faturalar { get; set; }
        public virtual DbSet<FaturaTaksitleri> FaturaTaksitleri { get; set; }
        public virtual DbSet<Irsaliyeler> Irsaliyeler { get; set; }
        public virtual DbSet<KasaHareketleri> KasaHareketleri { get; set; }
        public virtual DbSet<KrediKartiHareketleri> KrediKartiHareketleri { get; set; }
        public virtual DbSet<Lokasyonlar> Lokasyonlar { get; set; }
        public virtual DbSet<MagazaDepolari> MagazaDepolari { get; set; }
        public virtual DbSet<MasrafSlipleri> MasrafSlipleri { get; set; }
        public virtual DbSet<MuhasebeFisleri> MuhasebeFisleri { get; set; }
        public virtual DbSet<MusteriHareketleri> MusteriHareketleri { get; set; }
        public virtual DbSet<Musteriler> Musteriler { get; set; }
        public virtual DbSet<Paketlenmisler> Paketlenmisler { get; set; }
        public virtual DbSet<PerakendeMusteriler> PerakendeMusteriler { get; set; }
        public virtual DbSet<Rezervasyonlar> Rezervasyonlar { get; set; }
        public virtual DbSet<SatisFiyatListesi> SatisFiyatListesi { get; set; }
        public virtual DbSet<SevkEmirleri> SevkEmirleri { get; set; }
        public virtual DbSet<SiparisTaksitleri> SiparisTaksitleri { get; set; }
        public virtual DbSet<StokGirisCikis> StokGirisCikis { get; set; }
        public virtual DbSet<TedarikciHareketleri> TedarikciHareketleri { get; set; }
        public virtual DbSet<TemelFiyatlar> TemelFiyatlar { get; set; }
        public virtual DbSet<UcretBordrolari> UcretBordrolari { get; set; }
        public virtual DbSet<Urunler> Urunler { get; set; }
        public virtual DbSet<VerilenSiparisler> VerilenSiparisler { get; set; }
        public virtual DbSet<VerilenTeklifler> VerilenTeklifler { get; set; }
        public virtual DbSet<VirmanHareketleri> VirmanHareketleri { get; set; }
    
        [DbFunction("V3", "Accountant")]
        public virtual IQueryable<Accountant_Result> Accountant(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Accountant_Result>("[V3].[Accountant](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AccountDetail")]
        public virtual IQueryable<AccountDetail_Result> AccountDetail(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AccountDetail_Result>("[V3].[AccountDetail](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AddressShareCompanyWebService")]
        public virtual IQueryable<AddressShareCompanyWebService_Result> AddressShareCompanyWebService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AddressShareCompanyWebService_Result>("[V3].[AddressShareCompanyWebService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AddressType")]
        public virtual IQueryable<AddressType_Result> AddressType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AddressType_Result>("[V3].[AddressType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AdjustCostMethod")]
        public virtual IQueryable<AdjustCostMethod_Result> AdjustCostMethod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AdjustCostMethod_Result>("[V3].[AdjustCostMethod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AirportIATA")]
        public virtual IQueryable<AirportIATA_Result> AirportIATA(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AirportIATA_Result>("[V3].[AirportIATA](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AllDates")]
        public virtual IQueryable<AllDates_Result> AllDates(string filter, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AllDates_Result>("[V3].[AllDates](@Filter, @StartDate, @EndDate)", filterParameter, startDateParameter, endDateParameter);
        }
    
        [DbFunction("V3", "AllocationRule")]
        public virtual IQueryable<AllocationRule_Result> AllocationRule(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AllocationRule_Result>("[V3].[AllocationRule](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AllocationSourceType")]
        public virtual IQueryable<AllocationSourceType_Result> AllocationSourceType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AllocationSourceType_Result>("[V3].[AllocationSourceType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AllocationTemplate")]
        public virtual IQueryable<AllocationTemplate_Result> AllocationTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AllocationTemplate_Result>("[V3].[AllocationTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "AmountRule")]
        public virtual IQueryable<AmountRule_Result> AmountRule(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<AmountRule_Result>("[V3].[AmountRule](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Application")]
        public virtual IQueryable<Application_Result> Application(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Application_Result>("[V3].[Application](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ATAttribute")]
        public virtual IQueryable<ATAttribute_Result> ATAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ATAttribute_Result>("[V3].[ATAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ATAttributeType")]
        public virtual IQueryable<ATAttributeType_Result> ATAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ATAttributeType_Result>("[V3].[ATAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BadDebtLetterType")]
        public virtual IQueryable<BadDebtLetterType_Result> BadDebtLetterType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BadDebtLetterType_Result>("[V3].[BadDebtLetterType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BadDebtReason")]
        public virtual IQueryable<BadDebtReason_Result> BadDebtReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BadDebtReason_Result>("[V3].[BadDebtReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BadDebtResult")]
        public virtual IQueryable<BadDebtResult_Result> BadDebtResult(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BadDebtResult_Result>("[V3].[BadDebtResult](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BadDebtTransType")]
        public virtual IQueryable<BadDebtTransType_Result> BadDebtTransType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BadDebtTransType_Result>("[V3].[BadDebtTransType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Bank")]
        public virtual IQueryable<Bank_Result> Bank(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Bank_Result>("[V3].[Bank](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankAccountAttributeDescriptions")]
        public virtual IQueryable<BankAccountAttributeDescriptions_Result> BankAccountAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankAccountAttributeDescriptions_Result>("[V3].[BankAccountAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankAccType")]
        public virtual IQueryable<BankAccType_Result> BankAccType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankAccType_Result>("[V3].[BankAccType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankAdditionalChargeType")]
        public virtual IQueryable<BankAdditionalChargeType_Result> BankAdditionalChargeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankAdditionalChargeType_Result>("[V3].[BankAdditionalChargeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankCardType")]
        public virtual IQueryable<BankCardType_Result> BankCardType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankCardType_Result>("[V3].[BankCardType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankCreditGuaranteeType")]
        public virtual IQueryable<BankCreditGuaranteeType_Result> BankCreditGuaranteeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankCreditGuaranteeType_Result>("[V3].[BankCreditGuaranteeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankCreditType")]
        public virtual IQueryable<BankCreditType_Result> BankCreditType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankCreditType_Result>("[V3].[BankCreditType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankOpType")]
        public virtual IQueryable<BankOpType_Result> BankOpType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankOpType_Result>("[V3].[BankOpType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankPOSImportType")]
        public virtual IQueryable<BankPOSImportType_Result> BankPOSImportType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankPOSImportType_Result>("[V3].[BankPOSImportType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BankTransType")]
        public virtual IQueryable<BankTransType_Result> BankTransType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BankTransType_Result>("[V3].[BankTransType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BarcodeType")]
        public virtual IQueryable<BarcodeType_Result> BarcodeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BarcodeType_Result>("[V3].[BarcodeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BaseMaterial")]
        public virtual IQueryable<BaseMaterial_Result> BaseMaterial(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BaseMaterial_Result>("[V3].[BaseMaterial](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BasePrice")]
        public virtual IQueryable<BasePrice_Result> BasePrice(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BasePrice_Result>("[V3].[BasePrice](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Batch")]
        public virtual IQueryable<Batch_Result> Batch(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Batch_Result>("[V3].[Batch](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BatchGroup")]
        public virtual IQueryable<BatchGroup_Result> BatchGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BatchGroup_Result>("[V3].[BatchGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BloodType")]
        public virtual IQueryable<BloodType_Result> BloodType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BloodType_Result>("[V3].[BloodType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOM")]
        public virtual IQueryable<BOM_Result> BOM(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOM_Result>("[V3].[BOM](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOMEntity")]
        public virtual IQueryable<BOMEntity_Result> BOMEntity(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOMEntity_Result>("[V3].[BOMEntity](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOMEntityLevel")]
        public virtual IQueryable<BOMEntityLevel_Result> BOMEntityLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOMEntityLevel_Result>("[V3].[BOMEntityLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOMTemplate")]
        public virtual IQueryable<BOMTemplate_Result> BOMTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOMTemplate_Result>("[V3].[BOMTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOMTemplateAttribute")]
        public virtual IQueryable<BOMTemplateAttribute_Result> BOMTemplateAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOMTemplateAttribute_Result>("[V3].[BOMTemplateAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOMTemplateAttributeDescriptions")]
        public virtual IQueryable<BOMTemplateAttributeDescriptions_Result> BOMTemplateAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOMTemplateAttributeDescriptions_Result>("[V3].[BOMTemplateAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BOMTemplateAttributeType")]
        public virtual IQueryable<BOMTemplateAttributeType_Result> BOMTemplateAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BOMTemplateAttributeType_Result>("[V3].[BOMTemplateAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Brand")]
        public virtual IQueryable<Brand_Result> Brand(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Brand_Result>("[V3].[Brand](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BrowseMethodType")]
        public virtual IQueryable<BrowseMethodType_Result> BrowseMethodType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BrowseMethodType_Result>("[V3].[BrowseMethodType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BudgetDetail")]
        public virtual IQueryable<BudgetDetail_Result> BudgetDetail(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BudgetDetail_Result>("[V3].[BudgetDetail](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BudgetType")]
        public virtual IQueryable<BudgetType_Result> BudgetType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BudgetType_Result>("[V3].[BudgetType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BulkMailServiceProvider")]
        public virtual IQueryable<BulkMailServiceProvider_Result> BulkMailServiceProvider(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BulkMailServiceProvider_Result>("[V3].[BulkMailServiceProvider](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "BusinessGroup")]
        public virtual IQueryable<BusinessGroup_Result> BusinessGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<BusinessGroup_Result>("[V3].[BusinessGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CareWarning")]
        public virtual IQueryable<CareWarning_Result> CareWarning(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CareWarning_Result>("[V3].[CareWarning](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CareWarningTemplate")]
        public virtual IQueryable<CareWarningTemplate_Result> CareWarningTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CareWarningTemplate_Result>("[V3].[CareWarningTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CashAccountAttributeDescriptions")]
        public virtual IQueryable<CashAccountAttributeDescriptions_Result> CashAccountAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CashAccountAttributeDescriptions_Result>("[V3].[CashAccountAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CashTransType")]
        public virtual IQueryable<CashTransType_Result> CashTransType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CashTransType_Result>("[V3].[CashTransType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChannelTemplate")]
        public virtual IQueryable<ChannelTemplate_Result> ChannelTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChannelTemplate_Result>("[V3].[ChannelTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChannelType")]
        public virtual IQueryable<ChannelType_Result> ChannelType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChannelType_Result>("[V3].[ChannelType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CheckOutReason")]
        public virtual IQueryable<CheckOutReason_Result> CheckOutReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CheckOutReason_Result>("[V3].[CheckOutReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Cheque")]
        public virtual IQueryable<Cheque_Result> Cheque(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Cheque_Result>("[V3].[Cheque](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeAttribute")]
        public virtual IQueryable<ChequeAttribute_Result> ChequeAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeAttribute_Result>("[V3].[ChequeAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeAttributeType")]
        public virtual IQueryable<ChequeAttributeType_Result> ChequeAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeAttributeType_Result>("[V3].[ChequeAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeDenyReason")]
        public virtual IQueryable<ChequeDenyReason_Result> ChequeDenyReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeDenyReason_Result>("[V3].[ChequeDenyReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeReceivedAttributeDescriptions")]
        public virtual IQueryable<ChequeReceivedAttributeDescriptions_Result> ChequeReceivedAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeReceivedAttributeDescriptions_Result>("[V3].[ChequeReceivedAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeRollAverageDueDate")]
        public virtual IQueryable<ChequeRollAverageDueDate_Result> ChequeRollAverageDueDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeRollAverageDueDate_Result>("[V3].[ChequeRollAverageDueDate]()");
        }
    
        [DbFunction("V3", "ChequesGivenAttributeDescriptions")]
        public virtual IQueryable<ChequesGivenAttributeDescriptions_Result> ChequesGivenAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequesGivenAttributeDescriptions_Result>("[V3].[ChequesGivenAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeTransType")]
        public virtual IQueryable<ChequeTransType_Result> ChequeTransType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeTransType_Result>("[V3].[ChequeTransType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ChequeType")]
        public virtual IQueryable<ChequeType_Result> ChequeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChequeType_Result>("[V3].[ChequeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "City")]
        public virtual IQueryable<City_Result> City(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<City_Result>("[V3].[City](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CoatingType")]
        public virtual IQueryable<CoatingType_Result> CoatingType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CoatingType_Result>("[V3].[CoatingType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Collection")]
        public virtual IQueryable<Collection_Result> Collection(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Collection_Result>("[V3].[Collection](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Color")]
        public virtual IQueryable<Color_Result> Color(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Color_Result>("[V3].[Color](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorCatalog")]
        public virtual IQueryable<ColorCatalog_Result> ColorCatalog(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorCatalog_Result>("[V3].[ColorCatalog](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorGroup")]
        public virtual IQueryable<ColorGroup_Result> ColorGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorGroup_Result>("[V3].[ColorGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorTheme")]
        public virtual IQueryable<ColorTheme_Result> ColorTheme(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorTheme_Result>("[V3].[ColorTheme](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorThemeAttribute")]
        public virtual IQueryable<ColorThemeAttribute_Result> ColorThemeAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorThemeAttribute_Result>("[V3].[ColorThemeAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorThemeAttributeDescriptions")]
        public virtual IQueryable<ColorThemeAttributeDescriptions_Result> ColorThemeAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorThemeAttributeDescriptions_Result>("[V3].[ColorThemeAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorThemeAttributeType")]
        public virtual IQueryable<ColorThemeAttributeType_Result> ColorThemeAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorThemeAttributeType_Result>("[V3].[ColorThemeAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ColorType")]
        public virtual IQueryable<ColorType_Result> ColorType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ColorType_Result>("[V3].[ColorType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CommercialRole")]
        public virtual IQueryable<CommercialRole_Result> CommercialRole(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CommercialRole_Result>("[V3].[CommercialRole](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CommunicationKind")]
        public virtual IQueryable<CommunicationKind_Result> CommunicationKind(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CommunicationKind_Result>("[V3].[CommunicationKind](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CommunicationType")]
        public virtual IQueryable<CommunicationType_Result> CommunicationType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CommunicationType_Result>("[V3].[CommunicationType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CompanyBrand")]
        public virtual IQueryable<CompanyBrand_Result> CompanyBrand(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CompanyBrand_Result>("[V3].[CompanyBrand](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CompanyCreditCard")]
        public virtual IQueryable<CompanyCreditCard_Result> CompanyCreditCard(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CompanyCreditCard_Result>("[V3].[CompanyCreditCard](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CompanyPriceGroup")]
        public virtual IQueryable<CompanyPriceGroup_Result> CompanyPriceGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CompanyPriceGroup_Result>("[V3].[CompanyPriceGroup]()");
        }
    
        [DbFunction("V3", "ConditionType")]
        public virtual IQueryable<ConditionType_Result> ConditionType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConditionType_Result>("[V3].[ConditionType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ConfirmationFormStatus")]
        public virtual IQueryable<ConfirmationFormStatus_Result> ConfirmationFormStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConfirmationFormStatus_Result>("[V3].[ConfirmationFormStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ConfirmationFormType")]
        public virtual IQueryable<ConfirmationFormType_Result> ConfirmationFormType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConfirmationFormType_Result>("[V3].[ConfirmationFormType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ConfirmationReason")]
        public virtual IQueryable<ConfirmationReason_Result> ConfirmationReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConfirmationReason_Result>("[V3].[ConfirmationReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ConfirmationRuleType")]
        public virtual IQueryable<ConfirmationRuleType_Result> ConfirmationRuleType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConfirmationRuleType_Result>("[V3].[ConfirmationRuleType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ConfirmationStatus")]
        public virtual IQueryable<ConfirmationStatus_Result> ConfirmationStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConfirmationStatus_Result>("[V3].[ConfirmationStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ConfirmationType")]
        public virtual IQueryable<ConfirmationType_Result> ConfirmationType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ConfirmationType_Result>("[V3].[ConfirmationType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ContactType")]
        public virtual IQueryable<ContactType_Result> ContactType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ContactType_Result>("[V3].[ContactType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ContainerType")]
        public virtual IQueryable<ContainerType_Result> ContainerType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ContainerType_Result>("[V3].[ContainerType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ContractContent")]
        public virtual IQueryable<ContractContent_Result> ContractContent(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ContractContent_Result>("[V3].[ContractContent](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ContractStatus")]
        public virtual IQueryable<ContractStatus_Result> ContractStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ContractStatus_Result>("[V3].[ContractStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ContractType")]
        public virtual IQueryable<ContractType_Result> ContractType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ContractType_Result>("[V3].[ContractType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostCenter")]
        public virtual IQueryable<CostCenter_Result> CostCenter(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostCenter_Result>("[V3].[CostCenter](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostCenterAttribute")]
        public virtual IQueryable<CostCenterAttribute_Result> CostCenterAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostCenterAttribute_Result>("[V3].[CostCenterAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostCenterAttributeDescriptions")]
        public virtual IQueryable<CostCenterAttributeDescriptions_Result> CostCenterAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostCenterAttributeDescriptions_Result>("[V3].[CostCenterAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostCenterAttributeType")]
        public virtual IQueryable<CostCenterAttributeType_Result> CostCenterAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostCenterAttributeType_Result>("[V3].[CostCenterAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostingLevel")]
        public virtual IQueryable<CostingLevel_Result> CostingLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostingLevel_Result>("[V3].[CostingLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostingMethod")]
        public virtual IQueryable<CostingMethod_Result> CostingMethod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostingMethod_Result>("[V3].[CostingMethod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostingVariantLevel")]
        public virtual IQueryable<CostingVariantLevel_Result> CostingVariantLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostingVariantLevel_Result>("[V3].[CostingVariantLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostOfGoodsSoldPeriod")]
        public virtual IQueryable<CostOfGoodsSoldPeriod_Result> CostOfGoodsSoldPeriod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostOfGoodsSoldPeriod_Result>("[V3].[CostOfGoodsSoldPeriod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CostOfGoodsSoldTransactions")]
        public virtual IQueryable<CostOfGoodsSoldTransactions_Result> CostOfGoodsSoldTransactions(string costOfGoodsSoldPeriodCode, Nullable<byte> itemTypeCode, string itemCode, string colorCode, string itemDim1Code, string itemDim2Code, string itemDim3Code, Nullable<decimal> companyCode, string officeCode, string officeCOGSGrCode, string langCode)
        {
            var costOfGoodsSoldPeriodCodeParameter = costOfGoodsSoldPeriodCode != null ?
                new ObjectParameter("CostOfGoodsSoldPeriodCode", costOfGoodsSoldPeriodCode) :
                new ObjectParameter("CostOfGoodsSoldPeriodCode", typeof(string));
    
            var itemTypeCodeParameter = itemTypeCode.HasValue ?
                new ObjectParameter("ItemTypeCode", itemTypeCode) :
                new ObjectParameter("ItemTypeCode", typeof(byte));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var colorCodeParameter = colorCode != null ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(string));
    
            var itemDim1CodeParameter = itemDim1Code != null ?
                new ObjectParameter("ItemDim1Code", itemDim1Code) :
                new ObjectParameter("ItemDim1Code", typeof(string));
    
            var itemDim2CodeParameter = itemDim2Code != null ?
                new ObjectParameter("ItemDim2Code", itemDim2Code) :
                new ObjectParameter("ItemDim2Code", typeof(string));
    
            var itemDim3CodeParameter = itemDim3Code != null ?
                new ObjectParameter("ItemDim3Code", itemDim3Code) :
                new ObjectParameter("ItemDim3Code", typeof(string));
    
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            var officeCodeParameter = officeCode != null ?
                new ObjectParameter("OfficeCode", officeCode) :
                new ObjectParameter("OfficeCode", typeof(string));
    
            var officeCOGSGrCodeParameter = officeCOGSGrCode != null ?
                new ObjectParameter("OfficeCOGSGrCode", officeCOGSGrCode) :
                new ObjectParameter("OfficeCOGSGrCode", typeof(string));
    
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CostOfGoodsSoldTransactions_Result>("[V3].[CostOfGoodsSoldTransactions](@CostOfGoodsSoldPeriodCode, @ItemTypeCode, @ItemCode, @ColorCode, @ItemDim1Code, @ItemDim2Code, @ItemDim3Code, @CompanyCode, @OfficeCode, @OfficeCOGSGrCode, @LangCode)", costOfGoodsSoldPeriodCodeParameter, itemTypeCodeParameter, itemCodeParameter, colorCodeParameter, itemDim1CodeParameter, itemDim2CodeParameter, itemDim3CodeParameter, companyCodeParameter, officeCodeParameter, officeCOGSGrCodeParameter, langCodeParameter);
        }
    
        [DbFunction("V3", "CountNumbers")]
        public virtual IQueryable<CountNumbers_Result> CountNumbers(Nullable<int> lastNumber)
        {
            var lastNumberParameter = lastNumber.HasValue ?
                new ObjectParameter("LastNumber", lastNumber) :
                new ObjectParameter("LastNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CountNumbers_Result>("[V3].[CountNumbers](@LastNumber)", lastNumberParameter);
        }
    
        [DbFunction("V3", "Country")]
        public virtual IQueryable<Country_Result> Country(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Country_Result>("[V3].[Country](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CreditCardPaymentType")]
        public virtual IQueryable<CreditCardPaymentType_Result> CreditCardPaymentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CreditCardPaymentType_Result>("[V3].[CreditCardPaymentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CreditCardType")]
        public virtual IQueryable<CreditCardType_Result> CreditCardType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CreditCardType_Result>("[V3].[CreditCardType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CreditType")]
        public virtual IQueryable<CreditType_Result> CreditType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CreditType_Result>("[V3].[CreditType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAcc")]
        public virtual IQueryable<CurrAcc_Result> CurrAcc(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAcc_Result>("[V3].[CurrAcc](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccAttribute")]
        public virtual IQueryable<CurrAccAttribute_Result> CurrAccAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAttribute_Result>("[V3].[CurrAccAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccAttributeType")]
        public virtual IQueryable<CurrAccAttributeType_Result> CurrAccAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAttributeType_Result>("[V3].[CurrAccAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccAverageDueDate")]
        public virtual IQueryable<CurrAccAverageDueDate_Result> CurrAccAverageDueDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAverageDueDate_Result>("[V3].[CurrAccAverageDueDate]()");
        }
    
        [DbFunction("V3", "CurrAccAverageDueDateAllTransactions")]
        public virtual IQueryable<CurrAccAverageDueDateAllTransactions_Result> CurrAccAverageDueDateAllTransactions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAverageDueDateAllTransactions_Result>("[V3].[CurrAccAverageDueDateAllTransactions]()");
        }
    
        [DbFunction("V3", "CurrAccAverageDueDateAllTransactionsWithFilter")]
        public virtual IQueryable<CurrAccAverageDueDateAllTransactionsWithFilter_Result> CurrAccAverageDueDateAllTransactionsWithFilter(Nullable<System.DateTime> balanceDate)
        {
            var balanceDateParameter = balanceDate.HasValue ?
                new ObjectParameter("BalanceDate", balanceDate) :
                new ObjectParameter("BalanceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAverageDueDateAllTransactionsWithFilter_Result>("[V3].[CurrAccAverageDueDateAllTransactionsWithFilter](@BalanceDate)", balanceDateParameter);
        }
    
        [DbFunction("V3", "CurrAccAverageDueDateByBalanceDate")]
        public virtual IQueryable<CurrAccAverageDueDateByBalanceDate_Result> CurrAccAverageDueDateByBalanceDate(Nullable<System.DateTime> balanceDate)
        {
            var balanceDateParameter = balanceDate.HasValue ?
                new ObjectParameter("BalanceDate", balanceDate) :
                new ObjectParameter("BalanceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAverageDueDateByBalanceDate_Result>("[V3].[CurrAccAverageDueDateByBalanceDate](@BalanceDate)", balanceDateParameter);
        }
    
        [DbFunction("V3", "CurrAccAverageDueDateWithDateFilter")]
        public virtual IQueryable<CurrAccAverageDueDateWithDateFilter_Result> CurrAccAverageDueDateWithDateFilter(Nullable<System.DateTime> balanceDate)
        {
            var balanceDateParameter = balanceDate.HasValue ?
                new ObjectParameter("BalanceDate", balanceDate) :
                new ObjectParameter("BalanceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccAverageDueDateWithDateFilter_Result>("[V3].[CurrAccAverageDueDateWithDateFilter](@BalanceDate)", balanceDateParameter);
        }
    
        [DbFunction("V3", "CurrAccBooks")]
        public virtual IQueryable<CurrAccBooks_Result> CurrAccBooks(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccBooks_Result>("[V3].[CurrAccBooks](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccCommunication")]
        public virtual IQueryable<CurrAccCommunication_Result> CurrAccCommunication(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccCommunication_Result>("[V3].[CurrAccCommunication](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccContact")]
        public virtual IQueryable<CurrAccContact_Result> CurrAccContact(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccContact_Result>("[V3].[CurrAccContact](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccCreditsForOneRetailCustomer")]
        public virtual IQueryable<CurrAccCreditsForOneRetailCustomer_Result> CurrAccCreditsForOneRetailCustomer(Nullable<byte> currAccTypeCode, string currAccCode)
        {
            var currAccTypeCodeParameter = currAccTypeCode.HasValue ?
                new ObjectParameter("CurrAccTypeCode", currAccTypeCode) :
                new ObjectParameter("CurrAccTypeCode", typeof(byte));
    
            var currAccCodeParameter = currAccCode != null ?
                new ObjectParameter("CurrAccCode", currAccCode) :
                new ObjectParameter("CurrAccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccCreditsForOneRetailCustomer_Result>("[V3].[CurrAccCreditsForOneRetailCustomer](@CurrAccTypeCode, @CurrAccCode)", currAccTypeCodeParameter, currAccCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccDebitsForOneCurrAcc")]
        public virtual IQueryable<CurrAccDebitsForOneCurrAcc_Result> CurrAccDebitsForOneCurrAcc(Nullable<byte> currAccTypeCode, string currAccCode)
        {
            var currAccTypeCodeParameter = currAccTypeCode.HasValue ?
                new ObjectParameter("CurrAccTypeCode", currAccTypeCode) :
                new ObjectParameter("CurrAccTypeCode", typeof(byte));
    
            var currAccCodeParameter = currAccCode != null ?
                new ObjectParameter("CurrAccCode", currAccCode) :
                new ObjectParameter("CurrAccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccDebitsForOneCurrAcc_Result>("[V3].[CurrAccDebitsForOneCurrAcc](@CurrAccTypeCode, @CurrAccCode)", currAccTypeCodeParameter, currAccCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccDebitsForOneCurrAccByDocCurrency")]
        public virtual IQueryable<CurrAccDebitsForOneCurrAccByDocCurrency_Result> CurrAccDebitsForOneCurrAccByDocCurrency(Nullable<byte> currAccTypeCode, string currAccCode)
        {
            var currAccTypeCodeParameter = currAccTypeCode.HasValue ?
                new ObjectParameter("CurrAccTypeCode", currAccTypeCode) :
                new ObjectParameter("CurrAccTypeCode", typeof(byte));
    
            var currAccCodeParameter = currAccCode != null ?
                new ObjectParameter("CurrAccCode", currAccCode) :
                new ObjectParameter("CurrAccCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccDebitsForOneCurrAccByDocCurrency_Result>("[V3].[CurrAccDebitsForOneCurrAccByDocCurrency](@CurrAccTypeCode, @CurrAccCode)", currAccTypeCodeParameter, currAccCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccList")]
        public virtual IQueryable<CurrAccList_Result> CurrAccList(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccList_Result>("[V3].[CurrAccList](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccLotGr")]
        public virtual IQueryable<CurrAccLotGr_Result> CurrAccLotGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccLotGr_Result>("[V3].[CurrAccLotGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccPostalAddress")]
        public virtual IQueryable<CurrAccPostalAddress_Result> CurrAccPostalAddress(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccPostalAddress_Result>("[V3].[CurrAccPostalAddress](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CurrAccType")]
        public virtual IQueryable<CurrAccType_Result> CurrAccType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CurrAccType_Result>("[V3].[CurrAccType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Currency")]
        public virtual IQueryable<Currency_Result> Currency(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Currency_Result>("[V3].[Currency](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerAlertColor")]
        public virtual IQueryable<CustomerAlertColor_Result> CustomerAlertColor(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerAlertColor_Result>("[V3].[CustomerAlertColor](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerAttributeDescriptions")]
        public virtual IQueryable<CustomerAttributeDescriptions_Result> CustomerAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerAttributeDescriptions_Result>("[V3].[CustomerAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerCompanyBrandAttribute")]
        public virtual IQueryable<CustomerCompanyBrandAttribute_Result> CustomerCompanyBrandAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerCompanyBrandAttribute_Result>("[V3].[CustomerCompanyBrandAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerCompanyBrandAttributeType")]
        public virtual IQueryable<CustomerCompanyBrandAttributeType_Result> CustomerCompanyBrandAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerCompanyBrandAttributeType_Result>("[V3].[CustomerCompanyBrandAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerConversationResult")]
        public virtual IQueryable<CustomerConversationResult_Result> CustomerConversationResult(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerConversationResult_Result>("[V3].[CustomerConversationResult](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerConversationSubject")]
        public virtual IQueryable<CustomerConversationSubject_Result> CustomerConversationSubject(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerConversationSubject_Result>("[V3].[CustomerConversationSubject](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerConversationSubjectDetail")]
        public virtual IQueryable<CustomerConversationSubjectDetail_Result> CustomerConversationSubjectDetail(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerConversationSubjectDetail_Result>("[V3].[CustomerConversationSubjectDetail](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerConversationSubtitle")]
        public virtual IQueryable<CustomerConversationSubtitle_Result> CustomerConversationSubtitle(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerConversationSubtitle_Result>("[V3].[CustomerConversationSubtitle](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerCRMGroup")]
        public virtual IQueryable<CustomerCRMGroup_Result> CustomerCRMGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerCRMGroup_Result>("[V3].[CustomerCRMGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerDiscountGr")]
        public virtual IQueryable<CustomerDiscountGr_Result> CustomerDiscountGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerDiscountGr_Result>("[V3].[CustomerDiscountGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerDiscountPoints")]
        public virtual IQueryable<CustomerDiscountPoints_Result> CustomerDiscountPoints(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerDiscountPoints_Result>("[V3].[CustomerDiscountPoints](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerMarkupGr")]
        public virtual IQueryable<CustomerMarkupGr_Result> CustomerMarkupGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerMarkupGr_Result>("[V3].[CustomerMarkupGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerPaymentPlanGr")]
        public virtual IQueryable<CustomerPaymentPlanGr_Result> CustomerPaymentPlanGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerPaymentPlanGr_Result>("[V3].[CustomerPaymentPlanGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerShoppingHabit")]
        public virtual IQueryable<CustomerShoppingHabit_Result> CustomerShoppingHabit(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerShoppingHabit_Result>("[V3].[CustomerShoppingHabit](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerShoppingLevel")]
        public virtual IQueryable<CustomerShoppingLevel_Result> CustomerShoppingLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerShoppingLevel_Result>("[V3].[CustomerShoppingLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerSubCurrAccAttributeDescriptions")]
        public virtual IQueryable<CustomerSubCurrAccAttributeDescriptions_Result> CustomerSubCurrAccAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerSubCurrAccAttributeDescriptions_Result>("[V3].[CustomerSubCurrAccAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomerType")]
        public virtual IQueryable<CustomerType_Result> CustomerType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomerType_Result>("[V3].[CustomerType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomProcessGroup")]
        public virtual IQueryable<CustomProcessGroup_Result> CustomProcessGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomProcessGroup_Result>("[V3].[CustomProcessGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomsCompany")]
        public virtual IQueryable<CustomsCompany_Result> CustomsCompany(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomsCompany_Result>("[V3].[CustomsCompany](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomsOffices")]
        public virtual IQueryable<CustomsOffices_Result> CustomsOffices(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomsOffices_Result>("[V3].[CustomsOffices](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomsProductGroup")]
        public virtual IQueryable<CustomsProductGroup_Result> CustomsProductGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomsProductGroup_Result>("[V3].[CustomsProductGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "CustomsTariffNumber")]
        public virtual IQueryable<CustomsTariffNumber_Result> CustomsTariffNumber(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CustomsTariffNumber_Result>("[V3].[CustomsTariffNumber](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DataLanguage")]
        public virtual IQueryable<DataLanguage_Result> DataLanguage(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DataLanguage_Result>("[V3].[DataLanguage](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DataTransferCompany")]
        public virtual IQueryable<DataTransferCompany_Result> DataTransferCompany(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DataTransferCompany_Result>("[V3].[DataTransferCompany](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DatawarehouseProcessControl")]
        public virtual IQueryable<DatawarehouseProcessControl_Result> DatawarehouseProcessControl(string parentName)
        {
            var parentNameParameter = parentName != null ?
                new ObjectParameter("ParentName", parentName) :
                new ObjectParameter("ParentName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DatawarehouseProcessControl_Result>("[V3].[DatawarehouseProcessControl](@ParentName)", parentNameParameter);
        }
    
        [DbFunction("V3", "Day")]
        public virtual IQueryable<Day_Result> Day(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Day_Result>("[V3].[Day](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DebitReason")]
        public virtual IQueryable<DebitReason_Result> DebitReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DebitReason_Result>("[V3].[DebitReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DebitType")]
        public virtual IQueryable<DebitType_Result> DebitType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DebitType_Result>("[V3].[DebitType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DebtStatusType")]
        public virtual IQueryable<DebtStatusType_Result> DebtStatusType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DebtStatusType_Result>("[V3].[DebtStatusType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Declaration")]
        public virtual IQueryable<Declaration_Result> Declaration(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Declaration_Result>("[V3].[Declaration](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DeclarationCapacity")]
        public virtual IQueryable<DeclarationCapacity_Result> DeclarationCapacity(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DeclarationCapacity_Result>("[V3].[DeclarationCapacity](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DeclarationType")]
        public virtual IQueryable<DeclarationType_Result> DeclarationType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DeclarationType_Result>("[V3].[DeclarationType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Deduction")]
        public virtual IQueryable<Deduction_Result> Deduction(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Deduction_Result>("[V3].[Deduction](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DeductionsMatrix")]
        public virtual IQueryable<DeductionsMatrix_Result> DeductionsMatrix(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DeductionsMatrix_Result>("[V3].[DeductionsMatrix](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DelimetedStringToTable")]
        public virtual IQueryable<DelimetedStringToTable_Result> DelimetedStringToTable(string delimetedString, string delimiter)
        {
            var delimetedStringParameter = delimetedString != null ?
                new ObjectParameter("DelimetedString", delimetedString) :
                new ObjectParameter("DelimetedString", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DelimetedStringToTable_Result>("[V3].[DelimetedStringToTable](@DelimetedString, @Delimiter)", delimetedStringParameter, delimiterParameter);
        }
    
        [DbFunction("V3", "DeliveryCompany")]
        public virtual IQueryable<DeliveryCompany_Result> DeliveryCompany(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DeliveryCompany_Result>("[V3].[DeliveryCompany](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DepreciationMethod")]
        public virtual IQueryable<DepreciationMethod_Result> DepreciationMethod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DepreciationMethod_Result>("[V3].[DepreciationMethod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Device")]
        public virtual IQueryable<Device_Result> Device(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Device_Result>("[V3].[Device](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DeviceType")]
        public virtual IQueryable<DeviceType_Result> DeviceType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DeviceType_Result>("[V3].[DeviceType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Diagnostic")]
        public virtual IQueryable<Diagnostic_Result> Diagnostic(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Diagnostic_Result>("[V3].[Diagnostic](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DigitalMarketingService")]
        public virtual IQueryable<DigitalMarketingService_Result> DigitalMarketingService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DigitalMarketingService_Result>("[V3].[DigitalMarketingService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountLevelOfUse")]
        public virtual IQueryable<DiscountLevelOfUse_Result> DiscountLevelOfUse(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountLevelOfUse_Result>("[V3].[DiscountLevelOfUse](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOffer")]
        public virtual IQueryable<DiscountOffer_Result> DiscountOffer(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOffer_Result>("[V3].[DiscountOffer](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferApply")]
        public virtual IQueryable<DiscountOfferApply_Result> DiscountOfferApply(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferApply_Result>("[V3].[DiscountOfferApply](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferAttribute")]
        public virtual IQueryable<DiscountOfferAttribute_Result> DiscountOfferAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferAttribute_Result>("[V3].[DiscountOfferAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferAttributeDescriptions")]
        public virtual IQueryable<DiscountOfferAttributeDescriptions_Result> DiscountOfferAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferAttributeDescriptions_Result>("[V3].[DiscountOfferAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferAttributeType")]
        public virtual IQueryable<DiscountOfferAttributeType_Result> DiscountOfferAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferAttributeType_Result>("[V3].[DiscountOfferAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferMethod")]
        public virtual IQueryable<DiscountOfferMethod_Result> DiscountOfferMethod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferMethod_Result>("[V3].[DiscountOfferMethod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferStage")]
        public virtual IQueryable<DiscountOfferStage_Result> DiscountOfferStage(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferStage_Result>("[V3].[DiscountOfferStage](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountOfferType")]
        public virtual IQueryable<DiscountOfferType_Result> DiscountOfferType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountOfferType_Result>("[V3].[DiscountOfferType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountPoints")]
        public virtual IQueryable<DiscountPoints_Result> DiscountPoints()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountPoints_Result>("[V3].[DiscountPoints]()");
        }
    
        [DbFunction("V3", "DiscountPointType")]
        public virtual IQueryable<DiscountPointType_Result> DiscountPointType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountPointType_Result>("[V3].[DiscountPointType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountReason")]
        public virtual IQueryable<DiscountReason_Result> DiscountReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountReason_Result>("[V3].[DiscountReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountSubReason")]
        public virtual IQueryable<DiscountSubReason_Result> DiscountSubReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountSubReason_Result>("[V3].[DiscountSubReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountType")]
        public virtual IQueryable<DiscountType_Result> DiscountType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountType_Result>("[V3].[DiscountType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountVoucherBase")]
        public virtual IQueryable<DiscountVoucherBase_Result> DiscountVoucherBase(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountVoucherBase_Result>("[V3].[DiscountVoucherBase](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountVouchers")]
        public virtual IQueryable<DiscountVouchers_Result> DiscountVouchers(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountVouchers_Result>("[V3].[DiscountVouchers](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DiscountVoucherType")]
        public virtual IQueryable<DiscountVoucherType_Result> DiscountVoucherType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DiscountVoucherType_Result>("[V3].[DiscountVoucherType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DispOrderType")]
        public virtual IQueryable<DispOrderType_Result> DispOrderType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DispOrderType_Result>("[V3].[DispOrderType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "District")]
        public virtual IQueryable<District_Result> District(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<District_Result>("[V3].[District](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DocumentType")]
        public virtual IQueryable<DocumentType_Result> DocumentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DocumentType_Result>("[V3].[DocumentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DOV")]
        public virtual IQueryable<DOV_Result> DOV(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DOV_Result>("[V3].[DOV](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "DueDateFormula")]
        public virtual IQueryable<DueDateFormula_Result> DueDateFormula(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DueDateFormula_Result>("[V3].[DueDateFormula](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EArchiveWebService")]
        public virtual IQueryable<EArchiveWebService_Result> EArchiveWebService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EArchiveWebService_Result>("[V3].[EArchiveWebService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Earnings")]
        public virtual IQueryable<Earnings_Result> Earnings(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Earnings_Result>("[V3].[Earnings](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EarningsMatrix")]
        public virtual IQueryable<EarningsMatrix_Result> EarningsMatrix(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EarningsMatrix_Result>("[V3].[EarningsMatrix](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EasyStartupSteps")]
        public virtual IQueryable<EasyStartupSteps_Result> EasyStartupSteps(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EasyStartupSteps_Result>("[V3].[EasyStartupSteps](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EditMask")]
        public virtual IQueryable<EditMask_Result> EditMask(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EditMask_Result>("[V3].[EditMask](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EducationStatus")]
        public virtual IQueryable<EducationStatus_Result> EducationStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EducationStatus_Result>("[V3].[EducationStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EInvoiceStatus")]
        public virtual IQueryable<EInvoiceStatus_Result> EInvoiceStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EInvoiceStatus_Result>("[V3].[EInvoiceStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EInvoiceWebService")]
        public virtual IQueryable<EInvoiceWebService_Result> EInvoiceWebService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EInvoiceWebService_Result>("[V3].[EInvoiceWebService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EMailService")]
        public virtual IQueryable<EMailService_Result> EMailService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EMailService_Result>("[V3].[EMailService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmailType")]
        public virtual IQueryable<EmailType_Result> EmailType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmailType_Result>("[V3].[EmailType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeAGIAmount")]
        public virtual IQueryable<EmployeeAGIAmount_Result> EmployeeAGIAmount(Nullable<decimal> companyCode, Nullable<short> validYear, Nullable<byte> validMonth)
        {
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeAGIAmount_Result>("[V3].[EmployeeAGIAmount](@CompanyCode, @ValidYear, @ValidMonth)", companyCodeParameter, validYearParameter, validMonthParameter);
        }
    
        [DbFunction("V3", "EmployeeAttributeDescriptions")]
        public virtual IQueryable<EmployeeAttributeDescriptions_Result> EmployeeAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeAttributeDescriptions_Result>("[V3].[EmployeeAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeDocumentType")]
        public virtual IQueryable<EmployeeDocumentType_Result> EmployeeDocumentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeDocumentType_Result>("[V3].[EmployeeDocumentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeEducationLevel")]
        public virtual IQueryable<EmployeeEducationLevel_Result> EmployeeEducationLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeEducationLevel_Result>("[V3].[EmployeeEducationLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeIncentiveAmount")]
        public virtual IQueryable<EmployeeIncentiveAmount_Result> EmployeeIncentiveAmount(Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeIncentiveAmount_Result>("[V3].[EmployeeIncentiveAmount](@ValidMonth, @ValidYear)", validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "EmployeeJobTitle")]
        public virtual IQueryable<EmployeeJobTitle_Result> EmployeeJobTitle(Nullable<byte> month, Nullable<short> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeJobTitle_Result>("[V3].[EmployeeJobTitle](@Month, @Year)", monthParameter, yearParameter);
        }
    
        [DbFunction("V3", "EmployeeLeaveDays")]
        public virtual IQueryable<EmployeeLeaveDays_Result> EmployeeLeaveDays(string employeeCode)
        {
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeLeaveDays_Result>("[V3].[EmployeeLeaveDays](@EmployeeCode)", employeeCodeParameter);
        }
    
        [DbFunction("V3", "EmployeePayType")]
        public virtual IQueryable<EmployeePayType_Result> EmployeePayType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeePayType_Result>("[V3].[EmployeePayType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeePrivateInsurance")]
        public virtual IQueryable<EmployeePrivateInsurance_Result> EmployeePrivateInsurance(Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeePrivateInsurance_Result>("[V3].[EmployeePrivateInsurance](@ValidMonth, @ValidYear)", validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "EmployeeRecordType")]
        public virtual IQueryable<EmployeeRecordType_Result> EmployeeRecordType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeRecordType_Result>("[V3].[EmployeeRecordType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeSocialInsuranceStatus")]
        public virtual IQueryable<EmployeeSocialInsuranceStatus_Result> EmployeeSocialInsuranceStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeSocialInsuranceStatus_Result>("[V3].[EmployeeSocialInsuranceStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeSpecialType")]
        public virtual IQueryable<EmployeeSpecialType_Result> EmployeeSpecialType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeSpecialType_Result>("[V3].[EmployeeSpecialType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeTaxStatus")]
        public virtual IQueryable<EmployeeTaxStatus_Result> EmployeeTaxStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeTaxStatus_Result>("[V3].[EmployeeTaxStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeWage")]
        public virtual IQueryable<EmployeeWage_Result> EmployeeWage(Nullable<byte> month, Nullable<short> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeWage_Result>("[V3].[EmployeeWage](@Month, @Year)", monthParameter, yearParameter);
        }
    
        [DbFunction("V3", "EmployeeWageOnlyOneEmployee")]
        public virtual IQueryable<EmployeeWageOnlyOneEmployee_Result> EmployeeWageOnlyOneEmployee(Nullable<byte> month, Nullable<short> year, string employeeCode)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeWageOnlyOneEmployee_Result>("[V3].[EmployeeWageOnlyOneEmployee](@Month, @Year, @EmployeeCode)", monthParameter, yearParameter, employeeCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeWorkPlace")]
        public virtual IQueryable<EmployeeWorkPlace_Result> EmployeeWorkPlace(Nullable<byte> month, Nullable<short> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeWorkPlace_Result>("[V3].[EmployeeWorkPlace](@Month, @Year)", monthParameter, yearParameter);
        }
    
        [DbFunction("V3", "EmployeeWorkPlaceOnlyOneEmployee")]
        public virtual IQueryable<EmployeeWorkPlaceOnlyOneEmployee_Result> EmployeeWorkPlaceOnlyOneEmployee(Nullable<byte> month, Nullable<short> year, string employeeCode)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            var employeeCodeParameter = employeeCode != null ?
                new ObjectParameter("EmployeeCode", employeeCode) :
                new ObjectParameter("EmployeeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeWorkPlaceOnlyOneEmployee_Result>("[V3].[EmployeeWorkPlaceOnlyOneEmployee](@Month, @Year, @EmployeeCode)", monthParameter, yearParameter, employeeCodeParameter);
        }
    
        [DbFunction("V3", "EmployeeWorkPlaces")]
        public virtual IQueryable<EmployeeWorkPlaces_Result> EmployeeWorkPlaces()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeWorkPlaces_Result>("[V3].[EmployeeWorkPlaces]()");
        }
    
        [DbFunction("V3", "EmployeeWorkPlaceWithoutJobDepartmentDetail")]
        public virtual IQueryable<EmployeeWorkPlaceWithoutJobDepartmentDetail_Result> EmployeeWorkPlaceWithoutJobDepartmentDetail(Nullable<byte> month, Nullable<short> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(byte));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeeWorkPlaceWithoutJobDepartmentDetail_Result>("[V3].[EmployeeWorkPlaceWithoutJobDepartmentDetail](@Month, @Year)", monthParameter, yearParameter);
        }
    
        [DbFunction("V3", "EmployeLeaveRequestCumulative")]
        public virtual IQueryable<EmployeLeaveRequestCumulative_Result> EmployeLeaveRequestCumulative(Nullable<System.Guid> employeeLeaveRequestHeaderID)
        {
            var employeeLeaveRequestHeaderIDParameter = employeeLeaveRequestHeaderID.HasValue ?
                new ObjectParameter("EmployeeLeaveRequestHeaderID", employeeLeaveRequestHeaderID) :
                new ObjectParameter("EmployeeLeaveRequestHeaderID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmployeLeaveRequestCumulative_Result>("[V3].[EmployeLeaveRequestCumulative](@EmployeeLeaveRequestHeaderID)", employeeLeaveRequestHeaderIDParameter);
        }
    
        [DbFunction("V3", "EmploymentLaw")]
        public virtual IQueryable<EmploymentLaw_Result> EmploymentLaw(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmploymentLaw_Result>("[V3].[EmploymentLaw](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EmploymentLawSGKRelief")]
        public virtual IQueryable<EmploymentLawSGKRelief_Result> EmploymentLawSGKRelief(Nullable<decimal> companyCode, Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmploymentLawSGKRelief_Result>("[V3].[EmploymentLawSGKRelief](@CompanyCode, @ValidMonth, @ValidYear)", companyCodeParameter, validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "EmploymentLawSGKReliefDetail")]
        public virtual IQueryable<EmploymentLawSGKReliefDetail_Result> EmploymentLawSGKReliefDetail(Nullable<decimal> companyCode, Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmploymentLawSGKReliefDetail_Result>("[V3].[EmploymentLawSGKReliefDetail](@CompanyCode, @ValidMonth, @ValidYear)", companyCodeParameter, validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "EmploymentLawSGKReliefMatrix")]
        public virtual IQueryable<EmploymentLawSGKReliefMatrix_Result> EmploymentLawSGKReliefMatrix(Nullable<decimal> companyCode, Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EmploymentLawSGKReliefMatrix_Result>("[V3].[EmploymentLawSGKReliefMatrix](@CompanyCode, @ValidMonth, @ValidYear)", companyCodeParameter, validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "EShipmentStatus")]
        public virtual IQueryable<EShipmentStatus_Result> EShipmentStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EShipmentStatus_Result>("[V3].[EShipmentStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EShipmentWebService")]
        public virtual IQueryable<EShipmentWebService_Result> EShipmentWebService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EShipmentWebService_Result>("[V3].[EShipmentWebService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExchangeType")]
        public virtual IQueryable<ExchangeType_Result> ExchangeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExchangeType_Result>("[V3].[ExchangeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExecutionOffice")]
        public virtual IQueryable<ExecutionOffice_Result> ExecutionOffice(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExecutionOffice_Result>("[V3].[ExecutionOffice](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExpenseAttributeDescriptions")]
        public virtual IQueryable<ExpenseAttributeDescriptions_Result> ExpenseAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExpenseAttributeDescriptions_Result>("[V3].[ExpenseAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExpensePeriod")]
        public virtual IQueryable<ExpensePeriod_Result> ExpensePeriod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExpensePeriod_Result>("[V3].[ExpensePeriod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExpenseSlipType")]
        public virtual IQueryable<ExpenseSlipType_Result> ExpenseSlipType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExpenseSlipType_Result>("[V3].[ExpenseSlipType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExpenseType")]
        public virtual IQueryable<ExpenseType_Result> ExpenseType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExpenseType_Result>("[V3].[ExpenseType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExportFile")]
        public virtual IQueryable<ExportFile_Result> ExportFile(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExportFile_Result>("[V3].[ExportFile](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExportFileAttribute")]
        public virtual IQueryable<ExportFileAttribute_Result> ExportFileAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExportFileAttribute_Result>("[V3].[ExportFileAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExportFileAttributeDescriptions")]
        public virtual IQueryable<ExportFileAttributeDescriptions_Result> ExportFileAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExportFileAttributeDescriptions_Result>("[V3].[ExportFileAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExportFileAttributeType")]
        public virtual IQueryable<ExportFileAttributeType_Result> ExportFileAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExportFileAttributeType_Result>("[V3].[ExportFileAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ExportType")]
        public virtual IQueryable<ExportType_Result> ExportType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ExportType_Result>("[V3].[ExportType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "EyeGlassSutType")]
        public virtual IQueryable<EyeGlassSutType_Result> EyeGlassSutType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<EyeGlassSutType_Result>("[V3].[EyeGlassSutType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Fabric")]
        public virtual IQueryable<Fabric_Result> Fabric(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fabric_Result>("[V3].[Fabric](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FastDeliveryCompany")]
        public virtual IQueryable<FastDeliveryCompany_Result> FastDeliveryCompany(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FastDeliveryCompany_Result>("[V3].[FastDeliveryCompany](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FileFormatType")]
        public virtual IQueryable<FileFormatType_Result> FileFormatType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FileFormatType_Result>("[V3].[FileFormatType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FinanceCompanyWebService")]
        public virtual IQueryable<FinanceCompanyWebService_Result> FinanceCompanyWebService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FinanceCompanyWebService_Result>("[V3].[FinanceCompanyWebService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FiscalPeriod")]
        public virtual IQueryable<FiscalPeriod_Result> FiscalPeriod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FiscalPeriod_Result>("[V3].[FiscalPeriod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FixedAssetAttributeDescriptions")]
        public virtual IQueryable<FixedAssetAttributeDescriptions_Result> FixedAssetAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FixedAssetAttributeDescriptions_Result>("[V3].[FixedAssetAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FixedAssetStatus")]
        public virtual IQueryable<FixedAssetStatus_Result> FixedAssetStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FixedAssetStatus_Result>("[V3].[FixedAssetStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FixedAssetType")]
        public virtual IQueryable<FixedAssetType_Result> FixedAssetType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FixedAssetType_Result>("[V3].[FixedAssetType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "fn_BasePriceLIST")]
        public virtual IQueryable<fn_BasePriceLIST_Result> fn_BasePriceLIST(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_BasePriceLIST_Result>("[V3].[fn_BasePriceLIST](@CountryCode)", countryCodeParameter);
        }
    
        [DbFunction("V3", "fn_BasePriceList1")]
        public virtual IQueryable<fn_BasePriceList1_Result> fn_BasePriceList1(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_BasePriceList1_Result>("[V3].[fn_BasePriceList1](@CountryCode)", countryCodeParameter);
        }
    
        [DbFunction("V3", "fn_DailyInvoiceList")]
        public virtual IQueryable<fn_DailyInvoiceList_Result> fn_DailyInvoiceList(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_DailyInvoiceList_Result>("[V3].[fn_DailyInvoiceList](@Date)", dateParameter);
        }
    
        [DbFunction("V3", "fn_GetNotPostedUTSTransactions")]
        public virtual IQueryable<fn_GetNotPostedUTSTransactions_Result> fn_GetNotPostedUTSTransactions(Nullable<decimal> companyCode)
        {
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetNotPostedUTSTransactions_Result>("[V3].[fn_GetNotPostedUTSTransactions](@CompanyCode)", companyCodeParameter);
        }
    
        [DbFunction("V3", "FocalType")]
        public virtual IQueryable<FocalType_Result> FocalType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FocalType_Result>("[V3].[FocalType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Folder")]
        public virtual IQueryable<Folder_Result> Folder(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Folder_Result>("[V3].[Folder](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ForeignLanguage")]
        public virtual IQueryable<ForeignLanguage_Result> ForeignLanguage(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ForeignLanguage_Result>("[V3].[ForeignLanguage](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ForeignTradeStatus")]
        public virtual IQueryable<ForeignTradeStatus_Result> ForeignTradeStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ForeignTradeStatus_Result>("[V3].[ForeignTradeStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FormatType")]
        public virtual IQueryable<FormatType_Result> FormatType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FormatType_Result>("[V3].[FormatType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FrameShapeType")]
        public virtual IQueryable<FrameShapeType_Result> FrameShapeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FrameShapeType_Result>("[V3].[FrameShapeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FrameType")]
        public virtual IQueryable<FrameType_Result> FrameType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FrameType_Result>("[V3].[FrameType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FTAttribute")]
        public virtual IQueryable<FTAttribute_Result> FTAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FTAttribute_Result>("[V3].[FTAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "FTAttributeType")]
        public virtual IQueryable<FTAttributeType_Result> FTAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FTAttributeType_Result>("[V3].[FTAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Gender")]
        public virtual IQueryable<Gender_Result> Gender(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Gender_Result>("[V3].[Gender](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GiftCardPaymentType")]
        public virtual IQueryable<GiftCardPaymentType_Result> GiftCardPaymentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GiftCardPaymentType_Result>("[V3].[GiftCardPaymentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAcc")]
        public virtual IQueryable<GLAcc_Result> GLAcc(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAcc_Result>("[V3].[GLAcc](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccAttribute")]
        public virtual IQueryable<GLAccAttribute_Result> GLAccAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccAttribute_Result>("[V3].[GLAccAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccAttributeDescriptions")]
        public virtual IQueryable<GLAccAttributeDescriptions_Result> GLAccAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccAttributeDescriptions_Result>("[V3].[GLAccAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccAttributeType")]
        public virtual IQueryable<GLAccAttributeType_Result> GLAccAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccAttributeType_Result>("[V3].[GLAccAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccClass")]
        public virtual IQueryable<GLAccClass_Result> GLAccClass(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccClass_Result>("[V3].[GLAccClass](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccGroup")]
        public virtual IQueryable<GLAccGroup_Result> GLAccGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccGroup_Result>("[V3].[GLAccGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccInfo")]
        public virtual IQueryable<GLAccInfo_Result> GLAccInfo(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccInfo_Result>("[V3].[GLAccInfo](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccMain")]
        public virtual IQueryable<GLAccMain_Result> GLAccMain(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccMain_Result>("[V3].[GLAccMain](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLAccSub")]
        public virtual IQueryable<GLAccSub_Result> GLAccSub(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLAccSub_Result>("[V3].[GLAccSub](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLReflection")]
        public virtual IQueryable<GLReflection_Result> GLReflection(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLReflection_Result>("[V3].[GLReflection](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "GLType")]
        public virtual IQueryable<GLType_Result> GLType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GLType_Result>("[V3].[GLType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "HandicapType")]
        public virtual IQueryable<HandicapType_Result> HandicapType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HandicapType_Result>("[V3].[HandicapType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ImportFile")]
        public virtual IQueryable<ImportFile_Result> ImportFile(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ImportFile_Result>("[V3].[ImportFile](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ImportFileAttribute")]
        public virtual IQueryable<ImportFileAttribute_Result> ImportFileAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ImportFileAttribute_Result>("[V3].[ImportFileAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ImportFileAttributeDescriptions")]
        public virtual IQueryable<ImportFileAttributeDescriptions_Result> ImportFileAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ImportFileAttributeDescriptions_Result>("[V3].[ImportFileAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ImportFileAttributeType")]
        public virtual IQueryable<ImportFileAttributeType_Result> ImportFileAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ImportFileAttributeType_Result>("[V3].[ImportFileAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InactivationReason")]
        public virtual IQueryable<InactivationReason_Result> InactivationReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InactivationReason_Result>("[V3].[InactivationReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "IncentiveType")]
        public virtual IQueryable<IncentiveType_Result> IncentiveType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<IncentiveType_Result>("[V3].[IncentiveType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "IncompleteDownPaymentDistributionType")]
        public virtual IQueryable<IncompleteDownPaymentDistributionType_Result> IncompleteDownPaymentDistributionType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<IncompleteDownPaymentDistributionType_Result>("[V3].[IncompleteDownPaymentDistributionType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Incoterm")]
        public virtual IQueryable<Incoterm_Result> Incoterm(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Incoterm_Result>("[V3].[Incoterm](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Industry")]
        public virtual IQueryable<Industry_Result> Industry(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Industry_Result>("[V3].[Industry](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InnerOrderType")]
        public virtual IQueryable<InnerOrderType_Result> InnerOrderType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InnerOrderType_Result>("[V3].[InnerOrderType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InnerProcess")]
        public virtual IQueryable<InnerProcess_Result> InnerProcess(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InnerProcess_Result>("[V3].[InnerProcess](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InsuranceAgency")]
        public virtual IQueryable<InsuranceAgency_Result> InsuranceAgency(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InsuranceAgency_Result>("[V3].[InsuranceAgency](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InsuranceType")]
        public virtual IQueryable<InsuranceType_Result> InsuranceType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InsuranceType_Result>("[V3].[InsuranceType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InternationalUnitOfMeasure")]
        public virtual IQueryable<InternationalUnitOfMeasure_Result> InternationalUnitOfMeasure(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InternationalUnitOfMeasure_Result>("[V3].[InternationalUnitOfMeasure](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InvoiceFormTypes")]
        public virtual IQueryable<InvoiceFormTypes_Result> InvoiceFormTypes(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InvoiceFormTypes_Result>("[V3].[InvoiceFormTypes](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InvoicePostalAddress")]
        public virtual IQueryable<InvoicePostalAddress_Result> InvoicePostalAddress(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InvoicePostalAddress_Result>("[V3].[InvoicePostalAddress](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InvoiceReturnType")]
        public virtual IQueryable<InvoiceReturnType_Result> InvoiceReturnType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InvoiceReturnType_Result>("[V3].[InvoiceReturnType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "InvoiceType")]
        public virtual IQueryable<InvoiceType_Result> InvoiceType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<InvoiceType_Result>("[V3].[InvoiceType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ITAttribute")]
        public virtual IQueryable<ITAttribute_Result> ITAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ITAttribute_Result>("[V3].[ITAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ITAttributeType")]
        public virtual IQueryable<ITAttributeType_Result> ITAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ITAttributeType_Result>("[V3].[ITAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Item")]
        public virtual IQueryable<Item_Result> Item(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Item_Result>("[V3].[Item](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemAccountGr")]
        public virtual IQueryable<ItemAccountGr_Result> ItemAccountGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemAccountGr_Result>("[V3].[ItemAccountGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemAttribute")]
        public virtual IQueryable<ItemAttribute_Result> ItemAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemAttribute_Result>("[V3].[ItemAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemAttributeType")]
        public virtual IQueryable<ItemAttributeType_Result> ItemAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemAttributeType_Result>("[V3].[ItemAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemBasePrice")]
        public virtual IQueryable<ItemBasePrice_Result> ItemBasePrice(string countryCode)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemBasePrice_Result>("[V3].[ItemBasePrice](@CountryCode)", countryCodeParameter);
        }
    
        [DbFunction("V3", "ItemDim1")]
        public virtual IQueryable<ItemDim1_Result> ItemDim1(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDim1_Result>("[V3].[ItemDim1](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemDim1EquMatrix")]
        public virtual IQueryable<ItemDim1EquMatrix_Result> ItemDim1EquMatrix()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDim1EquMatrix_Result>("[V3].[ItemDim1EquMatrix]()");
        }
    
        [DbFunction("V3", "ItemDim2EquMatrix")]
        public virtual IQueryable<ItemDim2EquMatrix_Result> ItemDim2EquMatrix()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDim2EquMatrix_Result>("[V3].[ItemDim2EquMatrix]()");
        }
    
        [DbFunction("V3", "ItemDim3EquMatrix")]
        public virtual IQueryable<ItemDim3EquMatrix_Result> ItemDim3EquMatrix()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDim3EquMatrix_Result>("[V3].[ItemDim3EquMatrix]()");
        }
    
        [DbFunction("V3", "ItemDimensions")]
        public virtual IQueryable<ItemDimensions_Result> ItemDimensions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDimensions_Result>("[V3].[ItemDimensions]()");
        }
    
        [DbFunction("V3", "ItemDimType")]
        public virtual IQueryable<ItemDimType_Result> ItemDimType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDimType_Result>("[V3].[ItemDimType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemDiscountGr")]
        public virtual IQueryable<ItemDiscountGr_Result> ItemDiscountGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemDiscountGr_Result>("[V3].[ItemDiscountGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemInventoryForProcess")]
        public virtual IQueryable<ItemInventoryForProcess_Result> ItemInventoryForProcess(string warehouseCode, string storeCode, Nullable<bool> inventoryOfWarehouse, Nullable<byte> itemTypeCode, string itemCode, string colorCode, string itemDim1Code, string itemDim2Code, string itemDim3Code, Nullable<System.DateTime> inventoryDate, Nullable<byte> currAccTypeCode, string currAccCode, Nullable<System.Guid> subCurrAccID, Nullable<byte> processFlowCode, Nullable<bool> colorDimDetail, Nullable<bool> addRemainingOrdersOnInventory)
        {
            var warehouseCodeParameter = warehouseCode != null ?
                new ObjectParameter("WarehouseCode", warehouseCode) :
                new ObjectParameter("WarehouseCode", typeof(string));
    
            var storeCodeParameter = storeCode != null ?
                new ObjectParameter("StoreCode", storeCode) :
                new ObjectParameter("StoreCode", typeof(string));
    
            var inventoryOfWarehouseParameter = inventoryOfWarehouse.HasValue ?
                new ObjectParameter("InventoryOfWarehouse", inventoryOfWarehouse) :
                new ObjectParameter("InventoryOfWarehouse", typeof(bool));
    
            var itemTypeCodeParameter = itemTypeCode.HasValue ?
                new ObjectParameter("ItemTypeCode", itemTypeCode) :
                new ObjectParameter("ItemTypeCode", typeof(byte));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var colorCodeParameter = colorCode != null ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(string));
    
            var itemDim1CodeParameter = itemDim1Code != null ?
                new ObjectParameter("ItemDim1Code", itemDim1Code) :
                new ObjectParameter("ItemDim1Code", typeof(string));
    
            var itemDim2CodeParameter = itemDim2Code != null ?
                new ObjectParameter("ItemDim2Code", itemDim2Code) :
                new ObjectParameter("ItemDim2Code", typeof(string));
    
            var itemDim3CodeParameter = itemDim3Code != null ?
                new ObjectParameter("ItemDim3Code", itemDim3Code) :
                new ObjectParameter("ItemDim3Code", typeof(string));
    
            var inventoryDateParameter = inventoryDate.HasValue ?
                new ObjectParameter("InventoryDate", inventoryDate) :
                new ObjectParameter("InventoryDate", typeof(System.DateTime));
    
            var currAccTypeCodeParameter = currAccTypeCode.HasValue ?
                new ObjectParameter("CurrAccTypeCode", currAccTypeCode) :
                new ObjectParameter("CurrAccTypeCode", typeof(byte));
    
            var currAccCodeParameter = currAccCode != null ?
                new ObjectParameter("CurrAccCode", currAccCode) :
                new ObjectParameter("CurrAccCode", typeof(string));
    
            var subCurrAccIDParameter = subCurrAccID.HasValue ?
                new ObjectParameter("SubCurrAccID", subCurrAccID) :
                new ObjectParameter("SubCurrAccID", typeof(System.Guid));
    
            var processFlowCodeParameter = processFlowCode.HasValue ?
                new ObjectParameter("ProcessFlowCode", processFlowCode) :
                new ObjectParameter("ProcessFlowCode", typeof(byte));
    
            var colorDimDetailParameter = colorDimDetail.HasValue ?
                new ObjectParameter("ColorDimDetail", colorDimDetail) :
                new ObjectParameter("ColorDimDetail", typeof(bool));
    
            var addRemainingOrdersOnInventoryParameter = addRemainingOrdersOnInventory.HasValue ?
                new ObjectParameter("AddRemainingOrdersOnInventory", addRemainingOrdersOnInventory) :
                new ObjectParameter("AddRemainingOrdersOnInventory", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemInventoryForProcess_Result>("[V3].[ItemInventoryForProcess](@WarehouseCode, @StoreCode, @InventoryOfWarehouse, @ItemTypeCode, @ItemCode, @ColorCode, @ItemDim1Code, @ItemDim2Code, @ItemDim3Code, @InventoryDate, @CurrAccTypeCode, @CurrAccCode, @SubCurrAccID, @ProcessFlowCode, @ColorDimDetail, @AddRemainingOrdersOnInventory)", warehouseCodeParameter, storeCodeParameter, inventoryOfWarehouseParameter, itemTypeCodeParameter, itemCodeParameter, colorCodeParameter, itemDim1CodeParameter, itemDim2CodeParameter, itemDim3CodeParameter, inventoryDateParameter, currAccTypeCodeParameter, currAccCodeParameter, subCurrAccIDParameter, processFlowCodeParameter, colorDimDetailParameter, addRemainingOrdersOnInventoryParameter);
        }
    
        [DbFunction("V3", "ItemInventoryForValidate")]
        public virtual IQueryable<ItemInventoryForValidate_Result> ItemInventoryForValidate(string warehouseCode, Nullable<byte> itemTypeCode, string itemCode, string colorCode, string itemDim1Code, string itemDim2Code, string itemDim3Code, Nullable<byte> currAccTypeCode, string currAccCode, Nullable<System.Guid> subCurrAccID, Nullable<byte> processFlowCode)
        {
            var warehouseCodeParameter = warehouseCode != null ?
                new ObjectParameter("WarehouseCode", warehouseCode) :
                new ObjectParameter("WarehouseCode", typeof(string));
    
            var itemTypeCodeParameter = itemTypeCode.HasValue ?
                new ObjectParameter("ItemTypeCode", itemTypeCode) :
                new ObjectParameter("ItemTypeCode", typeof(byte));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var colorCodeParameter = colorCode != null ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(string));
    
            var itemDim1CodeParameter = itemDim1Code != null ?
                new ObjectParameter("ItemDim1Code", itemDim1Code) :
                new ObjectParameter("ItemDim1Code", typeof(string));
    
            var itemDim2CodeParameter = itemDim2Code != null ?
                new ObjectParameter("ItemDim2Code", itemDim2Code) :
                new ObjectParameter("ItemDim2Code", typeof(string));
    
            var itemDim3CodeParameter = itemDim3Code != null ?
                new ObjectParameter("ItemDim3Code", itemDim3Code) :
                new ObjectParameter("ItemDim3Code", typeof(string));
    
            var currAccTypeCodeParameter = currAccTypeCode.HasValue ?
                new ObjectParameter("CurrAccTypeCode", currAccTypeCode) :
                new ObjectParameter("CurrAccTypeCode", typeof(byte));
    
            var currAccCodeParameter = currAccCode != null ?
                new ObjectParameter("CurrAccCode", currAccCode) :
                new ObjectParameter("CurrAccCode", typeof(string));
    
            var subCurrAccIDParameter = subCurrAccID.HasValue ?
                new ObjectParameter("SubCurrAccID", subCurrAccID) :
                new ObjectParameter("SubCurrAccID", typeof(System.Guid));
    
            var processFlowCodeParameter = processFlowCode.HasValue ?
                new ObjectParameter("ProcessFlowCode", processFlowCode) :
                new ObjectParameter("ProcessFlowCode", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemInventoryForValidate_Result>("[V3].[ItemInventoryForValidate](@WarehouseCode, @ItemTypeCode, @ItemCode, @ColorCode, @ItemDim1Code, @ItemDim2Code, @ItemDim3Code, @CurrAccTypeCode, @CurrAccCode, @SubCurrAccID, @ProcessFlowCode)", warehouseCodeParameter, itemTypeCodeParameter, itemCodeParameter, colorCodeParameter, itemDim1CodeParameter, itemDim2CodeParameter, itemDim3CodeParameter, currAccTypeCodeParameter, currAccCodeParameter, subCurrAccIDParameter, processFlowCodeParameter);
        }
    
        [DbFunction("V3", "ItemInventoryForValidate_Batch")]
        public virtual IQueryable<ItemInventoryForValidate_Batch_Result> ItemInventoryForValidate_Batch(string warehouseCode, Nullable<byte> itemTypeCode, string itemCode, string colorCode, string itemDim1Code, string itemDim2Code, string itemDim3Code, Nullable<byte> currAccTypeCode, string currAccCode, Nullable<System.Guid> subCurrAccID, Nullable<byte> processFlowCode, string batchCode, string sectionCode, Nullable<System.Guid> innerOrderLineID)
        {
            var warehouseCodeParameter = warehouseCode != null ?
                new ObjectParameter("WarehouseCode", warehouseCode) :
                new ObjectParameter("WarehouseCode", typeof(string));
    
            var itemTypeCodeParameter = itemTypeCode.HasValue ?
                new ObjectParameter("ItemTypeCode", itemTypeCode) :
                new ObjectParameter("ItemTypeCode", typeof(byte));
    
            var itemCodeParameter = itemCode != null ?
                new ObjectParameter("ItemCode", itemCode) :
                new ObjectParameter("ItemCode", typeof(string));
    
            var colorCodeParameter = colorCode != null ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(string));
    
            var itemDim1CodeParameter = itemDim1Code != null ?
                new ObjectParameter("ItemDim1Code", itemDim1Code) :
                new ObjectParameter("ItemDim1Code", typeof(string));
    
            var itemDim2CodeParameter = itemDim2Code != null ?
                new ObjectParameter("ItemDim2Code", itemDim2Code) :
                new ObjectParameter("ItemDim2Code", typeof(string));
    
            var itemDim3CodeParameter = itemDim3Code != null ?
                new ObjectParameter("ItemDim3Code", itemDim3Code) :
                new ObjectParameter("ItemDim3Code", typeof(string));
    
            var currAccTypeCodeParameter = currAccTypeCode.HasValue ?
                new ObjectParameter("CurrAccTypeCode", currAccTypeCode) :
                new ObjectParameter("CurrAccTypeCode", typeof(byte));
    
            var currAccCodeParameter = currAccCode != null ?
                new ObjectParameter("CurrAccCode", currAccCode) :
                new ObjectParameter("CurrAccCode", typeof(string));
    
            var subCurrAccIDParameter = subCurrAccID.HasValue ?
                new ObjectParameter("SubCurrAccID", subCurrAccID) :
                new ObjectParameter("SubCurrAccID", typeof(System.Guid));
    
            var processFlowCodeParameter = processFlowCode.HasValue ?
                new ObjectParameter("ProcessFlowCode", processFlowCode) :
                new ObjectParameter("ProcessFlowCode", typeof(byte));
    
            var batchCodeParameter = batchCode != null ?
                new ObjectParameter("BatchCode", batchCode) :
                new ObjectParameter("BatchCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var innerOrderLineIDParameter = innerOrderLineID.HasValue ?
                new ObjectParameter("InnerOrderLineID", innerOrderLineID) :
                new ObjectParameter("InnerOrderLineID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemInventoryForValidate_Batch_Result>("[V3].[ItemInventoryForValidate_Batch](@WarehouseCode, @ItemTypeCode, @ItemCode, @ColorCode, @ItemDim1Code, @ItemDim2Code, @ItemDim3Code, @CurrAccTypeCode, @CurrAccCode, @SubCurrAccID, @ProcessFlowCode, @BatchCode, @SectionCode, @InnerOrderLineID)", warehouseCodeParameter, itemTypeCodeParameter, itemCodeParameter, colorCodeParameter, itemDim1CodeParameter, itemDim2CodeParameter, itemDim3CodeParameter, currAccTypeCodeParameter, currAccCodeParameter, subCurrAccIDParameter, processFlowCodeParameter, batchCodeParameter, sectionCodeParameter, innerOrderLineIDParameter);
        }
    
        [DbFunction("V3", "ItemLikeType")]
        public virtual IQueryable<ItemLikeType_Result> ItemLikeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemLikeType_Result>("[V3].[ItemLikeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemList")]
        public virtual IQueryable<ItemList_Result> ItemList(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemList_Result>("[V3].[ItemList](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemOTAttribute")]
        public virtual IQueryable<ItemOTAttribute_Result> ItemOTAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemOTAttribute_Result>("[V3].[ItemOTAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemOTAttributeType")]
        public virtual IQueryable<ItemOTAttributeType_Result> ItemOTAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemOTAttributeType_Result>("[V3].[ItemOTAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemPaymentPlanGr")]
        public virtual IQueryable<ItemPaymentPlanGr_Result> ItemPaymentPlanGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemPaymentPlanGr_Result>("[V3].[ItemPaymentPlanGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemProcessPermitType")]
        public virtual IQueryable<ItemProcessPermitType_Result> ItemProcessPermitType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemProcessPermitType_Result>("[V3].[ItemProcessPermitType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemTaxGr")]
        public virtual IQueryable<ItemTaxGr_Result> ItemTaxGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTaxGr_Result>("[V3].[ItemTaxGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemTestType")]
        public virtual IQueryable<ItemTestType_Result> ItemTestType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTestType_Result>("[V3].[ItemTestType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemTextileCareSymbol")]
        public virtual IQueryable<ItemTextileCareSymbol_Result> ItemTextileCareSymbol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTextileCareSymbol_Result>("[V3].[ItemTextileCareSymbol]()");
        }
    
        [DbFunction("V3", "ItemTextileCareTemplate")]
        public virtual IQueryable<ItemTextileCareTemplate_Result> ItemTextileCareTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTextileCareTemplate_Result>("[V3].[ItemTextileCareTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemTransferNotApprovedByDate")]
        public virtual IQueryable<ItemTransferNotApprovedByDate_Result> ItemTransferNotApprovedByDate(Nullable<System.DateTime> approveDate)
        {
            var approveDateParameter = approveDate.HasValue ?
                new ObjectParameter("ApproveDate", approveDate) :
                new ObjectParameter("ApproveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTransferNotApprovedByDate_Result>("[V3].[ItemTransferNotApprovedByDate](@ApproveDate)", approveDateParameter);
        }
    
        [DbFunction("V3", "ItemTransferNotApprovedByDate_Batch")]
        public virtual IQueryable<ItemTransferNotApprovedByDate_Batch_Result> ItemTransferNotApprovedByDate_Batch(Nullable<System.DateTime> approveDate)
        {
            var approveDateParameter = approveDate.HasValue ?
                new ObjectParameter("ApproveDate", approveDate) :
                new ObjectParameter("ApproveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTransferNotApprovedByDate_Batch_Result>("[V3].[ItemTransferNotApprovedByDate_Batch](@ApproveDate)", approveDateParameter);
        }
    
        [DbFunction("V3", "ItemTransferNotApprovedByDateWithSerialNumber")]
        public virtual IQueryable<ItemTransferNotApprovedByDateWithSerialNumber_Result> ItemTransferNotApprovedByDateWithSerialNumber(Nullable<System.DateTime> approveDate)
        {
            var approveDateParameter = approveDate.HasValue ?
                new ObjectParameter("ApproveDate", approveDate) :
                new ObjectParameter("ApproveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemTransferNotApprovedByDateWithSerialNumber_Result>("[V3].[ItemTransferNotApprovedByDateWithSerialNumber](@ApproveDate)", approveDateParameter);
        }
    
        [DbFunction("V3", "ItemType")]
        public virtual IQueryable<ItemType_Result> ItemType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemType_Result>("[V3].[ItemType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ItemVendorGr")]
        public virtual IQueryable<ItemVendorGr_Result> ItemVendorGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ItemVendorGr_Result>("[V3].[ItemVendorGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobCandidateAttributeDescriptions")]
        public virtual IQueryable<JobCandidateAttributeDescriptions_Result> JobCandidateAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobCandidateAttributeDescriptions_Result>("[V3].[JobCandidateAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobCandidateEducationLevel")]
        public virtual IQueryable<JobCandidateEducationLevel_Result> JobCandidateEducationLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobCandidateEducationLevel_Result>("[V3].[JobCandidateEducationLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobDepartment")]
        public virtual IQueryable<JobDepartment_Result> JobDepartment(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobDepartment_Result>("[V3].[JobDepartment](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobInterviewResult")]
        public virtual IQueryable<JobInterviewResult_Result> JobInterviewResult(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobInterviewResult_Result>("[V3].[JobInterviewResult](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobPosition")]
        public virtual IQueryable<JobPosition_Result> JobPosition(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobPosition_Result>("[V3].[JobPosition](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobTitle")]
        public virtual IQueryable<JobTitle_Result> JobTitle(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobTitle_Result>("[V3].[JobTitle](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobTitleLevel")]
        public virtual IQueryable<JobTitleLevel_Result> JobTitleLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobTitleLevel_Result>("[V3].[JobTitleLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobTraining")]
        public virtual IQueryable<JobTraining_Result> JobTraining(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobTraining_Result>("[V3].[JobTraining](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobTrainingAttribute")]
        public virtual IQueryable<JobTrainingAttribute_Result> JobTrainingAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobTrainingAttribute_Result>("[V3].[JobTrainingAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobTrainingAttributeType")]
        public virtual IQueryable<JobTrainingAttributeType_Result> JobTrainingAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobTrainingAttributeType_Result>("[V3].[JobTrainingAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JobType")]
        public virtual IQueryable<JobType_Result> JobType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JobType_Result>("[V3].[JobType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JournalType")]
        public virtual IQueryable<JournalType_Result> JournalType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JournalType_Result>("[V3].[JournalType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "JournalTypeSub")]
        public virtual IQueryable<JournalTypeSub_Result> JournalTypeSub(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<JournalTypeSub_Result>("[V3].[JournalTypeSub](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "KnowLevel")]
        public virtual IQueryable<KnowLevel_Result> KnowLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<KnowLevel_Result>("[V3].[KnowLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LabelType")]
        public virtual IQueryable<LabelType_Result> LabelType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LabelType_Result>("[V3].[LabelType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LeaveType")]
        public virtual IQueryable<LeaveType_Result> LeaveType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LeaveType_Result>("[V3].[LeaveType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LegalResignation")]
        public virtual IQueryable<LegalResignation_Result> LegalResignation(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LegalResignation_Result>("[V3].[LegalResignation](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LegalResignationLocal")]
        public virtual IQueryable<LegalResignationLocal_Result> LegalResignationLocal(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LegalResignationLocal_Result>("[V3].[LegalResignationLocal](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LensType")]
        public virtual IQueryable<LensType_Result> LensType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LensType_Result>("[V3].[LensType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LetterOfGuaranteeAttribute")]
        public virtual IQueryable<LetterOfGuaranteeAttribute_Result> LetterOfGuaranteeAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LetterOfGuaranteeAttribute_Result>("[V3].[LetterOfGuaranteeAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LetterOfGuaranteeAttributeType")]
        public virtual IQueryable<LetterOfGuaranteeAttributeType_Result> LetterOfGuaranteeAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LetterOfGuaranteeAttributeType_Result>("[V3].[LetterOfGuaranteeAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LetterOfGuaranteeGivenAttributeDescriptions")]
        public virtual IQueryable<LetterOfGuaranteeGivenAttributeDescriptions_Result> LetterOfGuaranteeGivenAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LetterOfGuaranteeGivenAttributeDescriptions_Result>("[V3].[LetterOfGuaranteeGivenAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LetterOfGuaranteeReceivedAttributeDescriptions")]
        public virtual IQueryable<LetterOfGuaranteeReceivedAttributeDescriptions_Result> LetterOfGuaranteeReceivedAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LetterOfGuaranteeReceivedAttributeDescriptions_Result>("[V3].[LetterOfGuaranteeReceivedAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LetterOfGuaranteeType")]
        public virtual IQueryable<LetterOfGuaranteeType_Result> LetterOfGuaranteeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LetterOfGuaranteeType_Result>("[V3].[LetterOfGuaranteeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LetterType")]
        public virtual IQueryable<LetterType_Result> LetterType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LetterType_Result>("[V3].[LetterType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "LinkedProductType")]
        public virtual IQueryable<LinkedProductType_Result> LinkedProductType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<LinkedProductType_Result>("[V3].[LinkedProductType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Lot")]
        public virtual IQueryable<Lot_Result> Lot(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Lot_Result>("[V3].[Lot](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MainJobTitle")]
        public virtual IQueryable<MainJobTitle_Result> MainJobTitle(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MainJobTitle_Result>("[V3].[MainJobTitle](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MaladyType")]
        public virtual IQueryable<MaladyType_Result> MaladyType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MaladyType_Result>("[V3].[MaladyType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Manufacturer")]
        public virtual IQueryable<Manufacturer_Result> Manufacturer(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Manufacturer_Result>("[V3].[Manufacturer](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MaterialAttributeDescriptions")]
        public virtual IQueryable<MaterialAttributeDescriptions_Result> MaterialAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MaterialAttributeDescriptions_Result>("[V3].[MaterialAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MaterialFilterWithDescription")]
        public virtual IQueryable<MaterialFilterWithDescription_Result> MaterialFilterWithDescription(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MaterialFilterWithDescription_Result>("[V3].[MaterialFilterWithDescription](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MessageImportance")]
        public virtual IQueryable<MessageImportance_Result> MessageImportance(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MessageImportance_Result>("[V3].[MessageImportance](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MessageReason")]
        public virtual IQueryable<MessageReason_Result> MessageReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MessageReason_Result>("[V3].[MessageReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MessageType")]
        public virtual IQueryable<MessageType_Result> MessageType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MessageType_Result>("[V3].[MessageType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MilitaryServiceStatus")]
        public virtual IQueryable<MilitaryServiceStatus_Result> MilitaryServiceStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MilitaryServiceStatus_Result>("[V3].[MilitaryServiceStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "MissingWorkReason")]
        public virtual IQueryable<MissingWorkReason_Result> MissingWorkReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MissingWorkReason_Result>("[V3].[MissingWorkReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Nationality")]
        public virtual IQueryable<Nationality_Result> Nationality(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nationality_Result>("[V3].[Nationality](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "NebimV3Services")]
        public virtual IQueryable<NebimV3Services_Result> NebimV3Services(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NebimV3Services_Result>("[V3].[NebimV3Services](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "NotesPayableAttributeDescriptions")]
        public virtual IQueryable<NotesPayableAttributeDescriptions_Result> NotesPayableAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NotesPayableAttributeDescriptions_Result>("[V3].[NotesPayableAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "NotesReceivableAttributeDescriptions")]
        public virtual IQueryable<NotesReceivableAttributeDescriptions_Result> NotesReceivableAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NotesReceivableAttributeDescriptions_Result>("[V3].[NotesReceivableAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Office")]
        public virtual IQueryable<Office_Result> Office(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Office_Result>("[V3].[Office](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OfficeCOGSGr")]
        public virtual IQueryable<OfficeCOGSGr_Result> OfficeCOGSGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OfficeCOGSGr_Result>("[V3].[OfficeCOGSGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OfficePostalAddress")]
        public virtual IQueryable<OfficePostalAddress_Result> OfficePostalAddress(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OfficePostalAddress_Result>("[V3].[OfficePostalAddress](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OnlineBankServiceErrorJsonDataToTable")]
        public virtual IQueryable<OnlineBankServiceErrorJsonDataToTable_Result> OnlineBankServiceErrorJsonDataToTable(string jsondata)
        {
            var jsondataParameter = jsondata != null ?
                new ObjectParameter("jsondata", jsondata) :
                new ObjectParameter("jsondata", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OnlineBankServiceErrorJsonDataToTable_Result>("[V3].[OnlineBankServiceErrorJsonDataToTable](@jsondata)", jsondataParameter);
        }
    
        [DbFunction("V3", "OnlineBankWebService")]
        public virtual IQueryable<OnlineBankWebService_Result> OnlineBankWebService(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OnlineBankWebService_Result>("[V3].[OnlineBankWebService](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OpticalGroupRange")]
        public virtual IQueryable<OpticalGroupRange_Result> OpticalGroupRange(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OpticalGroupRange_Result>("[V3].[OpticalGroupRange](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OpticalSut")]
        public virtual IQueryable<OpticalSut_Result> OpticalSut(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OpticalSut_Result>("[V3].[OpticalSut](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OrderCancelReason")]
        public virtual IQueryable<OrderCancelReason_Result> OrderCancelReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OrderCancelReason_Result>("[V3].[OrderCancelReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OrderDeliveryRecordType")]
        public virtual IQueryable<OrderDeliveryRecordType_Result> OrderDeliveryRecordType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OrderDeliveryRecordType_Result>("[V3].[OrderDeliveryRecordType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OrderDeliveryStatus")]
        public virtual IQueryable<OrderDeliveryStatus_Result> OrderDeliveryStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OrderDeliveryStatus_Result>("[V3].[OrderDeliveryStatus]()");
        }
    
        [DbFunction("V3", "OrderStatus")]
        public virtual IQueryable<OrderStatus_Result> OrderStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OrderStatus_Result>("[V3].[OrderStatus]()");
        }
    
        [DbFunction("V3", "OrderType")]
        public virtual IQueryable<OrderType_Result> OrderType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OrderType_Result>("[V3].[OrderType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OtherDocumentType")]
        public virtual IQueryable<OtherDocumentType_Result> OtherDocumentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OtherDocumentType_Result>("[V3].[OtherDocumentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OtherPaymentType")]
        public virtual IQueryable<OtherPaymentType_Result> OtherPaymentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OtherPaymentType_Result>("[V3].[OtherPaymentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "OverdueDebits")]
        public virtual IQueryable<OverdueDebits_Result> OverdueDebits(Nullable<System.DateTime> dueDate)
        {
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OverdueDebits_Result>("[V3].[OverdueDebits](@DueDate)", dueDateParameter);
        }
    
        [DbFunction("V3", "PackageBrand")]
        public virtual IQueryable<PackageBrand_Result> PackageBrand(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PackageBrand_Result>("[V3].[PackageBrand](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PackageVolume")]
        public virtual IQueryable<PackageVolume_Result> PackageVolume(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PackageVolume_Result>("[V3].[PackageVolume](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PackagingType")]
        public virtual IQueryable<PackagingType_Result> PackagingType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PackagingType_Result>("[V3].[PackagingType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Pantone")]
        public virtual IQueryable<Pantone_Result> Pantone(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Pantone_Result>("[V3].[Pantone](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PaymentMeans")]
        public virtual IQueryable<PaymentMeans_Result> PaymentMeans(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PaymentMeans_Result>("[V3].[PaymentMeans](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PaymentMethod")]
        public virtual IQueryable<PaymentMethod_Result> PaymentMethod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PaymentMethod_Result>("[V3].[PaymentMethod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PaymentPlan")]
        public virtual IQueryable<PaymentPlan_Result> PaymentPlan(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PaymentPlan_Result>("[V3].[PaymentPlan](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PaymentProvider")]
        public virtual IQueryable<PaymentProvider_Result> PaymentProvider(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PaymentProvider_Result>("[V3].[PaymentProvider](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PaymentType")]
        public virtual IQueryable<PaymentType_Result> PaymentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PaymentType_Result>("[V3].[PaymentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Payrolls")]
        public virtual IQueryable<Payrolls_Result> Payrolls(string langCode, Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Payrolls_Result>("[V3].[Payrolls](@LangCode, @ValidMonth, @ValidYear)", langCodeParameter, validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "PayrollsMountly")]
        public virtual IQueryable<PayrollsMountly_Result> PayrollsMountly(string langCode, Nullable<byte> validMonth, Nullable<short> validYear)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var validMonthParameter = validMonth.HasValue ?
                new ObjectParameter("ValidMonth", validMonth) :
                new ObjectParameter("ValidMonth", typeof(byte));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PayrollsMountly_Result>("[V3].[PayrollsMountly](@LangCode, @ValidMonth, @ValidYear)", langCodeParameter, validMonthParameter, validYearParameter);
        }
    
        [DbFunction("V3", "PayrollType")]
        public virtual IQueryable<PayrollType_Result> PayrollType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PayrollType_Result>("[V3].[PayrollType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PayType")]
        public virtual IQueryable<PayType_Result> PayType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PayType_Result>("[V3].[PayType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PCT")]
        public virtual IQueryable<PCT_Result> PCT(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PCT_Result>("[V3].[PCT](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PerceptionOfFashion")]
        public virtual IQueryable<PerceptionOfFashion_Result> PerceptionOfFashion(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PerceptionOfFashion_Result>("[V3].[PerceptionOfFashion](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PickingType")]
        public virtual IQueryable<PickingType_Result> PickingType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PickingType_Result>("[V3].[PickingType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PlannedPayrollsMountly")]
        public virtual IQueryable<PlannedPayrollsMountly_Result> PlannedPayrollsMountly(string langCode, Nullable<short> validYear, string wagePlanTypeCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var validYearParameter = validYear.HasValue ?
                new ObjectParameter("ValidYear", validYear) :
                new ObjectParameter("ValidYear", typeof(short));
    
            var wagePlanTypeCodeParameter = wagePlanTypeCode != null ?
                new ObjectParameter("WagePlanTypeCode", wagePlanTypeCode) :
                new ObjectParameter("WagePlanTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PlannedPayrollsMountly_Result>("[V3].[PlannedPayrollsMountly](@LangCode, @ValidYear, @WagePlanTypeCode)", langCodeParameter, validYearParameter, wagePlanTypeCodeParameter);
        }
    
        [DbFunction("V3", "PlasticBagType")]
        public virtual IQueryable<PlasticBagType_Result> PlasticBagType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PlasticBagType_Result>("[V3].[PlasticBagType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PointBase")]
        public virtual IQueryable<PointBase_Result> PointBase(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PointBase_Result>("[V3].[PointBase](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PointModifyReason")]
        public virtual IQueryable<PointModifyReason_Result> PointModifyReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PointModifyReason_Result>("[V3].[PointModifyReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PointRecordType")]
        public virtual IQueryable<PointRecordType_Result> PointRecordType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PointRecordType_Result>("[V3].[PointRecordType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PolicyCustomerEdit")]
        public virtual IQueryable<PolicyCustomerEdit_Result> PolicyCustomerEdit(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PolicyCustomerEdit_Result>("[V3].[PolicyCustomerEdit](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PolicyCustomerPayment")]
        public virtual IQueryable<PolicyCustomerPayment_Result> PolicyCustomerPayment(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PolicyCustomerPayment_Result>("[V3].[PolicyCustomerPayment](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PolicyCustomerSharing")]
        public virtual IQueryable<PolicyCustomerSharing_Result> PolicyCustomerSharing(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PolicyCustomerSharing_Result>("[V3].[PolicyCustomerSharing](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PolicyVendorSharing")]
        public virtual IQueryable<PolicyVendorSharing_Result> PolicyVendorSharing(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PolicyVendorSharing_Result>("[V3].[PolicyVendorSharing](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Port")]
        public virtual IQueryable<Port_Result> Port(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Port_Result>("[V3].[Port](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "POSMode")]
        public virtual IQueryable<POSMode_Result> POSMode(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<POSMode_Result>("[V3].[POSMode](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PostAccType")]
        public virtual IQueryable<PostAccType_Result> PostAccType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PostAccType_Result>("[V3].[PostAccType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PosUI")]
        public virtual IQueryable<PosUI_Result> PosUI(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PosUI_Result>("[V3].[PosUI](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PotentialCustomerAttributeDescriptions")]
        public virtual IQueryable<PotentialCustomerAttributeDescriptions_Result> PotentialCustomerAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PotentialCustomerAttributeDescriptions_Result>("[V3].[PotentialCustomerAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PresentCardActivationProcess")]
        public virtual IQueryable<PresentCardActivationProcess_Result> PresentCardActivationProcess(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PresentCardActivationProcess_Result>("[V3].[PresentCardActivationProcess](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PresentCardActivationStatus")]
        public virtual IQueryable<PresentCardActivationStatus_Result> PresentCardActivationStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PresentCardActivationStatus_Result>("[V3].[PresentCardActivationStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PresentCardActivationType")]
        public virtual IQueryable<PresentCardActivationType_Result> PresentCardActivationType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PresentCardActivationType_Result>("[V3].[PresentCardActivationType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PresentCardType")]
        public virtual IQueryable<PresentCardType_Result> PresentCardType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PresentCardType_Result>("[V3].[PresentCardType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PrevJobType")]
        public virtual IQueryable<PrevJobType_Result> PrevJobType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PrevJobType_Result>("[V3].[PrevJobType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PriceGroup")]
        public virtual IQueryable<PriceGroup_Result> PriceGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PriceGroup_Result>("[V3].[PriceGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PriceListType")]
        public virtual IQueryable<PriceListType_Result> PriceListType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PriceListType_Result>("[V3].[PriceListType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Priority")]
        public virtual IQueryable<Priority_Result> Priority(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Priority_Result>("[V3].[Priority](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PrivateInsurance")]
        public virtual IQueryable<PrivateInsurance_Result> PrivateInsurance(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PrivateInsurance_Result>("[V3].[PrivateInsurance](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Process")]
        public virtual IQueryable<Process_Result> Process(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Process_Result>("[V3].[Process](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProcessFlow")]
        public virtual IQueryable<ProcessFlow_Result> ProcessFlow(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProcessFlow_Result>("[V3].[ProcessFlow](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProcessFlowDenyReason")]
        public virtual IQueryable<ProcessFlowDenyReason_Result> ProcessFlowDenyReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProcessFlowDenyReason_Result>("[V3].[ProcessFlowDenyReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductAttributeDescriptions")]
        public virtual IQueryable<ProductAttributeDescriptions_Result> ProductAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductAttributeDescriptions_Result>("[V3].[ProductAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductCollection")]
        public virtual IQueryable<ProductCollection_Result> ProductCollection(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductCollection_Result>("[V3].[ProductCollection](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductColorAttribute")]
        public virtual IQueryable<ProductColorAttribute_Result> ProductColorAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductColorAttribute_Result>("[V3].[ProductColorAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductColorAttributeDescriptions")]
        public virtual IQueryable<ProductColorAttributeDescriptions_Result> ProductColorAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductColorAttributeDescriptions_Result>("[V3].[ProductColorAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductColorAttributeType")]
        public virtual IQueryable<ProductColorAttributeType_Result> ProductColorAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductColorAttributeType_Result>("[V3].[ProductColorAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductColorSet")]
        public virtual IQueryable<ProductColorSet_Result> ProductColorSet(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductColorSet_Result>("[V3].[ProductColorSet](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductDimSet")]
        public virtual IQueryable<ProductDimSet_Result> ProductDimSet(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductDimSet_Result>("[V3].[ProductDimSet](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductFilterWithDescription")]
        public virtual IQueryable<ProductFilterWithDescription_Result> ProductFilterWithDescription(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductFilterWithDescription_Result>("[V3].[ProductFilterWithDescription](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductFirstValidPrices")]
        public virtual IQueryable<ProductFirstValidPrices_Result> ProductFirstValidPrices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductFirstValidPrices_Result>("[V3].[ProductFirstValidPrices]()");
        }
    
        [DbFunction("V3", "ProductHierarchy")]
        public virtual IQueryable<ProductHierarchy_Result> ProductHierarchy(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductHierarchy_Result>("[V3].[ProductHierarchy](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductHierarchyLevel")]
        public virtual IQueryable<ProductHierarchyLevel_Result> ProductHierarchyLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductHierarchyLevel_Result>("[V3].[ProductHierarchyLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductMeasuresOfVolume")]
        public virtual IQueryable<ProductMeasuresOfVolume_Result> ProductMeasuresOfVolume(string langCode, string productCode, string colorCode, string itemDim1Code, string itemDim2Code, string itemDim3Code)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var colorCodeParameter = colorCode != null ?
                new ObjectParameter("ColorCode", colorCode) :
                new ObjectParameter("ColorCode", typeof(string));
    
            var itemDim1CodeParameter = itemDim1Code != null ?
                new ObjectParameter("ItemDim1Code", itemDim1Code) :
                new ObjectParameter("ItemDim1Code", typeof(string));
    
            var itemDim2CodeParameter = itemDim2Code != null ?
                new ObjectParameter("ItemDim2Code", itemDim2Code) :
                new ObjectParameter("ItemDim2Code", typeof(string));
    
            var itemDim3CodeParameter = itemDim3Code != null ?
                new ObjectParameter("ItemDim3Code", itemDim3Code) :
                new ObjectParameter("ItemDim3Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductMeasuresOfVolume_Result>("[V3].[ProductMeasuresOfVolume](@LangCode, @ProductCode, @ColorCode, @ItemDim1Code, @ItemDim2Code, @ItemDim3Code)", langCodeParameter, productCodeParameter, colorCodeParameter, itemDim1CodeParameter, itemDim2CodeParameter, itemDim3CodeParameter);
        }
    
        [DbFunction("V3", "ProductPart")]
        public virtual IQueryable<ProductPart_Result> ProductPart(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductPart_Result>("[V3].[ProductPart](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductPointType")]
        public virtual IQueryable<ProductPointType_Result> ProductPointType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductPointType_Result>("[V3].[ProductPointType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductPriceAndInventory")]
        public virtual IQueryable<ProductPriceAndInventory_Result> ProductPriceAndInventory(string langCode, string priceGroup1Code, string priceGroup2Code, string warehouse1Code, string warehouse2Code, string barcodeTypeCode1, Nullable<int> lastNDay)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var priceGroup1CodeParameter = priceGroup1Code != null ?
                new ObjectParameter("PriceGroup1Code", priceGroup1Code) :
                new ObjectParameter("PriceGroup1Code", typeof(string));
    
            var priceGroup2CodeParameter = priceGroup2Code != null ?
                new ObjectParameter("PriceGroup2Code", priceGroup2Code) :
                new ObjectParameter("PriceGroup2Code", typeof(string));
    
            var warehouse1CodeParameter = warehouse1Code != null ?
                new ObjectParameter("Warehouse1Code", warehouse1Code) :
                new ObjectParameter("Warehouse1Code", typeof(string));
    
            var warehouse2CodeParameter = warehouse2Code != null ?
                new ObjectParameter("Warehouse2Code", warehouse2Code) :
                new ObjectParameter("Warehouse2Code", typeof(string));
    
            var barcodeTypeCode1Parameter = barcodeTypeCode1 != null ?
                new ObjectParameter("BarcodeTypeCode1", barcodeTypeCode1) :
                new ObjectParameter("BarcodeTypeCode1", typeof(string));
    
            var lastNDayParameter = lastNDay.HasValue ?
                new ObjectParameter("LastNDay", lastNDay) :
                new ObjectParameter("LastNDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductPriceAndInventory_Result>("[V3].[ProductPriceAndInventory](@LangCode, @PriceGroup1Code, @PriceGroup2Code, @Warehouse1Code, @Warehouse2Code, @BarcodeTypeCode1, @LastNDay)", langCodeParameter, priceGroup1CodeParameter, priceGroup2CodeParameter, warehouse1CodeParameter, warehouse2CodeParameter, barcodeTypeCode1Parameter, lastNDayParameter);
        }
    
        [DbFunction("V3", "ProductStatus")]
        public virtual IQueryable<ProductStatus_Result> ProductStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductStatus_Result>("[V3].[ProductStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductType")]
        public virtual IQueryable<ProductType_Result> ProductType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductType_Result>("[V3].[ProductType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ProductValidPrices")]
        public virtual IQueryable<ProductValidPrices_Result> ProductValidPrices(Nullable<System.DateTime> validDate, Nullable<System.TimeSpan> validTime)
        {
            var validDateParameter = validDate.HasValue ?
                new ObjectParameter("ValidDate", validDate) :
                new ObjectParameter("ValidDate", typeof(System.DateTime));
    
            var validTimeParameter = validTime.HasValue ?
                new ObjectParameter("ValidTime", validTime) :
                new ObjectParameter("ValidTime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductValidPrices_Result>("[V3].[ProductValidPrices](@ValidDate, @ValidTime)", validDateParameter, validTimeParameter);
        }
    
        [DbFunction("V3", "ProductValidPurchasePrices")]
        public virtual IQueryable<ProductValidPurchasePrices_Result> ProductValidPurchasePrices(Nullable<System.DateTime> validDate)
        {
            var validDateParameter = validDate.HasValue ?
                new ObjectParameter("ValidDate", validDate) :
                new ObjectParameter("ValidDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ProductValidPurchasePrices_Result>("[V3].[ProductValidPurchasePrices](@ValidDate)", validDateParameter);
        }
    
        [DbFunction("V3", "PromotionGroup")]
        public virtual IQueryable<PromotionGroup_Result> PromotionGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PromotionGroup_Result>("[V3].[PromotionGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "PurchasePlan")]
        public virtual IQueryable<PurchasePlan_Result> PurchasePlan(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PurchasePlan_Result>("[V3].[PurchasePlan](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "QuestionInputType")]
        public virtual IQueryable<QuestionInputType_Result> QuestionInputType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<QuestionInputType_Result>("[V3].[QuestionInputType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ReasonForNotShopping")]
        public virtual IQueryable<ReasonForNotShopping_Result> ReasonForNotShopping(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ReasonForNotShopping_Result>("[V3].[ReasonForNotShopping](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RecidivistType")]
        public virtual IQueryable<RecidivistType_Result> RecidivistType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RecidivistType_Result>("[V3].[RecidivistType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Reconciliation")]
        public virtual IQueryable<Reconciliation_Result> Reconciliation(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Reconciliation_Result>("[V3].[Reconciliation](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ReconciliationType")]
        public virtual IQueryable<ReconciliationType_Result> ReconciliationType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ReconciliationType_Result>("[V3].[ReconciliationType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Requisition")]
        public virtual IQueryable<Requisition_Result> Requisition(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Requisition_Result>("[V3].[Requisition](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RequisitionAttribute")]
        public virtual IQueryable<RequisitionAttribute_Result> RequisitionAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RequisitionAttribute_Result>("[V3].[RequisitionAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RequisitionAttributeDescriptions")]
        public virtual IQueryable<RequisitionAttributeDescriptions_Result> RequisitionAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RequisitionAttributeDescriptions_Result>("[V3].[RequisitionAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RequisitionAttributeType")]
        public virtual IQueryable<RequisitionAttributeType_Result> RequisitionAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RequisitionAttributeType_Result>("[V3].[RequisitionAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RequisitionType")]
        public virtual IQueryable<RequisitionType_Result> RequisitionType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RequisitionType_Result>("[V3].[RequisitionType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ReserveType")]
        public virtual IQueryable<ReserveType_Result> ReserveType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ReserveType_Result>("[V3].[ReserveType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Resignation")]
        public virtual IQueryable<Resignation_Result> Resignation(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Resignation_Result>("[V3].[Resignation](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ResponsibilityArea")]
        public virtual IQueryable<ResponsibilityArea_Result> ResponsibilityArea(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ResponsibilityArea_Result>("[V3].[ResponsibilityArea](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RetailCustomerAttributeDescriptions")]
        public virtual IQueryable<RetailCustomerAttributeDescriptions_Result> RetailCustomerAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RetailCustomerAttributeDescriptions_Result>("[V3].[RetailCustomerAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ReturnReason")]
        public virtual IQueryable<ReturnReason_Result> ReturnReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ReturnReason_Result>("[V3].[ReturnReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Role")]
        public virtual IQueryable<Role_Result> Role(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Role_Result>("[V3].[Role](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RollNoteType")]
        public virtual IQueryable<RollNoteType_Result> RollNoteType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RollNoteType_Result>("[V3].[RollNoteType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "RollNoteTypeMatrix")]
        public virtual IQueryable<RollNoteTypeMatrix_Result> RollNoteTypeMatrix(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<RollNoteTypeMatrix_Result>("[V3].[RollNoteTypeMatrix](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SalesChannel")]
        public virtual IQueryable<SalesChannel_Result> SalesChannel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesChannel_Result>("[V3].[SalesChannel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SalespersonTeam")]
        public virtual IQueryable<SalespersonTeam_Result> SalespersonTeam(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalespersonTeam_Result>("[V3].[SalespersonTeam](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SalespersonType")]
        public virtual IQueryable<SalespersonType_Result> SalespersonType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalespersonType_Result>("[V3].[SalespersonType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SalesPlanType")]
        public virtual IQueryable<SalesPlanType_Result> SalesPlanType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesPlanType_Result>("[V3].[SalesPlanType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ScheduleJsonDataToTable")]
        public virtual IQueryable<ScheduleJsonDataToTable_Result> ScheduleJsonDataToTable(string scheduleType, Nullable<int> scheduleID)
        {
            var scheduleTypeParameter = scheduleType != null ?
                new ObjectParameter("ScheduleType", scheduleType) :
                new ObjectParameter("ScheduleType", typeof(string));
    
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ScheduleJsonDataToTable_Result>("[V3].[ScheduleJsonDataToTable](@ScheduleType, @ScheduleID)", scheduleTypeParameter, scheduleIDParameter);
        }
    
        [DbFunction("V3", "ScrapReason")]
        public virtual IQueryable<ScrapReason_Result> ScrapReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ScrapReason_Result>("[V3].[ScrapReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Season")]
        public virtual IQueryable<Season_Result> Season(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Season_Result>("[V3].[Season](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SectionType")]
        public virtual IQueryable<SectionType_Result> SectionType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SectionType_Result>("[V3].[SectionType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ServiceAttributeDescriptions")]
        public virtual IQueryable<ServiceAttributeDescriptions_Result> ServiceAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ServiceAttributeDescriptions_Result>("[V3].[ServiceAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SGKBorrowingType")]
        public virtual IQueryable<SGKBorrowingType_Result> SGKBorrowingType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SGKBorrowingType_Result>("[V3].[SGKBorrowingType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SGKInsuaranceType")]
        public virtual IQueryable<SGKInsuaranceType_Result> SGKInsuaranceType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SGKInsuaranceType_Result>("[V3].[SGKInsuaranceType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SGKMission")]
        public virtual IQueryable<SGKMission_Result> SGKMission(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SGKMission_Result>("[V3].[SGKMission](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SGKProfession")]
        public virtual IQueryable<SGKProfession_Result> SGKProfession(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SGKProfession_Result>("[V3].[SGKProfession](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SGKWorkPlaceSector")]
        public virtual IQueryable<SGKWorkPlaceSector_Result> SGKWorkPlaceSector(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SGKWorkPlaceSector_Result>("[V3].[SGKWorkPlaceSector](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ShipmentMethod")]
        public virtual IQueryable<ShipmentMethod_Result> ShipmentMethod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ShipmentMethod_Result>("[V3].[ShipmentMethod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "ShipmentType")]
        public virtual IQueryable<ShipmentType_Result> ShipmentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ShipmentType_Result>("[V3].[ShipmentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SMSJobType")]
        public virtual IQueryable<SMSJobType_Result> SMSJobType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SMSJobType_Result>("[V3].[SMSJobType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SMSStatus")]
        public virtual IQueryable<SMSStatus_Result> SMSStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SMSStatus_Result>("[V3].[SMSStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Software")]
        public virtual IQueryable<Software_Result> Software(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Software_Result>("[V3].[Software](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SoftwareType")]
        public virtual IQueryable<SoftwareType_Result> SoftwareType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SoftwareType_Result>("[V3].[SoftwareType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SpecialDayType")]
        public virtual IQueryable<SpecialDayType_Result> SpecialDayType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SpecialDayType_Result>("[V3].[SpecialDayType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StandardBarcodeType")]
        public virtual IQueryable<StandardBarcodeType_Result> StandardBarcodeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StandardBarcodeType_Result>("[V3].[StandardBarcodeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "State")]
        public virtual IQueryable<State_Result> State(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<State_Result>("[V3].[State](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreAttributeDescriptions")]
        public virtual IQueryable<StoreAttributeDescriptions_Result> StoreAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreAttributeDescriptions_Result>("[V3].[StoreAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreCapacityLevel")]
        public virtual IQueryable<StoreCapacityLevel_Result> StoreCapacityLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreCapacityLevel_Result>("[V3].[StoreCapacityLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreClimateZone")]
        public virtual IQueryable<StoreClimateZone_Result> StoreClimateZone(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreClimateZone_Result>("[V3].[StoreClimateZone](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreConcept")]
        public virtual IQueryable<StoreConcept_Result> StoreConcept(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreConcept_Result>("[V3].[StoreConcept](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreCRMGroup")]
        public virtual IQueryable<StoreCRMGroup_Result> StoreCRMGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreCRMGroup_Result>("[V3].[StoreCRMGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreDistributionGroup")]
        public virtual IQueryable<StoreDistributionGroup_Result> StoreDistributionGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreDistributionGroup_Result>("[V3].[StoreDistributionGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreHierarchy")]
        public virtual IQueryable<StoreHierarchy_Result> StoreHierarchy(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreHierarchy_Result>("[V3].[StoreHierarchy](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreHierarchyLevel")]
        public virtual IQueryable<StoreHierarchyLevel_Result> StoreHierarchyLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreHierarchyLevel_Result>("[V3].[StoreHierarchyLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoreInfo")]
        public virtual IQueryable<StoreInfo_Result> StoreInfo(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoreInfo_Result>("[V3].[StoreInfo](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StorePriceLevel")]
        public virtual IQueryable<StorePriceLevel_Result> StorePriceLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StorePriceLevel_Result>("[V3].[StorePriceLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "StoryBoard")]
        public virtual IQueryable<StoryBoard_Result> StoryBoard(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StoryBoard_Result>("[V3].[StoryBoard](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SubCurrAccAttribute")]
        public virtual IQueryable<SubCurrAccAttribute_Result> SubCurrAccAttribute(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubCurrAccAttribute_Result>("[V3].[SubCurrAccAttribute](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SubCurrAccAttributeDescriptions")]
        public virtual IQueryable<SubCurrAccAttributeDescriptions_Result> SubCurrAccAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubCurrAccAttributeDescriptions_Result>("[V3].[SubCurrAccAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SubCurrAccAttributeType")]
        public virtual IQueryable<SubCurrAccAttributeType_Result> SubCurrAccAttributeType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubCurrAccAttributeType_Result>("[V3].[SubCurrAccAttributeType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SubCurrAccAverageDueDate")]
        public virtual IQueryable<SubCurrAccAverageDueDate_Result> SubCurrAccAverageDueDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubCurrAccAverageDueDate_Result>("[V3].[SubCurrAccAverageDueDate]()");
        }
    
        [DbFunction("V3", "SubJobDepartment")]
        public virtual IQueryable<SubJobDepartment_Result> SubJobDepartment(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubJobDepartment_Result>("[V3].[SubJobDepartment](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SubSeason")]
        public virtual IQueryable<SubSeason_Result> SubSeason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubSeason_Result>("[V3].[SubSeason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SubVendorAttributeDescriptions")]
        public virtual IQueryable<SubVendorAttributeDescriptions_Result> SubVendorAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SubVendorAttributeDescriptions_Result>("[V3].[SubVendorAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SupportRequestStatus")]
        public virtual IQueryable<SupportRequestStatus_Result> SupportRequestStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SupportRequestStatus_Result>("[V3].[SupportRequestStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SupportRequestStatusWithoutLastTransactionInfo")]
        public virtual IQueryable<SupportRequestStatusWithoutLastTransactionInfo_Result> SupportRequestStatusWithoutLastTransactionInfo(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SupportRequestStatusWithoutLastTransactionInfo_Result>("[V3].[SupportRequestStatusWithoutLastTransactionInfo](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SupportResolveType")]
        public virtual IQueryable<SupportResolveType_Result> SupportResolveType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SupportResolveType_Result>("[V3].[SupportResolveType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SupportStatus")]
        public virtual IQueryable<SupportStatus_Result> SupportStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SupportStatus_Result>("[V3].[SupportStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SupportType")]
        public virtual IQueryable<SupportType_Result> SupportType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SupportType_Result>("[V3].[SupportType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Survey")]
        public virtual IQueryable<Survey_Result> Survey(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Survey_Result>("[V3].[Survey](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SurveyQuestion")]
        public virtual IQueryable<SurveyQuestion_Result> SurveyQuestion(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SurveyQuestion_Result>("[V3].[SurveyQuestion](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SurveyQuestionOption")]
        public virtual IQueryable<SurveyQuestionOption_Result> SurveyQuestionOption(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SurveyQuestionOption_Result>("[V3].[SurveyQuestionOption](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "SurveySection")]
        public virtual IQueryable<SurveySection_Result> SurveySection(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SurveySection_Result>("[V3].[SurveySection](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TaxDistrict")]
        public virtual IQueryable<TaxDistrict_Result> TaxDistrict(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TaxDistrict_Result>("[V3].[TaxDistrict](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TaxExemption")]
        public virtual IQueryable<TaxExemption_Result> TaxExemption(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TaxExemption_Result>("[V3].[TaxExemption](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TaxOffice")]
        public virtual IQueryable<TaxOffice_Result> TaxOffice(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TaxOffice_Result>("[V3].[TaxOffice](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TaxPaymentAccType")]
        public virtual IQueryable<TaxPaymentAccType_Result> TaxPaymentAccType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TaxPaymentAccType_Result>("[V3].[TaxPaymentAccType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TaxPaymentType")]
        public virtual IQueryable<TaxPaymentType_Result> TaxPaymentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TaxPaymentType_Result>("[V3].[TaxPaymentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TaxType")]
        public virtual IQueryable<TaxType_Result> TaxType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TaxType_Result>("[V3].[TaxType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Test")]
        public virtual IQueryable<Test_Result> Test(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Test_Result>("[V3].[Test](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TestType")]
        public virtual IQueryable<TestType_Result> TestType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TestType_Result>("[V3].[TestType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TextileCareSymbol")]
        public virtual IQueryable<TextileCareSymbol_Result> TextileCareSymbol(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TextileCareSymbol_Result>("[V3].[TextileCareSymbol](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TextileCareSymbolGr")]
        public virtual IQueryable<TextileCareSymbolGr_Result> TextileCareSymbolGr(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TextileCareSymbolGr_Result>("[V3].[TextileCareSymbolGr](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TimePeriod")]
        public virtual IQueryable<TimePeriod_Result> TimePeriod(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TimePeriod_Result>("[V3].[TimePeriod](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Title")]
        public virtual IQueryable<Title_Result> Title(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Title_Result>("[V3].[Title](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TransactionCancelReason")]
        public virtual IQueryable<TransactionCancelReason_Result> TransactionCancelReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TransactionCancelReason_Result>("[V3].[TransactionCancelReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TransferPlanRule")]
        public virtual IQueryable<TransferPlanRule_Result> TransferPlanRule(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TransferPlanRule_Result>("[V3].[TransferPlanRule](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TransferPlanTemplate")]
        public virtual IQueryable<TransferPlanTemplate_Result> TransferPlanTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TransferPlanTemplate_Result>("[V3].[TransferPlanTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TransportMode")]
        public virtual IQueryable<TransportMode_Result> TransportMode(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TransportMode_Result>("[V3].[TransportMode](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TransType")]
        public virtual IQueryable<TransType_Result> TransType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TransType_Result>("[V3].[TransType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "TurnoverTargetType")]
        public virtual IQueryable<TurnoverTargetType_Result> TurnoverTargetType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TurnoverTargetType_Result>("[V3].[TurnoverTargetType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UnDeliveryReason")]
        public virtual IQueryable<UnDeliveryReason_Result> UnDeliveryReason(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UnDeliveryReason_Result>("[V3].[UnDeliveryReason](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UnitOfMeasure")]
        public virtual IQueryable<UnitOfMeasure_Result> UnitOfMeasure(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UnitOfMeasure_Result>("[V3].[UnitOfMeasure](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "University")]
        public virtual IQueryable<University_Result> University(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<University_Result>("[V3].[University](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UniversityFaculty")]
        public virtual IQueryable<UniversityFaculty_Result> UniversityFaculty(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UniversityFaculty_Result>("[V3].[UniversityFaculty](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UniversityFacultyDep")]
        public virtual IQueryable<UniversityFacultyDep_Result> UniversityFacultyDep(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UniversityFacultyDep_Result>("[V3].[UniversityFacultyDep](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UniversityLevel")]
        public virtual IQueryable<UniversityLevel_Result> UniversityLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UniversityLevel_Result>("[V3].[UniversityLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UniversityType")]
        public virtual IQueryable<UniversityType_Result> UniversityType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UniversityType_Result>("[V3].[UniversityType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "UserWarning")]
        public virtual IQueryable<UserWarning_Result> UserWarning(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UserWarning_Result>("[V3].[UserWarning](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Vat")]
        public virtual IQueryable<Vat_Result> Vat(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Vat_Result>("[V3].[Vat](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "VehicleType")]
        public virtual IQueryable<VehicleType_Result> VehicleType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VehicleType_Result>("[V3].[VehicleType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "VendorAttributeDescriptions")]
        public virtual IQueryable<VendorAttributeDescriptions_Result> VendorAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VendorAttributeDescriptions_Result>("[V3].[VendorAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "VendorSubCurrAccAttributeDescriptions")]
        public virtual IQueryable<VendorSubCurrAccAttributeDescriptions_Result> VendorSubCurrAccAttributeDescriptions(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VendorSubCurrAccAttributeDescriptions_Result>("[V3].[VendorSubCurrAccAttributeDescriptions](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "VendorType")]
        public virtual IQueryable<VendorType_Result> VendorType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VendorType_Result>("[V3].[VendorType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "VisitFrequency")]
        public virtual IQueryable<VisitFrequency_Result> VisitFrequency(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<VisitFrequency_Result>("[V3].[VisitFrequency](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WageGarnishmentType")]
        public virtual IQueryable<WageGarnishmentType_Result> WageGarnishmentType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WageGarnishmentType_Result>("[V3].[WageGarnishmentType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WagePlanType")]
        public virtual IQueryable<WagePlanType_Result> WagePlanType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WagePlanType_Result>("[V3].[WagePlanType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Warehouse")]
        public virtual IQueryable<Warehouse_Result> Warehouse(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Warehouse_Result>("[V3].[Warehouse](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WarehouseCategory")]
        public virtual IQueryable<WarehouseCategory_Result> WarehouseCategory(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WarehouseCategory_Result>("[V3].[WarehouseCategory](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WarehouseChannelTemplate")]
        public virtual IQueryable<WarehouseChannelTemplate_Result> WarehouseChannelTemplate(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WarehouseChannelTemplate_Result>("[V3].[WarehouseChannelTemplate](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WarehouseOwner")]
        public virtual IQueryable<WarehouseOwner_Result> WarehouseOwner(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WarehouseOwner_Result>("[V3].[WarehouseOwner](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WarehousePostalAddress")]
        public virtual IQueryable<WarehousePostalAddress_Result> WarehousePostalAddress(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WarehousePostalAddress_Result>("[V3].[WarehousePostalAddress](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WarehouseType")]
        public virtual IQueryable<WarehouseType_Result> WarehouseType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WarehouseType_Result>("[V3].[WarehouseType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkDangerLevel")]
        public virtual IQueryable<WorkDangerLevel_Result> WorkDangerLevel(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkDangerLevel_Result>("[V3].[WorkDangerLevel](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkForce")]
        public virtual IQueryable<WorkForce_Result> WorkForce(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkForce_Result>("[V3].[WorkForce](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkPlace")]
        public virtual IQueryable<WorkPlace_Result> WorkPlace(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkPlace_Result>("[V3].[WorkPlace](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkPlaceAccounts")]
        public virtual IQueryable<WorkPlaceAccounts_Result> WorkPlaceAccounts(string langCode, Nullable<decimal> companyCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkPlaceAccounts_Result>("[V3].[WorkPlaceAccounts](@LangCode, @CompanyCode)", langCodeParameter, companyCodeParameter);
        }
    
        [DbFunction("V3", "WorkPlaceGLAccs")]
        public virtual IQueryable<WorkPlaceGLAccs_Result> WorkPlaceGLAccs(string langCode, Nullable<decimal> companyCode, string workPlaceCode, string jobDepartmentCode, Nullable<bool> withDescriptions, Nullable<bool> useFilter)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            var companyCodeParameter = companyCode.HasValue ?
                new ObjectParameter("CompanyCode", companyCode) :
                new ObjectParameter("CompanyCode", typeof(decimal));
    
            var workPlaceCodeParameter = workPlaceCode != null ?
                new ObjectParameter("WorkPlaceCode", workPlaceCode) :
                new ObjectParameter("WorkPlaceCode", typeof(string));
    
            var jobDepartmentCodeParameter = jobDepartmentCode != null ?
                new ObjectParameter("JobDepartmentCode", jobDepartmentCode) :
                new ObjectParameter("JobDepartmentCode", typeof(string));
    
            var withDescriptionsParameter = withDescriptions.HasValue ?
                new ObjectParameter("WithDescriptions", withDescriptions) :
                new ObjectParameter("WithDescriptions", typeof(bool));
    
            var useFilterParameter = useFilter.HasValue ?
                new ObjectParameter("UseFilter", useFilter) :
                new ObjectParameter("UseFilter", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkPlaceGLAccs_Result>("[V3].[WorkPlaceGLAccs](@LangCode, @CompanyCode, @WorkPlaceCode, @JobDepartmentCode, @WithDescriptions, @UseFilter)", langCodeParameter, companyCodeParameter, workPlaceCodeParameter, jobDepartmentCodeParameter, withDescriptionsParameter, useFilterParameter);
        }
    
        [DbFunction("V3", "WorkPlaceGroup")]
        public virtual IQueryable<WorkPlaceGroup_Result> WorkPlaceGroup(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkPlaceGroup_Result>("[V3].[WorkPlaceGroup](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkplaceKind")]
        public virtual IQueryable<WorkplaceKind_Result> WorkplaceKind(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkplaceKind_Result>("[V3].[WorkplaceKind](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkplacePropertyStatus")]
        public virtual IQueryable<WorkplacePropertyStatus_Result> WorkplacePropertyStatus(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkplacePropertyStatus_Result>("[V3].[WorkplacePropertyStatus](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "WorkPlaceType")]
        public virtual IQueryable<WorkPlaceType_Result> WorkPlaceType(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<WorkPlaceType_Result>("[V3].[WorkPlaceType](@LangCode)", langCodeParameter);
        }
    
        [DbFunction("V3", "Zone")]
        public virtual IQueryable<Zone_Result> Zone(string langCode)
        {
            var langCodeParameter = langCode != null ?
                new ObjectParameter("LangCode", langCode) :
                new ObjectParameter("LangCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Zone_Result>("[V3].[Zone](@LangCode)", langCodeParameter);
        }
    }
}
